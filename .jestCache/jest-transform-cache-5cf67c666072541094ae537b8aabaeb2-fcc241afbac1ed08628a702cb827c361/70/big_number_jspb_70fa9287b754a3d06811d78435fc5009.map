{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/proto-ts/big_number_js.pb.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/proto-ts/big_number_js.pb.ts"],"sourcesContent":["// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\n// Source: big_number_js.proto\r\n/* eslint-disable */\r\n\r\nimport type { ByteSource } from \"protoscript\";\r\nimport { BinaryReader, BinaryWriter } from \"protoscript\";\r\n\r\n//========================================//\r\n//                 Types                  //\r\n//========================================//\r\n\r\n/**\r\n **\r\n *  Property representation of a bignumber.js instance. See:\r\n *  https://mikemcl.github.io/bignumber.js/#instance-properties\r\n */\r\nexport interface BigNumberJs {\r\n  c: bigint[];\r\n  e?: number | null | undefined;\r\n  /**\r\n   * `true` -> 1, `false` -> -1\r\n   */\r\n  s?: boolean | null | undefined;\r\n}\r\n\r\n//========================================//\r\n//        Protobuf Encode / Decode        //\r\n//========================================//\r\n\r\nexport const BigNumberJs = {\r\n  /**\r\n   * Serializes BigNumberJs to protobuf.\r\n   */\r\n  encode: function (msg: Partial<BigNumberJs>): Uint8Array {\r\n    return BigNumberJs._writeMessage(msg, new BinaryWriter()).getResultBuffer();\r\n  },\r\n\r\n  /**\r\n   * Deserializes BigNumberJs from protobuf.\r\n   */\r\n  decode: function (bytes: ByteSource): BigNumberJs {\r\n    return BigNumberJs._readMessage(\r\n      BigNumberJs.initialize(),\r\n      new BinaryReader(bytes)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes BigNumberJs with all fields set to their default value.\r\n   */\r\n  initialize: function (): BigNumberJs {\r\n    return {\r\n      c: [],\r\n      e: undefined,\r\n      s: undefined,\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<BigNumberJs>,\r\n    writer: BinaryWriter\r\n  ): BinaryWriter {\r\n    if (msg.c?.length) {\r\n      writer.writePackedInt64String(\r\n        1,\r\n        msg.c.map((x) => x.toString() as any)\r\n      );\r\n    }\r\n    if (msg.e != undefined) {\r\n      writer.writeSint32(2, msg.e);\r\n    }\r\n    if (msg.s != undefined) {\r\n      writer.writeBool(3, msg.s);\r\n    }\r\n    return writer;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: BigNumberJs, reader: BinaryReader): BigNumberJs {\r\n    while (reader.nextField()) {\r\n      const field = reader.getFieldNumber();\r\n      switch (field) {\r\n        case 1: {\r\n          if (reader.isDelimited()) {\r\n            msg.c.push(...reader.readPackedInt64String().map(BigInt));\r\n          } else {\r\n            msg.c.push(BigInt(reader.readInt64String()));\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          msg.e = reader.readSint32();\r\n          break;\r\n        }\r\n        case 3: {\r\n          msg.s = reader.readBool();\r\n          break;\r\n        }\r\n        default: {\r\n          reader.skipField();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\n//========================================//\r\n//          JSON Encode / Decode          //\r\n//========================================//\r\n\r\nexport const BigNumberJsJSON = {\r\n  /**\r\n   * Serializes BigNumberJs to JSON.\r\n   */\r\n  encode: function (msg: Partial<BigNumberJs>): string {\r\n    return JSON.stringify(BigNumberJsJSON._writeMessage(msg));\r\n  },\r\n\r\n  /**\r\n   * Deserializes BigNumberJs from JSON.\r\n   */\r\n  decode: function (json: string): BigNumberJs {\r\n    return BigNumberJsJSON._readMessage(\r\n      BigNumberJsJSON.initialize(),\r\n      JSON.parse(json)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes BigNumberJs with all fields set to their default value.\r\n   */\r\n  initialize: function (): BigNumberJs {\r\n    return {\r\n      c: [],\r\n      e: undefined,\r\n      s: undefined,\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (msg: Partial<BigNumberJs>): Record<string, unknown> {\r\n    const json: Record<string, unknown> = {};\r\n    if (msg.c?.length) {\r\n      json[\"c\"] = msg.c.map((x) => x.toString());\r\n    }\r\n    if (msg.e != undefined) {\r\n      json[\"e\"] = msg.e;\r\n    }\r\n    if (msg.s != undefined) {\r\n      json[\"s\"] = msg.s;\r\n    }\r\n    return json;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: BigNumberJs, json: any): BigNumberJs {\r\n    const _c = json[\"c\"];\r\n    if (_c) {\r\n      msg.c = _c.map(BigInt);\r\n    }\r\n    const _e = json[\"e\"];\r\n    if (_e) {\r\n      msg.e = _e;\r\n    }\r\n    const _s = json[\"s\"];\r\n    if (_s) {\r\n      msg.s = _s;\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n"],"version":3}