a83f7448459edb906bed9bd859c13725
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerChainIdIndex1647556541214 = void 0;
const typeorm_1 = require("typeorm");
const oldChainIdColumn = new typeorm_1.TableColumn({
    name: 'chain_id',
    type: 'integer',
    isNullable: true,
    default: null,
});
const newChainIdColumn = new typeorm_1.TableColumn({
    name: 'chain_id',
    type: 'integer',
    isPrimary: true,
});
/**
 * The heartbeat table has the address column as `isPrimary`, so if the same
 * address is active on two chains and talking to the same database the workers
 * are overwriting each other's heartbeats.
 *
 * This updates the chain ID to be part of the primary key.
 *
 * Also, the databases have been updated and the `chain_id` column is populated,
 * so we can make it non-nullable.
 */
class WorkerChainIdIndex1647556541214 {
    async up(queryRunner) {
        queryRunner.changeColumn('rfqm_worker_heartbeats', 'chain_id', newChainIdColumn);
    }
    async down(queryRunner) {
        queryRunner.changeColumn('rfqm_worker_heartbeats', 'chain_id', oldChainIdColumn);
    }
}
exports.WorkerChainIdIndex1647556541214 = WorkerChainIdIndex1647556541214;
//# sourceMappingURL=1647556541214-WorkerChainIdIndex.js.map