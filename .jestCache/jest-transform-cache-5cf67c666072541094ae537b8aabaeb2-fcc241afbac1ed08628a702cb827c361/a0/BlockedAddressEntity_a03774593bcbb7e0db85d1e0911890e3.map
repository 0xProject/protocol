{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/BlockedAddressEntity.ts","mappings":";;;;;;;;;;;;AAAA,qCAAsE;AAItE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAkB7B,6DAA6D;IAC7D,YAAY,OAAsC,EAAmC;QACjF,wCAAwC;QACxC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;IACvC,CAAC;CACJ,CAAA;AA1BG;IAFC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;IACnD,IAAA,eAAK,EAAC,0BAA0B,CAAC;;qDACX;AAIvB;IAFC,IAAA,eAAK,GAAE;IACP,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;8BACzD,IAAI;uDAAC;AAGxB;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;oDAC/B;AAG7B;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2DAChC;AAGpC;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;;oDACvC;AAhBd,oBAAoB;IADhC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;;GACzB,oBAAoB,CA6BhC;AA7BY,oDAAoB","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/BlockedAddressEntity.ts"],"sourcesContent":["import { Check, Column, Entity, Index, PrimaryColumn } from 'typeorm';\n\nexport type BlockedAddressConstructorOpts = Pick<BlockedAddressEntity, 'address'> & Partial<BlockedAddressEntity>;\n@Entity({ name: 'blocked_addresses' })\nexport class BlockedAddressEntity {\n    @PrimaryColumn({ name: 'address', type: 'varchar' })\n    @Check('address = lower(address)')\n    public address: string;\n\n    @Index()\n    @Column({ name: 'created_at', type: 'timestamptz', default: () => 'now()' })\n    public createdAt!: Date;\n\n    @Column({ name: 'parent', type: 'varchar', nullable: true })\n    public parent: string | null;\n\n    @Column({ name: 'last_seen_nonce', type: 'bigint', nullable: true })\n    public lastSeenNonce: number | null;\n\n    @Column({ name: 'ignore', type: 'boolean', default: 'false' })\n    public ignore: boolean;\n\n    // tslint:disable-next-line: no-object-literal-type-assertion\n    constructor(opts: BlockedAddressConstructorOpts = {} as BlockedAddressConstructorOpts) {\n        // allow createdAt overrides for testing\n        if (opts.createdAt) {\n            this.createdAt = opts.createdAt;\n        }\n        this.address = opts.address;\n        this.parent = opts.parent || null;\n        this.lastSeenNonce = opts.lastSeenNonce || null;\n        this.ignore = opts.ignore || false;\n    }\n}\n"],"version":3}