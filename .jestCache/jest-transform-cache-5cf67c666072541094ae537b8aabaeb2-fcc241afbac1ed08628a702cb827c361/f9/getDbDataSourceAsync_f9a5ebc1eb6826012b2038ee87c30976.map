{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/getDbDataSourceAsync.ts","mappings":";;;AAAA,qCAAqC;AAErC,qCAAwC;AACxC,uDAAiD;AAEjD,IAAI,UAAsB,CAAC;AAE3B;;GAEG;AACI,KAAK,UAAU,oBAAoB,CAAC,cAAsB,qBAAY;IACzE,IAAI,CAAC,UAAU,EAAE;QACb,MAAM,MAAM,GAAG,IAAA,8BAAY,EAAC,WAAW,CAAC,CAAC;QACzC,UAAU,GAAG,IAAI,oBAAU,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,UAAU,CAAC,UAAU,EAAE,CAAC;KACjC;IACD,OAAO,UAAU,CAAC;AACtB,CAAC;AAPD,oDAOC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/getDbDataSourceAsync.ts"],"sourcesContent":["import { DataSource } from 'typeorm';\n\nimport { POSTGRES_URI } from './config';\nimport { createConfig } from './createOrmConfig';\n\nlet dataSource: DataSource;\n\n/**\n * Creates the DB connnection to use in an app\n */\nexport async function getDbDataSourceAsync(postgresUri: string = POSTGRES_URI): Promise<DataSource> {\n    if (!dataSource) {\n        const config = createConfig(postgresUri);\n        dataSource = new DataSource(config);\n        await dataSource.initialize();\n    }\n    return dataSource;\n}\n"],"version":3}