{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/core/meta_transaction_fee_utils.ts","mappings":";;;AAAA,qCAAsC;AAGtC,SAAgB,aAAa,CAAC,OAA4B;IACtD,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,SAAS,CAAC;KACpB;IAED,IAAI,aAAyC,CAAC;IAC9C,IAAI,OAAO,CAAC,aAAa,EAAE;QACvB,MAAM,gBAAgB,GAAG,OAAO,CAAC,aAAa,CAAC;QAE/C,aAAa,GAAG;YACZ,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;YACnC,SAAS,EAAE,IAAI,iBAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC;YACpD,YAAY,EAAE,OAAO,CAAC,aAAa,CAAC,YAAY;YAChD,gBAAgB,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC;SAC1E,CAAC;KACL;IAED,IAAI,SAA0D,CAAC;IAC/D,IAAI,OAAO,CAAC,SAAS,EAAE;QACnB,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC;QAEvC,IAAI,YAAY,CAAC,IAAI,KAAK,QAAQ,EAAE;YAChC,SAAS,GAAG;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,YAAY,CAAC,QAAQ;gBAC/B,SAAS,EAAE,IAAI,iBAAS,CAAC,YAAY,CAAC,SAAS,CAAC;gBAChD,YAAY,EAAE,YAAY,CAAC,YAAY;gBACvC,gBAAgB,EAAE,IAAI,iBAAS,CAAC,YAAY,CAAC,gBAAgB,CAAC;aACjE,CAAC;SACL;aAAM,IAAI,YAAY,CAAC,IAAI,KAAK,kBAAkB,EAAE;YACjD,SAAS,GAAG;gBACR,IAAI,EAAE,kBAAkB;gBACxB,QAAQ,EAAE,YAAY,CAAC,QAAQ;gBAC/B,SAAS,EAAE,IAAI,iBAAS,CAAC,YAAY,CAAC,SAAS,CAAC;gBAChD,YAAY,EAAE,YAAY,CAAC,YAAY;gBACvC,yBAAyB,EAAE,IAAI,iBAAS,CAAC,YAAY,CAAC,yBAAyB,CAAC;aACnF,CAAC;SACL;KACJ;IAED,IAAI,MAA0B,CAAC;IAC/B,IAAI,OAAO,CAAC,MAAM,EAAE;QAChB,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC;QAEjC,MAAM,GAAG;YACL,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,SAAS,EAAE,IAAI,iBAAS,CAAC,SAAS,CAAC,SAAS,CAAC;YAC7C,YAAY,EAAE,SAAS,CAAC,YAAY;YACpC,QAAQ,EAAE,IAAI,iBAAS,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC3C,YAAY,EAAE,IAAI,iBAAS,CAAC,SAAS,CAAC,YAAY,CAAC;YACnD,oCAAoC,EAAE,IAAI,iBAAS,CAAC,SAAS,CAAC,oCAAoC,CAAC;SACtG,CAAC;KACL;IAED,OAAO;QACH,aAAa;QACb,SAAS;QACT,MAAM;KACT,CAAC;AACN,CAAC;AA7DD,sCA6DC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/core/meta_transaction_fee_utils.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\r\nimport { Fees, GasFee, IntegratorShareFee, RawFees, VolumeBasedFee } from './types/meta_transaction_fees';\r\n\r\nexport function rawFeesToFees(rawFees: RawFees | undefined): Fees | undefined {\r\n    if (!rawFees) {\r\n        return undefined;\r\n    }\r\n\r\n    let integratorFee: VolumeBasedFee | undefined;\r\n    if (rawFees.integratorFee) {\r\n        const rawIntegratorFee = rawFees.integratorFee;\r\n\r\n        integratorFee = {\r\n            type: 'volume',\r\n            feeToken: rawIntegratorFee.feeToken,\r\n            feeAmount: new BigNumber(rawIntegratorFee.feeAmount),\r\n            feeRecipient: rawFees.integratorFee.feeRecipient,\r\n            volumePercentage: new BigNumber(rawFees.integratorFee.volumePercentage),\r\n        };\r\n    }\r\n\r\n    let zeroExFee: VolumeBasedFee | IntegratorShareFee | undefined;\r\n    if (rawFees.zeroExFee) {\r\n        const rawZeroExFee = rawFees.zeroExFee;\r\n\r\n        if (rawZeroExFee.type === 'volume') {\r\n            zeroExFee = {\r\n                type: 'volume',\r\n                feeToken: rawZeroExFee.feeToken,\r\n                feeAmount: new BigNumber(rawZeroExFee.feeAmount),\r\n                feeRecipient: rawZeroExFee.feeRecipient,\r\n                volumePercentage: new BigNumber(rawZeroExFee.volumePercentage),\r\n            };\r\n        } else if (rawZeroExFee.type === 'integrator_share') {\r\n            zeroExFee = {\r\n                type: 'integrator_share',\r\n                feeToken: rawZeroExFee.feeToken,\r\n                feeAmount: new BigNumber(rawZeroExFee.feeAmount),\r\n                feeRecipient: rawZeroExFee.feeRecipient,\r\n                integratorSharePercentage: new BigNumber(rawZeroExFee.integratorSharePercentage),\r\n            };\r\n        }\r\n    }\r\n\r\n    let gasFee: GasFee | undefined;\r\n    if (rawFees.gasFee) {\r\n        const rawGasFee = rawFees.gasFee;\r\n\r\n        gasFee = {\r\n            type: 'gas',\r\n            feeToken: rawGasFee.feeToken,\r\n            feeAmount: new BigNumber(rawGasFee.feeAmount),\r\n            feeRecipient: rawGasFee.feeRecipient,\r\n            gasPrice: new BigNumber(rawGasFee.gasPrice),\r\n            estimatedGas: new BigNumber(rawGasFee.estimatedGas),\r\n            feeTokenAmountPerBaseUnitNativeToken: new BigNumber(rawGasFee.feeTokenAmountPerBaseUnitNativeToken),\r\n        };\r\n    }\r\n\r\n    return {\r\n        integratorFee,\r\n        zeroExFee,\r\n        gasFee,\r\n    };\r\n}\r\n"],"version":3}