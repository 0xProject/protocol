{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqMaker.ts","mappings":";;;;;;;;;;;;AAAA,qCAA0E;AAI1E;;GAEG;AAEH,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAmBjB,oFAAoF;IACpF,kFAAkF;IAClF,qCAAqC;IACrC,4DAA4D;IAC5D,YAAY,OAAqB,EAAkB;;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,MAAA,IAAI,CAAC,SAAS,mCAAI,IAAI,CAAC;IAC5C,CAAC;CACJ,CAAA;AA7BG;IADC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;yCAC9B;AAGvB;IADC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;yCAC9B;AAGvB;IADC,IAAA,0BAAgB,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CAChD;AAG9B;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;uCACR;AAGjC;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;yCAChB;AAG9B;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;yCAChB;AAjBrB,QAAQ;IADpB,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;;GACvB,QAAQ,CA+BpB;AA/BY,4BAAQ","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqMaker.ts"],"sourcesContent":["import { Column, Entity, PrimaryColumn, UpdateDateColumn } from 'typeorm';\n\nexport type RfqMakerOpts = Pick<RfqMaker, 'makerId' | 'chainId' | 'pairs' | 'rfqtUri' | 'rfqmUri'> & Partial<RfqMaker>;\n\n/**\n * A representation of the pairs a market maker is active on for a given chain ID\n */\n@Entity({ name: 'rfq_maker_pairs' })\nexport class RfqMaker {\n    @PrimaryColumn({ name: 'maker_id', type: 'varchar' })\n    public makerId: string;\n\n    @PrimaryColumn({ name: 'chain_id', type: 'integer' })\n    public chainId: number;\n\n    @UpdateDateColumn({ name: 'updated_at', type: 'timestamptz', nullable: true })\n    public updatedAt: Date | null;\n\n    @Column({ name: 'pairs', type: 'jsonb' })\n    public pairs: [string, string][];\n\n    @Column({ name: 'rfqt_uri', type: 'varchar' })\n    public rfqtUri: string | null;\n\n    @Column({ name: 'rfqm_uri', type: 'varchar' })\n    public rfqmUri: string | null;\n\n    // TypeORM runs a validation check where it calls this initializer with no argument.\n    // With no default `opts`, `opts` will be undefined and the validation will throw,\n    // therefore, add this hacky default.\n    // tslint:disable-next-line no-object-literal-type-assertion\n    constructor(opts: RfqMakerOpts = {} as RfqMakerOpts) {\n        this.makerId = opts.makerId;\n        this.chainId = opts.chainId;\n        this.pairs = opts.pairs;\n        this.rfqtUri = opts.rfqtUri;\n        this.rfqmUri = opts.rfqmUri;\n        this.updatedAt = opts.updatedAt ?? null;\n    }\n}\n"],"version":3}