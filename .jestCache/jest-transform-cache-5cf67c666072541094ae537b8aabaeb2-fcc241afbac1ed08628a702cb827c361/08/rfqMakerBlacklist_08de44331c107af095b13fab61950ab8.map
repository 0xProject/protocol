{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/quoteRequestor/rfqMakerBlacklist.ts","mappings":";;;AAAA;;;GAGG;AAEH,iDAAkD;AAClD,sCAAmC;AAEnC,MAAa,iBAAiB;IAG1B,YACqB,yBAAiC,EACjC,uBAA+B;QAD/B,8BAAyB,GAAzB,yBAAyB,CAAQ;QACjC,4BAAuB,GAAvB,uBAAuB,CAAQ;QAJnC,8BAAyB,GAAmC,EAAE,CAAC;QAC/D,+BAA0B,GAAmC,EAAE,CAAC;IAI9E,CAAC;IACG,uBAAuB,CAAC,QAAgB,EAAE,UAAmB;QAChE,6DAA6D;QAC7D,iDAAiD;QACjD,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YAC1D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAChD;QACD,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,uBAAuB,EAAE;gBAC3E,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,yBAAyB,GAAG,yBAAa,CAAC;gBACjF,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;gBACzD,eAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAC;aAC1G;SACJ;aAAM;YACH,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IACM,kBAAkB,CAAC,QAAgB;QACtC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE;YACjD,OAAO,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;YACjD,eAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,EAAE,qBAAqB,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;IAC3D,CAAC;CACJ;AAhCD,8CAgCC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/quoteRequestor/rfqMakerBlacklist.ts"],"sourcesContent":["/**\r\n * Tracks a maker's history of timely responses, and manages whether a given\r\n * maker should be avoided for being too latent.\r\n */\r\n\r\nimport { ONE_MINUTE_MS } from '../core/constants';\r\nimport { logger } from '../logger';\r\n\r\nexport class RfqMakerBlacklist {\r\n    private readonly _makerTimeoutStreakLength: { [makerUrl: string]: number } = {};\r\n    private readonly _makerBlacklistedUntilDate: { [makerUrl: string]: number } = {};\r\n    constructor(\r\n        private readonly _blacklistDurationMinutes: number,\r\n        private readonly _timeoutStreakThreshold: number, //  public infoLogger: LogFunction = constants.DEFAULT_INFO_LOGGER,\r\n    ) {}\r\n    public logTimeoutOrLackThereof(makerUrl: string, didTimeout: boolean): void {\r\n        // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (!this._makerTimeoutStreakLength.hasOwnProperty(makerUrl)) {\r\n            this._makerTimeoutStreakLength[makerUrl] = 0;\r\n        }\r\n        if (didTimeout) {\r\n            this._makerTimeoutStreakLength[makerUrl] += 1;\r\n            if (this._makerTimeoutStreakLength[makerUrl] === this._timeoutStreakThreshold) {\r\n                const blacklistEnd = Date.now() + this._blacklistDurationMinutes * ONE_MINUTE_MS;\r\n                this._makerBlacklistedUntilDate[makerUrl] = blacklistEnd;\r\n                logger.info({ makerUrl, blacklistedUntil: new Date(blacklistEnd).toISOString() }, 'maker blacklisted');\r\n            }\r\n        } else {\r\n            this._makerTimeoutStreakLength[makerUrl] = 0;\r\n        }\r\n    }\r\n    public isMakerBlacklisted(makerUrl: string): boolean {\r\n        const now = Date.now();\r\n        if (now > this._makerBlacklistedUntilDate[makerUrl]) {\r\n            delete this._makerBlacklistedUntilDate[makerUrl];\r\n            logger.info({ makerUrl }, 'maker unblacklisted');\r\n        }\r\n        return this._makerBlacklistedUntilDate[makerUrl] > now;\r\n    }\r\n}\r\n"],"version":3}