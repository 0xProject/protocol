{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/core/types/fees.ts","mappings":"","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/core/types/fees.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\r\n\r\nexport type FeeModelVersion = /* no 0x fee */ 0 | /* fixed rate */ 1 | /* margin rake */ 2;\r\n\r\nexport interface Fee {\r\n    token: string;\r\n    amount: BigNumber;\r\n    type: 'fixed' | 'bps';\r\n}\r\n\r\n/**\r\n * (Deprecated) base interface for FeeDetails type.\r\n */\r\ninterface FeeDetailsBaseDeprecated {\r\n    /**\r\n     * `kind` is used to mark the type of FeeDetails.\r\n     */\r\n    kind: 'gasOnly' | 'default' | 'margin';\r\n    /**\r\n     * Version number of fee model which determines the fee amount to charge MMs.\r\n     *   * Version 0 includes estimated gas cost only.\r\n     *   * Version 1 charge an additional bps as 0x fee, based on trade size, on top of gas.\r\n     *   * Version 2 charge 0x fee based on detected margin of RFQm with AMMs.\r\n     * While Verion 0 will use `gasOnly` FeeDetails, and Version 1 will use `default`, Version 2\r\n     * will use all three of them: `gasOnly` for margin detection, `margin` if margin detection\r\n     * succeeded, and `default` if margin detection failed.\r\n     */\r\n    feeModelVersion: FeeModelVersion;\r\n    gasFeeAmount: BigNumber;\r\n    gasPrice: BigNumber;\r\n}\r\n\r\n/**\r\n * (Deprecated) interface for `margin` FeeDetails type. In this case the Fee is\r\n * calculated using margin based method\r\n */\r\nexport interface MarginBasedFeeDetailsDeprecated extends FeeDetailsBaseDeprecated {\r\n    kind: 'margin';\r\n    margin: BigNumber;\r\n    marginRakeRatio: number;\r\n    zeroExFeeAmount: BigNumber;\r\n    /**\r\n     * All token prices are from TokenPriceOracle. `null` value means the oracle\r\n     * failed to provide price, or we don't need to query it. For example, the token\r\n     * is not involved in fee calculation, or bps for given pair is 0.\r\n     */\r\n    feeTokenBaseUnitPriceUsd: BigNumber | null;\r\n    takerTokenBaseUnitPriceUsd: BigNumber | null;\r\n    makerTokenBaseUnitPriceUsd: BigNumber | null;\r\n}\r\n\r\n/**\r\n * (Deprecated) interface for `default` FeeDetails type. In this case the Fee is\r\n * calculated using default method, based on trade size and bps of underlying\r\n * pairs.\r\n */\r\nexport interface DefaultFeeDetailsDeprecated extends FeeDetailsBaseDeprecated {\r\n    kind: 'default';\r\n    tradeSizeBps: number;\r\n    zeroExFeeAmount: BigNumber;\r\n    feeTokenBaseUnitPriceUsd: BigNumber | null;\r\n    takerTokenBaseUnitPriceUsd: BigNumber | null;\r\n    makerTokenBaseUnitPriceUsd: BigNumber | null;\r\n}\r\n\r\n/**\r\n * (Deprecated) interface for `gasOnly` FeeDetails type. Only gas related information\r\n * is included.\r\n */\r\nexport interface GasOnlyFeeDetailsDeprecated extends FeeDetailsBaseDeprecated {\r\n    kind: 'gasOnly';\r\n}\r\n\r\ninterface GasFeeBreakdownDetails {\r\n    gasPrice: BigNumber;\r\n    estimatedGas: BigNumber;\r\n}\r\n\r\ninterface VolumeBasedFeeBreakdownDetails {\r\n    kind: 'volume';\r\n    tradeSizeBps: number;\r\n}\r\n\r\ninterface PriceImprovementBasedFeeBreakdownDetails {\r\n    kind: 'price_improvement';\r\n    priceImprovement: BigNumber;\r\n    rakeRatio: number;\r\n}\r\n\r\nexport interface FeeBreakdown {\r\n    gas?: {\r\n        amount: BigNumber;\r\n        details: GasFeeBreakdownDetails;\r\n    };\r\n    zeroEx?: {\r\n        amount: BigNumber;\r\n        details: VolumeBasedFeeBreakdownDetails | PriceImprovementBasedFeeBreakdownDetails;\r\n    };\r\n}\r\n\r\nexport interface ConversionRates {\r\n    nativeTokenBaseUnitPriceUsd: BigNumber | null;\r\n    feeTokenBaseUnitPriceUsd: BigNumber | null;\r\n    takerTokenBaseUnitPriceUsd: BigNumber | null;\r\n    makerTokenBaseUnitPriceUsd: BigNumber | null;\r\n}\r\n\r\n/**\r\n * Extends Fee data schema to include a details session, which could be one\r\n * of `gasOnly`, `default` or `margin` type, depending on the approach used\r\n * to calculate the Fee.\r\n */\r\nexport interface FeeWithDetails extends Fee {\r\n    details: GasOnlyFeeDetailsDeprecated | DefaultFeeDetailsDeprecated | MarginBasedFeeDetailsDeprecated;\r\n    breakdown: FeeBreakdown;\r\n    conversionRates: ConversionRates;\r\n}\r\n\r\nexport interface StoredFee {\r\n    token: string;\r\n    amount: string;\r\n    type: 'fixed' | 'bps';\r\n    // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\r\n    /* eslint-disable @typescript-eslint/no-explicit-any */\r\n    details?: any;\r\n    breakdown?: any;\r\n    conversionRates?: any;\r\n    /* eslint-enable @typescript-eslint/no-explicit-any */\r\n}\r\n"],"version":3}