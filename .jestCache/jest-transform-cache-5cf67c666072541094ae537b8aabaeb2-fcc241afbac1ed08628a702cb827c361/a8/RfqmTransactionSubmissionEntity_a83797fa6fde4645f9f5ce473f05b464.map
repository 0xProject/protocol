{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqmTransactionSubmissionEntity.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqmTransactionSubmissionEntity.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\nimport { Column, Entity, Index, PrimaryColumn } from 'typeorm';\n\nimport { BigIntTransformer, BigNumberTransformer } from './transformers';\nimport { RfqmTransactionSubmissionStatus } from './types';\n\n@Entity({ name: 'rfqm_transaction_submissions' })\nexport class RfqmTransactionSubmissionEntity {\n    // Differentiator for different flavors of RFQM transactions\n    public kind: 'rfqm_v1_transaction_submission';\n\n    @PrimaryColumn({ name: 'transaction_hash', type: 'varchar' })\n    public transactionHash?: string;\n\n    // specified as a foreign key to rfqm jobs in migration, but not in the typeorm\n    // definition to preserve its being read as a string\n    @Column({ name: 'order_hash', type: 'varchar' })\n    public orderHash?: string;\n\n    @Index()\n    @Column({ name: 'created_at', type: 'timestamptz', default: () => 'now()' })\n    public createdAt!: Date;\n\n    @Column({ name: 'updated_at', type: 'timestamptz', nullable: true })\n    public updatedAt: Date | null;\n\n    @Column({ name: 'from', type: 'varchar', nullable: true })\n    public from: string | null;\n\n    @Column({ name: 'to', type: 'varchar', nullable: true })\n    public to: string | null;\n\n    @Column({ name: 'nonce', type: 'bigint', nullable: true, transformer: BigIntTransformer })\n    public nonce: number | null;\n\n    @Column({ name: 'gas_price', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public gasPrice: BigNumber | null;\n\n    @Column({ name: 'gas_used', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public gasUsed: BigNumber | null;\n\n    @Column({ name: 'max_fee_per_gas', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public maxFeePerGas: BigNumber | null;\n\n    @Column({ name: 'max_priority_fee_per_gas', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public maxPriorityFeePerGas: BigNumber | null;\n\n    @Column({ name: 'block_mined', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public blockMined: BigNumber | null;\n\n    @Index()\n    @Column({ name: 'status', type: 'varchar' })\n    public status: RfqmTransactionSubmissionStatus;\n\n    @Column({ name: 'status_reason', type: 'varchar', nullable: true })\n    public statusReason: string | null;\n\n    @Column({ name: 'metadata', type: 'jsonb', nullable: true })\n    public metadata: object | null;\n\n    constructor(opts: Partial<RfqmTransactionSubmissionEntity> = {}) {\n        this.kind = 'rfqm_v1_transaction_submission';\n\n        // allow createdAt overrides for testing\n        if (opts.createdAt) {\n            this.createdAt = opts.createdAt;\n        }\n\n        this.blockMined = opts.blockMined || null;\n        this.from = opts.from || null;\n        this.gasPrice = opts.gasPrice || null;\n        this.gasUsed = opts.gasUsed || null;\n        this.metadata = opts.metadata || null;\n        this.nonce = opts.nonce !== undefined ? opts.nonce : null;\n        this.orderHash = opts.orderHash;\n        this.status = opts.status || RfqmTransactionSubmissionStatus.Submitted;\n        this.statusReason = opts.statusReason || null;\n        this.to = opts.to || null;\n        this.transactionHash = opts.transactionHash;\n        this.updatedAt = opts.updatedAt || null;\n        this.maxFeePerGas = opts.maxFeePerGas || null;\n        this.maxPriorityFeePerGas = opts.maxPriorityFeePerGas || null;\n    }\n}\n"],"version":3}