{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/utils/GasStationAttendantUtils.ts","mappings":";;;AAGA,qDAAkD;AAElD,qDAAkD;AAElD,+EAA4E;AAC5E,6EAA0E;AAE1E,SAAgB,sBAAsB,CAAC,KAAyB,EAAE,aAA4B;IAC1F,0CAA0C;IAC1C,QAAQ,KAAK,CAAC,OAAO,EAAE;QACnB,KAAK,cAAc,CAAC,CAAC;YACjB,OAAO,IAAI,yDAA2B,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QACtG,KAAK,aAAa,CAAC,IAAI;YACnB,OAAO,IAAI,yDAA2B,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QACtG,KAAK,aAAa,CAAC,GAAG;YAClB,OAAO,IAAI,uDAA0B,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QACrG,KAAK,YAAY,CAAC,KAAK;YACnB,OAAO,IAAI,uDAA0B,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QACrG;YACI,MAAM,IAAI,KAAK,CAAC,mDAAmD,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;KACxF;IACD,yCAAyC;AAC7C,CAAC;AAfD,wDAeC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/utils/GasStationAttendantUtils.ts"],"sourcesContent":["import { AxiosInstance } from 'axios';\n\nimport { ChainConfiguration } from '../config';\nimport { GasOracleType0 } from './GasOracleType0';\n\nimport { GasOracleType2 } from './GasOracleType2';\nimport { GasStationAttendant } from './GasStationAttendant';\nimport { GasStationAttendantEthereum } from './GasStationAttendantEthereum';\nimport { GasStationAttendantPolygon } from './GasStationAttendantPolygon';\n\nexport function getGasStationAttendant(chain: ChainConfiguration, axiosInstance: AxiosInstance): GasStationAttendant {\n    // tslint:disable: custom-no-magic-numbers\n    switch (chain.chainId) {\n        case /* ethereum */ 1:\n            return new GasStationAttendantEthereum(GasOracleType2.create(chain.gasStationUrl, axiosInstance));\n        case /* ganache */ 1337:\n            return new GasStationAttendantEthereum(GasOracleType2.create(chain.gasStationUrl, axiosInstance));\n        case /* polygon */ 137:\n            return new GasStationAttendantPolygon(GasOracleType0.create(chain.gasStationUrl, axiosInstance));\n        case /* mumbai */ 80001:\n            return new GasStationAttendantPolygon(GasOracleType0.create(chain.gasStationUrl, axiosInstance));\n        default:\n            throw new Error(`Gas station attendant not configured for chain: ${chain.name}`);\n    }\n    // tslint:enable: custom-no-magic-numbers\n}\n"],"version":3}