{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/utils/rfqm_request_utils.ts","mappings":";;;AACA,qCAAsC;AA0BtC;;GAEG;AACH,SAAgB,kBAAkB,CAAC,OAA8B;IAC7D,OAAO;QACH,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;QAC5C,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QACpB,CAAC,EAAE,OAAO,CAAC,CAAC;QACZ,CAAC,EAAE,OAAO,CAAC,CAAC;KACf,CAAC;AACN,CAAC;AAPD,gDAOC;AAED;;;GAGG;AACH,SAAgB,8BAA8B,CAAC,OAAiC;IAC5E,OAAO;QACH,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,qBAAqB,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC;QACnE,SAAS,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,SAAS,CAAC;QAC3C,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,WAAW,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,WAAW,CAAC;QAC/C,WAAW,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,WAAW,CAAC;QAC/C,IAAI,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,IAAI,CAAC;QACjC,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,KAAK,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,KAAK,CAAC;QACnC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;KAC/C,CAAC;AACN,CAAC;AAfD,wEAeC;AAED;;GAEG;AACH,SAAgB,uBAAuB,CAAC,OAA0B;IAC9D,OAAO;QACH,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,WAAW,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,WAAW,CAAC;QAC/C,WAAW,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,WAAW,CAAC;QAC/C,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,cAAc,EAAE,IAAI,iBAAS,CAAC,OAAO,CAAC,cAAc,CAAC;QACrD,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;KAC/C,CAAC;AACN,CAAC;AAbD,0DAaC;AAED,4CAA4C;AAC5C,SAAS,sBAAsB,CAAC,OAAyC;IACrE,MAAM,GAAG,GAAiB;QACtB,GAAG,OAAO;QACV,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;KACnC,CAAC;IAEF,4BAA4B;IAC5B,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;QAC3B,OAAO,GAAG,CAAC,OAAO,CAAC;KACtB;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAED;;GAEG;AACH,SAAgB,sBAAsB,CAClC,OAA+B;IAE/B,OAAO;QACH,6DAA6D;QAC7D,8DAA8D;QAC9D,KAAK,EAAE,OAAO,CAAC,KAAY;QAC3B,6DAA6D;QAC7D,8DAA8D;QAC9D,WAAW,EAAE,OAAO,CAAC,WAAkB;QACvC,MAAM,EAAE,sBAAsB,CAAC,OAAO,CAAC,MAAM,CAAC;QAC9C,6DAA6D;QAC7D,8DAA8D;QAC9D,OAAO,EAAE,OAAO,CAAC,OAAc;KAClC,CAAC;AACN,CAAC;AAfD,wDAeC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/utils/rfqm_request_utils.ts"],"sourcesContent":["import { MetaTransactionFields, OtcOrderFields, Signature } from '@0x/protocol-utils';\nimport { BigNumber } from '@0x/utils';\n\nimport { Eip712DataField, Eip712Domain, ExecuteMetaTransactionEip712Context, PermitEip712Context } from '../core/types';\n\nexport interface StringSignatureFields {\n    signatureType: string;\n    v: string;\n    r: string;\n    s: string;\n}\n\n// $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type RawOtcOrderFields = Record<keyof Omit<OtcOrderFields, 'chainId'>, string> & { chainId: any };\n// $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type RawMetaTransactionFields = Record<keyof Omit<MetaTransactionFields, 'chainId'>, string> & { chainId: any };\nexport interface RawEIP712ContextFields {\n    types: Record<string, Record<keyof Eip712DataField, string>[]>;\n    primaryType: string;\n    domain: Record<keyof Eip712Domain, string>;\n    // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    message: Record<string, any>;\n}\n\n/**\n * convert a Signature response into the data types expected by protocol-utils\n */\nexport function stringsToSignature(strings: StringSignatureFields): Signature {\n    return {\n        signatureType: Number(strings.signatureType),\n        v: Number(strings.v),\n        r: strings.r,\n        s: strings.s,\n    };\n}\n\n/**\n * Converts the request payload for a gasless swap metatransaction into\n * the appropriate types\n */\nexport function stringsToMetaTransactionFields(strings: RawMetaTransactionFields): MetaTransactionFields {\n    return {\n        callData: strings.callData,\n        chainId: Number(strings.chainId),\n        expirationTimeSeconds: new BigNumber(strings.expirationTimeSeconds),\n        feeAmount: new BigNumber(strings.feeAmount),\n        feeToken: strings.feeToken,\n        maxGasPrice: new BigNumber(strings.maxGasPrice),\n        minGasPrice: new BigNumber(strings.minGasPrice),\n        salt: new BigNumber(strings.salt),\n        sender: strings.sender,\n        signer: strings.signer,\n        value: new BigNumber(strings.value),\n        verifyingContract: strings.verifyingContract,\n    };\n}\n\n/**\n * convert a JSON OtcOrder into an OtcOrder\n */\nexport function stringsToOtcOrderFields(strings: RawOtcOrderFields): OtcOrderFields {\n    return {\n        maker: strings.maker,\n        taker: strings.taker,\n        makerAmount: new BigNumber(strings.makerAmount),\n        takerAmount: new BigNumber(strings.takerAmount),\n        makerToken: strings.makerToken,\n        takerToken: strings.takerToken,\n        txOrigin: strings.txOrigin,\n        expiryAndNonce: new BigNumber(strings.expiryAndNonce),\n        chainId: Number(strings.chainId),\n        verifyingContract: strings.verifyingContract,\n    };\n}\n\n// Internal function for handling the domain\nfunction _stringsToEIP712Domain(strings: RawEIP712ContextFields['domain']): Eip712Domain {\n    const res: Eip712Domain = {\n        ...strings,\n        chainId: Number(strings.chainId),\n    };\n\n    // remove chainId if its NaN\n    if (Number.isNaN(res.chainId)) {\n        delete res.chainId;\n    }\n\n    return res;\n}\n\n/**\n * convert a JSON EIP712Context into an EIP712Context\n */\nexport function stringsToEIP712Context(\n    strings: RawEIP712ContextFields,\n): ExecuteMetaTransactionEip712Context | PermitEip712Context {\n    return {\n        // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        types: strings.types as any,\n        // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        primaryType: strings.primaryType as any,\n        domain: _stringsToEIP712Domain(strings.domain),\n        // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        message: strings.message as any,\n    };\n}\n"],"version":3}