{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/TransactionEntity.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/TransactionEntity.ts"],"sourcesContent":["import { assert } from '@0x/assert';\nimport { BigNumber } from '@0x/utils';\nimport { Column, CreateDateColumn, Entity, PrimaryColumn, UpdateDateColumn } from 'typeorm';\n\nimport { META_TXN_RELAY_EXPECTED_MINED_SEC } from '../config';\nimport { ONE_SECOND_MS, ZERO } from '../core/constants';\n\nimport { BigIntTransformer, BigNumberTransformer } from './transformers';\nimport { TransactionEntityOpts } from './types';\n\nenum TransactionStates {\n    // transaction has been constructed, but not yet submitted to the network.\n    Unsubmitted = 'unsubmitted',\n    // transaction has been submitted to the network.\n    Submitted = 'submitted',\n    // transaction has been spotted in the mempool.\n    Mempool = 'mempool',\n    // transaction has not been mined in the expected time.\n    Stuck = 'stuck',\n    // transaction has been mined.\n    Included = 'included',\n    // transaction is confirmed.\n    Confirmed = 'confirmed',\n    // transaction is no longer in the mempool.\n    Dropped = 'dropped',\n    // transaction has been aborted because a new transaction with the same\n    // nonce has been mined.\n    Aborted = 'aborted',\n    // transaction was in an unsubmitted state for too long.\n    Cancelled = 'cancelled',\n}\n\n@Entity({ name: 'transactions' })\nexport class TransactionEntity {\n    @PrimaryColumn({ name: 'ref_hash', type: 'varchar' })\n    // reference hash can be either be the zeroExTransaction hash or the actual\n    // txHash depending on whether we are submitting a meta-transaction or an\n    // unsticking ethereum transaction.\n    public refHash: string;\n\n    @Column({ name: 'data', type: 'varchar', nullable: true })\n    public data?: string;\n\n    @Column({ name: 'to', type: 'varchar' })\n    public to?: string;\n\n    @Column({ name: 'tx_hash', type: 'varchar', unique: true, nullable: true })\n    public txHash?: string;\n\n    @Column({ name: 'status', type: 'varchar' })\n    public status: string;\n\n    @Column({ name: 'taker_address', type: 'varchar', nullable: true })\n    public takerAddress?: string;\n\n    @Column({ name: 'expected_mined_in_sec', type: 'int' })\n    public expectedMinedInSec?: number;\n\n    @Column({ name: 'gas_price', type: 'bigint', nullable: true, transformer: BigNumberTransformer })\n    public gasPrice?: BigNumber;\n\n    @Column({ name: 'value', type: 'bigint', nullable: true, transformer: BigNumberTransformer })\n    public value?: BigNumber;\n\n    @Column({ name: 'gas', type: 'int', nullable: true })\n    public gas?: number | null;\n\n    @Column({ name: 'from', type: 'varchar', nullable: true })\n    public from?: string;\n\n    @Column({ name: 'nonce', type: 'bigint', nullable: true, transformer: BigIntTransformer })\n    public nonce?: number;\n\n    @Column({ name: 'gas_used', type: 'int', nullable: true })\n    public gasUsed?: number | null;\n\n    @Column({ name: 'block_number', type: 'bigint', nullable: true, transformer: BigIntTransformer })\n    public blockNumber?: number;\n\n    @Column({ name: 'tx_status', type: 'int', nullable: true })\n    public txStatus?: number | null;\n\n    @Column({ name: 'api_key', type: 'varchar', nullable: true })\n    public apiKey?: string;\n\n    @CreateDateColumn({ name: 'created_at', type: 'timestamptz' })\n    public createdAt?: Date;\n\n    @UpdateDateColumn({ name: 'updated_at', type: 'timestamptz' })\n    public updatedAt?: Date;\n\n    @Column({ name: 'expected_at', type: 'timestamptz' })\n    public expectedAt: Date;\n\n    public static make(opts: TransactionEntityOpts): TransactionEntity {\n        assert.isHexString('refHash', opts.refHash);\n        if (opts.txHash !== undefined) {\n            assert.isHexString('txHash', opts.txHash);\n        }\n        if (opts.from !== undefined) {\n            assert.isETHAddressHex('from', opts.from);\n        }\n        assert.doesBelongToStringEnum('status', opts.status, TransactionStates);\n        if (opts.nonce !== undefined && !Number.isInteger(opts.nonce) && opts.nonce <= 0) {\n            throw new Error(`Expected nonce to be a positive integer, encountered: ${opts.nonce}`);\n        }\n        if (opts.blockNumber !== undefined && !Number.isInteger(opts.blockNumber) && opts.blockNumber <= 0) {\n            throw new Error(`Expected blockNumber to be a positive integer, encountered: ${opts.blockNumber}`);\n        }\n        return new TransactionEntity(opts);\n    }\n\n    // HACK(oskar) we want all fields to be set and valid, otherwise we should\n    // not accept a transaction entity, however because of this issue:\n    // https://github.com/typeorm/typeorm/issues/1772 we cannot accept undefined\n    // as an argument to the constructor, to not break migrations with\n    // serialize. Please use the public static make method instead.\n    private constructor(\n        opts: TransactionEntityOpts = {\n            refHash: '',\n            txHash: '',\n            to: '',\n            data: '',\n            apiKey: '',\n            takerAddress: '',\n            status: '',\n            expectedMinedInSec: META_TXN_RELAY_EXPECTED_MINED_SEC,\n            nonce: 0,\n            gasPrice: ZERO,\n            value: ZERO,\n            from: '',\n            gas: null,\n            gasUsed: null,\n            txStatus: null,\n        },\n    ) {\n        this.refHash = opts.refHash;\n        this.txHash = opts.txHash;\n        this.takerAddress = opts.takerAddress;\n        this.to = opts.to;\n        this.data = opts.data;\n        this.apiKey = opts.apiKey;\n        this.status = opts.status;\n        this.expectedMinedInSec = opts.expectedMinedInSec;\n        this.nonce = opts.nonce;\n        this.gasPrice = opts.gasPrice;\n        this.value = opts.value;\n        this.blockNumber = opts.blockNumber;\n        this.from = opts.from;\n        this.gas = opts.gas;\n        this.gasUsed = opts.gasUsed;\n        this.txStatus = opts.txStatus;\n        const now = new Date();\n        this.expectedAt = new Date(now.getTime() + this.expectedMinedInSec * ONE_SECOND_MS);\n    }\n}\n"],"version":3}