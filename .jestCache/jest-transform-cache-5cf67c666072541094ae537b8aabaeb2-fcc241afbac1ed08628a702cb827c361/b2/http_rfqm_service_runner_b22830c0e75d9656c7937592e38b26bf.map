{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/runners/http_rfqm_service_runner.ts","mappings":";;;AAAA;;GAEG;AACH,6CAAuE;AACvE,uCAAuC;AACvC,2CAA2C;AAC3C,iCAA0B;AAC1B,mCAAmC;AACnC,kDAAkD;AAIlD,gDAAgD;AAChD,qCAA4B;AAG5B,sCAUmB;AACnB,iDAAsG;AACtG,kEAA+D;AAC/D,2DAAuD;AACvD,sCAAmC;AACnC,yEAAqE;AACrE,iEAA4D;AAC5D,wDAA0D;AAC1D,sDAA+E;AAC/E,kEAAmE;AACnE,kEAAmE;AACnE,qEAAgE;AAChE,qEAAgE;AAChE,4DAAwD;AACxD,0DAAqD;AACrD,wEAA4G;AAC5G,oEAAmF;AACnF,oEAA8D;AAC9D,wDAAmE;AACnE,gEAA6D;AAE7D,MAAM,cAAc,GAAY,EAAE,CAAC;AAEnC,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,GAAG,EAAE,EAAE;IACpC,eAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,GAAG,EAAE,EAAE;IACrC,IAAI,GAAG,EAAE;QACL,eAAM,CAAC,KAAK,CAAC,GAAY,CAAC,CAAC;KAC9B;AACL,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IAC7B,eAAM,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;IAChE,MAAM,IAAA,yCAA0B,EAAC,cAAc,CAAC,CAAC;IACjD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,iCAAiC;AACjC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;IAC5B,eAAM,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;IAC/D,MAAM,IAAA,yCAA0B,EAAC,cAAc,CAAC,CAAC;IACjD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE;IACzB,CAAC,KAAK,IAAI,EAAE;QACR,qBAAqB;QACrB,MAAM,MAAM,GAAsB;YAC9B,GAAG,iCAAwB;SAC9B,CAAC;QACF,MAAM,UAAU,GAAG,MAAM,IAAA,2CAAoB,GAAE,CAAC;QAChD,MAAM,WAAW,GAAG,IAAI,2BAAW,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,eAAe,GAAG,IAAI,oCAAe,CAAC,UAAU,CAAC,CAAC;QACxD,MAAM,aAAa,GAAG,IAAI,8BAAa,EAAE,CAAC;QAC1C,MAAM,aAAa,GAAG,eAAK,CAAC,MAAM,CAAC,IAAA,4CAAqB,EAAC,mCAA0B,CAAC,CAAC,CAAC;QACtF,MAAM,gBAAgB,GAAG,IAAI,mCAAgB,CAAC,aAAa,EAAE,2BAAkB,EAAE,4BAAmB,CAAC,CAAC;QAEtG,IAAI,CAAC,kBAAS,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC3D;QACD,MAAM,KAAK,GAAG,IAAI,iBAAK,CAAC,kBAAS,CAAC,CAAC;QACnC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE3B,MAAM,YAAY,GAAG,MAAM,IAAA,6CAAsB;QAC7C,gBAAgB,CAAC,KAAK,EACtB,WAAW,EACX,eAAe,EACf,6BAAoB,EACpB,gBAAgB,EAChB,aAAa,EACb,KAAK,CACR,CAAC;QAEF,MAAM,YAAY,GAAG,MAAM,IAAA,2CAAsB,EAAC,6BAAoB,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;QAEhG,MAAM,eAAe,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC1D,MAAM,eAAe,GAAG,oBAAoB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAC7E,MAAM,uBAAuB,CACzB,YAAY,EACZ,YAAY,EACZ,eAAe,EACf,eAAe,EACf,aAAa,EACb,MAAM,EACN,UAAU,CACb,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,eAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;CACpD;AAED;;GAEG;AACH,SAAgB,oBAAoB,CAAC,OAAoB;IACrD,OAAO,IAAI,mCAAe,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAFD,oDAEC;AAED;;GAEG;AACH,SAAgB,oBAAoB,CAAC,OAAwB,EAAE,aAA4B;IACvF,OAAO,IAAI,mCAAe,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACvD,CAAC;AAFD,oDAEC;AAED;;GAEG;AACI,KAAK,UAAU,uBAAuB,CACzC,YAA0B,EAC1B,YAA0B,EAC1B,eAAgC,EAChC,eAAgC,EAChC,aAA4B,EAC5B,MAAyB,EACzB,UAAsB;AACtB,6DAA6D;AAC7D,kEAAkE;AAClE,uBAAgC,IAAI,EACpC,IAAmB;IAEnB,MAAM,GAAG,GAAG,IAAI,IAAI,OAAO,EAAE,CAAC;IAE9B,IAAI,mBAAU,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC;YACR,GAAG,EAAE,mBAAU;YACf,YAAY,EAAE;gBACV,4BAA4B;gBAC5B,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;gBAC/C,uCAAuC;gBACvC,IAAI,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;aAC5C;YACD,WAAW,EAAE,2BAAkB;YAE/B,8CAA8C;YAC9C,8CAA8C;YAC9C,kDAAkD;YAClD,gBAAgB,EAAE,kCAAyB;SAC9C,CAAC,CAAC;QAEH,mFAAmF;QACnF,kEAAkE;QAClE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;QAC1C,4DAA4D;QAC5D,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;KAC7C;IAED,IAAI,oBAAoB,EAAE;QACtB;;;;WAIG;QACH,MAAM,iBAAiB,GAAG,UAAU,CAAC;YACjC,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE,IAAI;YACvB,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;YACpC,aAAa,EAAE;gBACX,CAAC,YAAY,EAAE,oBAAoB,CAAC;gBACpC,CAAC,aAAa,EAAE,WAAW,CAAC,EAAE,iDAAiD;aAClF;YACD,eAAe,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;gBACnC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACvE,CAAC;YACD,2HAA2H;YAC3H,oDAAoD;YACpD,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnE,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAC9B;IACD,GAAG,CAAC,GAAG,CAAC,sCAAiB,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,0BAAW,CAAC,CAAC;IAC1B,MAAM,MAAM,GAAG,IAAA,+BAAmB,EAAC,MAAM,EAAE,GAAG,EAAE,eAAM,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,qBAAS,EAAE,IAAA,8BAAgB,EAAC,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC;IAClE,GAAG,CAAC,GAAG,CAAC,wBAAY,EAAE,IAAA,+BAAkB,EAAC,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC;IACvE,GAAG,CAAC,GAAG,CAAC,wBAAY,EAAE,IAAA,+BAAkB,EAAC,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC;IACvE,GAAG,CAAC,GAAG,CAAC,0BAAc,EAAE,IAAA,uCAAoB,EAAC,eAAe,CAAC,CAAC,CAAC;IAC/D,GAAG,CAAC,GAAG,CAAC,sBAAU,EAAE,IAAA,uCAAoB,EAAC,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC;IAE1E,IAAI,mBAAU,EAAE;QACZ,wFAAwF;QACxF,GAAG,CAAC,GAAG,CACH,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC;YACzB,6DAA6D;YAC7D,8DAA8D;YAC9D,iBAAiB,CAAC,KAAU;gBACxB,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,IAAI,UAAU,CAAC,WAAW,EAAE;oBACtE,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;SACJ,CAAC,CACL,CAAC;KACL;IAED,GAAG,CAAC,GAAG,CAAC,6BAAY,CAAC,CAAC;IAEtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/B,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;AAC3B,CAAC;AA/FD,0DA+FC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/runners/http_rfqm_service_runner.ts"],"sourcesContent":["/**\n * This module can be used to run the RFQM HTTP service standalone\n */\nimport { createDefaultServer, HttpServiceConfig } from '@0x/api-utils';\nimport * as Sentry from '@sentry/node';\nimport * as Tracing from '@sentry/tracing';\nimport Axios from 'axios';\nimport * as express from 'express';\nimport * as promBundle from 'express-prom-bundle';\n// tslint:disable-next-line:no-implicit-dependencies\nimport * as core from 'express-serve-static-core';\nimport { Server } from 'http';\nimport * as HttpStatus from 'http-status-codes';\nimport Redis from 'ioredis';\nimport { DataSource } from 'typeorm';\n\nimport {\n    CHAIN_CONFIGURATIONS,\n    defaultHttpServiceConfig,\n    DEFINED_FI_API_KEY,\n    DEFINED_FI_ENDPOINT,\n    REDIS_URI,\n    SENTRY_DSN,\n    SENTRY_ENVIRONMENT,\n    SENTRY_TRACES_SAMPLE_RATE,\n    TOKEN_PRICE_ORACLE_TIMEOUT,\n} from '../config';\nimport { ADMIN_PATH, RFQM_PATH, RFQT_V1_PATH, RFQT_V2_PATH, RFQ_MAKER_PATH } from '../core/constants';\nimport { getDbDataSourceAsync } from '../getDbDataSourceAsync';\nimport { rootHandler } from '../handlers/root_handler';\nimport { logger } from '../logger';\nimport { addressNormalizer } from '../middleware/address_normalizer';\nimport { errorHandler } from '../middleware/error_handling';\nimport { createRfqmRouter } from '../routers/rfqm_router';\nimport { createRfqtV1Router, createRfqtV2Router } from '../routers/RfqtRouter';\nimport { createRfqAdminRouter } from '../routers/rfq_admin_router';\nimport { createRfqMakerRouter } from '../routers/rfq_maker_router';\nimport { RfqAdminService } from '../services/rfq_admin_service';\nimport { RfqMakerService } from '../services/rfq_maker_service';\nimport { ConfigManager } from '../utils/config_manager';\nimport { RfqmDbUtils } from '../utils/rfqm_db_utils';\nimport { buildRfqmServicesAsync, getAxiosRequestConfig, RfqmServices } from '../utils/rfqm_service_builder';\nimport { buildRfqtServicesAsync, RfqtServices } from '../utils/rfqtServiceBuilder';\nimport { RfqMakerDbUtils } from '../utils/rfq_maker_db_utils';\nimport { closeRedisConnectionsAsync } from '../utils/runner_utils';\nimport { TokenPriceOracle } from '../utils/TokenPriceOracle';\n\nconst redisInstances: Redis[] = [];\n\nprocess.on('uncaughtException', (err) => {\n    logger.error(err);\n    process.exit(1);\n});\n\nprocess.on('unhandledRejection', (err) => {\n    if (err) {\n        logger.error(err as Error);\n    }\n});\n\nprocess.on('SIGTERM', async () => {\n    logger.info('Received SIGTERM. Start to shutdown RFQ services');\n    await closeRedisConnectionsAsync(redisInstances);\n    process.exit(0);\n});\n\n// Used for shutting down locally\nprocess.on('SIGINT', async () => {\n    logger.info('Received SIGINT. Start to shutdown RFQ services');\n    await closeRedisConnectionsAsync(redisInstances);\n    process.exit(0);\n});\n\nif (require.main === module) {\n    (async () => {\n        // Build dependencies\n        const config: HttpServiceConfig = {\n            ...defaultHttpServiceConfig,\n        };\n        const connection = await getDbDataSourceAsync();\n        const rfqmDbUtils = new RfqmDbUtils(connection);\n        const rfqMakerDbUtils = new RfqMakerDbUtils(connection);\n        const configManager = new ConfigManager();\n        const axiosInstance = Axios.create(getAxiosRequestConfig(TOKEN_PRICE_ORACLE_TIMEOUT));\n        const tokenPriceOracle = new TokenPriceOracle(axiosInstance, DEFINED_FI_API_KEY, DEFINED_FI_ENDPOINT);\n\n        if (!REDIS_URI) {\n            throw new Error('No redis URI provided to RFQ Service');\n        }\n        const redis = new Redis(REDIS_URI);\n        redisInstances.push(redis);\n\n        const rfqmServices = await buildRfqmServicesAsync(\n            /* asWorker = */ false,\n            rfqmDbUtils,\n            rfqMakerDbUtils,\n            CHAIN_CONFIGURATIONS,\n            tokenPriceOracle,\n            configManager,\n            redis,\n        );\n\n        const rfqtServices = await buildRfqtServicesAsync(CHAIN_CONFIGURATIONS, rfqMakerDbUtils, redis);\n\n        const rfqAdminService = buildRfqAdminService(rfqmDbUtils);\n        const rfqMakerService = buildRfqMakerService(rfqMakerDbUtils, configManager);\n        await runHttpRfqmServiceAsync(\n            rfqmServices,\n            rfqtServices,\n            rfqAdminService,\n            rfqMakerService,\n            configManager,\n            config,\n            connection,\n        );\n    })().catch((error) => logger.error(error.stack));\n}\n\n/**\n * Builds an instance of RfqAdminService\n */\nexport function buildRfqAdminService(dbUtils: RfqmDbUtils): RfqAdminService {\n    return new RfqAdminService(dbUtils);\n}\n\n/**\n * Builds an instance of RfqMakerService\n */\nexport function buildRfqMakerService(dbUtils: RfqMakerDbUtils, configManager: ConfigManager): RfqMakerService {\n    return new RfqMakerService(dbUtils, configManager);\n}\n\n/**\n * Runs the Rfqm Service in isolation\n */\nexport async function runHttpRfqmServiceAsync(\n    rfqmServices: RfqmServices,\n    rfqtServices: RfqtServices,\n    rfqAdminService: RfqAdminService,\n    rfqMakerService: RfqMakerService,\n    configManager: ConfigManager,\n    config: HttpServiceConfig,\n    connection: DataSource,\n    // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n    // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n    useMetricsMiddleware: boolean = true,\n    _app?: core.Express,\n): Promise<{ app: express.Application; server: Server }> {\n    const app = _app || express();\n\n    if (SENTRY_DSN) {\n        Sentry.init({\n            dsn: SENTRY_DSN,\n            integrations: [\n                // enable HTTP calls tracing\n                new Sentry.Integrations.Http({ tracing: true }),\n                // enable Express.js middleware tracing\n                new Tracing.Integrations.Express({ app }),\n            ],\n            environment: SENTRY_ENVIRONMENT,\n\n            // Set tracesSampleRate to 1.0 to capture 100%\n            // of transactions for performance monitoring.\n            // We recommend adjusting this value in production\n            tracesSampleRate: SENTRY_TRACES_SAMPLE_RATE,\n        });\n\n        // RequestHandler creates a separate execution context using domains, so that every\n        // transaction/span/breadcrumb is attached to its own Hub instance\n        app.use(Sentry.Handlers.requestHandler());\n        // TracingHandler creates a trace for every incoming request\n        app.use(Sentry.Handlers.tracingHandler());\n    }\n\n    if (useMetricsMiddleware) {\n        /**\n         * express-prom-bundle will create a histogram metric called \"http_request_duration_seconds\"\n         * The official prometheus docs describe how to use this exact histogram metric: https://prometheus.io/docs/practices/histograms/\n         * We use the following labels: statusCode, path\n         */\n        const metricsMiddleware = promBundle({\n            autoregister: false,\n            includeStatusCode: true,\n            includePath: true,\n            customLabels: { chainId: undefined },\n            normalizePath: [\n                ['/status/.*', '/status/#orderHash'], // converts all /status/0xdeadbeef... => /status/#orderHash\n                ['/api-docs.*', '/api-docs'], // converts all /api-docs/favicon... => /api-docs\n            ],\n            transformLabels: (labels, req, _res) => {\n                Object.assign(labels, { chainId: req.header('0x-chain-id') || 1 });\n            },\n            // buckets used for the http_request_duration_seconds histogram. All numbers (in seconds) represents boundaries of buckets.\n            // tslint:disable-next-line: custom-no-magic-numbers\n            buckets: [0.01, 0.04, 0.1, 0.3, 0.6, 1, 1.5, 2, 2.5, 3, 4, 6, 9],\n        });\n        app.use(metricsMiddleware);\n    }\n    app.use(addressNormalizer);\n    app.get('/', rootHandler);\n    const server = createDefaultServer(config, app, logger, async () => {\n        await connection.close();\n    });\n\n    app.use(RFQM_PATH, createRfqmRouter(rfqmServices, configManager));\n    app.use(RFQT_V1_PATH, createRfqtV1Router(rfqtServices, configManager));\n    app.use(RFQT_V2_PATH, createRfqtV2Router(rfqtServices, configManager));\n    app.use(RFQ_MAKER_PATH, createRfqMakerRouter(rfqMakerService));\n    app.use(ADMIN_PATH, createRfqAdminRouter(rfqAdminService, configManager));\n\n    if (SENTRY_DSN) {\n        // The error handler must be before any other error middleware and after all controllers\n        app.use(\n            Sentry.Handlers.errorHandler({\n                // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                shouldHandleError(error: any): boolean {\n                    if (error.status === undefined || error.status >= HttpStatus.BAD_REQUEST) {\n                        return true;\n                    }\n                    return false;\n                },\n            }),\n        );\n    }\n\n    app.use(errorHandler);\n\n    server.listen(config.httpPort);\n    return { app, server };\n}\n"],"version":3}