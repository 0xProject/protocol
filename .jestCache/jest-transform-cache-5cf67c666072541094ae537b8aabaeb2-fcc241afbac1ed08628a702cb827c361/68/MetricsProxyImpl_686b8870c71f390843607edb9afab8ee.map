{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/quoteRequestor/MetricsProxyImpl.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/quoteRequestor/MetricsProxyImpl.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\nimport { Counter, Histogram, Summary } from 'prom-client';\n\nimport { Integrator } from '../config';\n\nimport { MetricsProxy } from './QuoteRequestor';\n\nconst ORDER_EXPIRED_TOO_SOON = new Counter({\n    name: 'rfq_order_expired_too_soon',\n    help: 'RFQ Order expired too soon',\n    labelNames: ['maker', 'isLastLook'],\n});\n\nconst EXPIRATION_FOR_VALID_ORDER_SECONDS = new Histogram({\n    name: 'rfq_expiration_for_valid_order',\n    help: 'Order expiration in seconds for ',\n    labelNames: ['maker', 'isLastLook'],\n    // Buckets go from 30 seconds all the way to 5 minutes\n\n    // tslint:disable-next-line: custom-no-magic-numbers\n    buckets: [0, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225, 240, 255, 270, 285, 300],\n});\n\nconst ORDER_FILL_RATIO_WARNING_RANGE = new Counter({\n    name: 'rfq_fill_ratio_warning',\n    help: 'Fill ratio is in warning range (99%) usually due to a bug',\n    labelNames: ['maker', 'isLastLook'],\n});\n\nconst RFQ_MAKER_NETWORK_INTERACTION_COUNTER = new Counter({\n    name: 'rfq_maker_network_interaction_counter',\n    help: 'Provides stats around market maker network interactions',\n    labelNames: ['isLastLook', 'integratorLabel', 'url', 'quoteType', 'included', 'statusCode', 'market'],\n});\n\nconst RFQ_MAKER_NETWORK_INTERACTION_SUMMARY = new Summary({\n    name: 'rfq_maker_network_interaction_summary',\n    help: 'Provides stats around market maker network interactions',\n    labelNames: ['isLastLook', 'integratorLabel', 'url', 'quoteType', 'included', 'statusCode', 'market'],\n});\n\n// NOTE: Do not use this map for anything sensitive. This is only used for\n// metrics/datavis purposes.\nconst KNOWN_TOKENS: { [key: string]: string } = {\n    '0x6b175474e89094c44da98b954eedeac495271d0f': 'DAI',\n    '0xdac17f958d2ee523a2206206994597c13d831ec7': 'USDT',\n    '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48': 'USDC',\n    '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599': 'WBTC',\n    '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': 'WETH',\n};\n\n/**\n * Returns a human-readible label for Prometheus counters. Only popular most relevant pairs\n * should be displayed in Prometheus (since it overload the service) and any other market that does\n * not contain popular pairs will simply return \"Other\".\n *\n * @param tokenSold the token being sold\n * @param tokenPurchased the token being purchased\n * @returns a market like \"WETH-DAI\", or \"Other\" is a pair is unknown\n */\nfunction getMarketLabel(tokenSold: string, tokenPurchased: string): string {\n    const items = [tokenSold.toLowerCase(), tokenPurchased.toLowerCase()];\n    items.sort();\n\n    const tokenA: string | undefined = KNOWN_TOKENS[items[0]];\n    const tokenB: string | undefined = KNOWN_TOKENS[items[1]];\n    if (!tokenA || !tokenB) {\n        return 'Other';\n    }\n    return `${tokenA}-${tokenB}`;\n}\n\nexport const METRICS_PROXY: MetricsProxy = {\n    incrementExpirationToSoonCounter: (isLastLook: boolean, maker: string) => {\n        ORDER_EXPIRED_TOO_SOON.labels(maker, isLastLook.toString()).inc();\n    },\n\n    measureExpirationForValidOrder: (isLastLook: boolean, maker: string, expirationTimeSeconds: BigNumber | number) => {\n        EXPIRATION_FOR_VALID_ORDER_SECONDS.labels(maker, isLastLook.toString()).observe(\n            new BigNumber(expirationTimeSeconds).toNumber(),\n        );\n    },\n\n    incrementFillRatioWarningCounter: (isLastLook: boolean, maker: string) => {\n        ORDER_FILL_RATIO_WARNING_RANGE.labels(maker, isLastLook.toString()).inc();\n    },\n\n    logRfqMakerNetworkInteraction: (interaction: {\n        isLastLook: boolean;\n        integrator: Integrator;\n        url: string;\n        quoteType: 'firm' | 'indicative';\n        statusCode: number | undefined;\n        latencyMs: number;\n        included: boolean;\n        sellTokenAddress: string;\n        buyTokenAddress: string;\n    }) => {\n        const {\n            isLastLook,\n            integrator,\n            url,\n            quoteType,\n            included: isIncluded,\n            statusCode,\n            sellTokenAddress,\n            buyTokenAddress,\n            latencyMs,\n        } = interaction;\n\n        const market = getMarketLabel(sellTokenAddress, buyTokenAddress);\n        const payload = [\n            isLastLook.toString(),\n            integrator.label,\n            url,\n            quoteType,\n            isIncluded.toString(),\n            `${statusCode || 'N/A'}`,\n            market,\n        ];\n        RFQ_MAKER_NETWORK_INTERACTION_COUNTER.labels(...payload).inc();\n        RFQ_MAKER_NETWORK_INTERACTION_SUMMARY.labels(...payload).observe(latencyMs);\n    },\n};\n"],"version":3}