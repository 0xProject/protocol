c778e0ceffd1aab444a32b8f527508eb
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = require("axios");
const axios_mock_adapter_1 = require("axios-mock-adapter");
const HttpStatus = require("http-status-codes");
const GasOracleType2_1 = require("../../src/utils/GasOracleType2");
const fakeEip1559Response = {
    result: {
        source: 'MEDIAN',
        timestamp: 1649113582,
        instant: {
            price: 80000000000,
            maxPriorityFeePerGas: 2000000000,
            maxFeePerGas: 158770000000,
            baseFeePerGas: 78383362949,
        },
        fast: {
            price: 79000000000,
            maxPriorityFeePerGas: 1500000000,
            maxFeePerGas: 158270000000,
            baseFeePerGas: 78383362949,
        },
        standard: {
            price: 79000000000,
            maxPriorityFeePerGas: 1500000000,
            maxFeePerGas: 158270000000,
            baseFeePerGas: 78383362949,
        },
        low: {
            price: 79000000000,
            maxPriorityFeePerGas: 1240000000,
            maxFeePerGas: 158000000000,
            baseFeePerGas: 78383362949,
        },
    },
};
let axiosClient;
let axiosMock;
describe('GasOracleType2', () => {
    beforeAll(() => {
        axiosClient = axios_1.default.create();
        axiosMock = new axios_mock_adapter_1.default(axiosClient);
    });
    describe('create', () => {
        it('fails for non-default output formats', async () => {
            expect(() => GasOracleType2_1.GasOracleType2.create('http://gas-price-oracle-svc.gas-price-oracle/v2/source/median?output=eth_gas_station', axiosClient)).toThrow();
        });
        it('fails for a v0 URL', async () => {
            expect(() => GasOracleType2_1.GasOracleType2.create('http://gas-price-oracle-svc.gas-price-oracle/source/median', axiosClient)).toThrow();
        });
    });
    describe('getBaseFeePerGasWeiAsync', () => {
        it('gets the base fee', async () => {
            axiosMock
                .onGet(`http://gas-price-oracle-svc.gas-price-oracle/v2/source/median`)
                .replyOnce(HttpStatus.OK, fakeEip1559Response);
            const gasOracle = GasOracleType2_1.GasOracleType2.create('http://gas-price-oracle-svc.gas-price-oracle/v2/source/median', axiosClient);
            const baseFee = await gasOracle.getBaseFeePerGasWeiAsync();
            expect(baseFee.toString()).toEqual('78383362949');
        });
    });
    describe('getMaxPriorityFeePerGasWeiAsync', () => {
        it('gets the max priority fee', async () => {
            axiosMock
                .onGet(`http://gas-price-oracle-svc.gas-price-oracle/v2/source/median`)
                .replyOnce(HttpStatus.OK, fakeEip1559Response);
            const gasOracle = GasOracleType2_1.GasOracleType2.create('http://gas-price-oracle-svc.gas-price-oracle/v2/source/median', axiosClient);
            const baseFee = await gasOracle.getMaxPriorityFeePerGasWeiAsync('low');
            expect(baseFee.toString()).toEqual('1240000000');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2Rhdmlkd2Fsc2gvY29kZS1sb2NhbC8weC1yZnEtYXBpL3Rlc3QvdXRpbHMvR2FzT3JhY2xlVHlwZTJUZXN0LnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQTZDO0FBQzdDLDJEQUFrRDtBQUNsRCxnREFBZ0Q7QUFFaEQsbUVBQWdFO0FBRWhFLE1BQU0sbUJBQW1CLEdBQUc7SUFDeEIsTUFBTSxFQUFFO1FBQ0osTUFBTSxFQUFFLFFBQVE7UUFDaEIsU0FBUyxFQUFFLFVBQVU7UUFDckIsT0FBTyxFQUFFO1lBQ0wsS0FBSyxFQUFFLFdBQVc7WUFDbEIsb0JBQW9CLEVBQUUsVUFBVTtZQUNoQyxZQUFZLEVBQUUsWUFBWTtZQUMxQixhQUFhLEVBQUUsV0FBVztTQUM3QjtRQUNELElBQUksRUFBRTtZQUNGLEtBQUssRUFBRSxXQUFXO1lBQ2xCLG9CQUFvQixFQUFFLFVBQVU7WUFDaEMsWUFBWSxFQUFFLFlBQVk7WUFDMUIsYUFBYSxFQUFFLFdBQVc7U0FDN0I7UUFDRCxRQUFRLEVBQUU7WUFDTixLQUFLLEVBQUUsV0FBVztZQUNsQixvQkFBb0IsRUFBRSxVQUFVO1lBQ2hDLFlBQVksRUFBRSxZQUFZO1lBQzFCLGFBQWEsRUFBRSxXQUFXO1NBQzdCO1FBQ0QsR0FBRyxFQUFFO1lBQ0QsS0FBSyxFQUFFLFdBQVc7WUFDbEIsb0JBQW9CLEVBQUUsVUFBVTtZQUNoQyxZQUFZLEVBQUUsWUFBWTtZQUMxQixhQUFhLEVBQUUsV0FBVztTQUM3QjtLQUNKO0NBQ0osQ0FBQztBQUVGLElBQUksV0FBMEIsQ0FBQztBQUMvQixJQUFJLFNBQTJCLENBQUM7QUFFaEMsUUFBUSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRTtJQUM1QixTQUFTLENBQUMsR0FBRyxFQUFFO1FBQ1gsV0FBVyxHQUFHLGVBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM3QixTQUFTLEdBQUcsSUFBSSw0QkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNsRCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFO1FBQ3BCLEVBQUUsQ0FBQyxzQ0FBc0MsRUFBRSxLQUFLLElBQUksRUFBRTtZQUNsRCxNQUFNLENBQUMsR0FBRyxFQUFFLENBQ1IsK0JBQWMsQ0FBQyxNQUFNLENBQ2pCLHNGQUFzRixFQUN0RixXQUFXLENBQ2QsQ0FDSixDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLG9CQUFvQixFQUFFLEtBQUssSUFBSSxFQUFFO1lBQ2hDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FDUiwrQkFBYyxDQUFDLE1BQU0sQ0FBQyw0REFBNEQsRUFBRSxXQUFXLENBQUMsQ0FDbkcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLDBCQUEwQixFQUFFLEdBQUcsRUFBRTtRQUN0QyxFQUFFLENBQUMsbUJBQW1CLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDL0IsU0FBUztpQkFDSixLQUFLLENBQUMsK0RBQStELENBQUM7aUJBQ3RFLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFLG1CQUFtQixDQUFDLENBQUM7WUFFbkQsTUFBTSxTQUFTLEdBQUcsK0JBQWMsQ0FBQyxNQUFNLENBQ25DLCtEQUErRCxFQUMvRCxXQUFXLENBQ2QsQ0FBQztZQUVGLE1BQU0sT0FBTyxHQUFHLE1BQU0sU0FBUyxDQUFDLHdCQUF3QixFQUFFLENBQUM7WUFDM0QsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN0RCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLGlDQUFpQyxFQUFFLEdBQUcsRUFBRTtRQUM3QyxFQUFFLENBQUMsMkJBQTJCLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDdkMsU0FBUztpQkFDSixLQUFLLENBQUMsK0RBQStELENBQUM7aUJBQ3RFLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFLG1CQUFtQixDQUFDLENBQUM7WUFFbkQsTUFBTSxTQUFTLEdBQUcsK0JBQWMsQ0FBQyxNQUFNLENBQ25DLCtEQUErRCxFQUMvRCxXQUFXLENBQ2QsQ0FBQztZQUVGLE1BQU0sT0FBTyxHQUFHLE1BQU0sU0FBUyxDQUFDLCtCQUErQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3ZFLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDckQsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZHdhbHNoL2NvZGUtbG9jYWwvMHgtcmZxLWFwaS90ZXN0L3V0aWxzL0dhc09yYWNsZVR5cGUyVGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXhpb3MsIHsgQXhpb3NJbnN0YW5jZSB9IGZyb20gJ2F4aW9zJztcbmltcG9ydCBBeGlvc01vY2tBZGFwdGVyIGZyb20gJ2F4aW9zLW1vY2stYWRhcHRlcic7XG5pbXBvcnQgKiBhcyBIdHRwU3RhdHVzIGZyb20gJ2h0dHAtc3RhdHVzLWNvZGVzJztcblxuaW1wb3J0IHsgR2FzT3JhY2xlVHlwZTIgfSBmcm9tICcuLi8uLi9zcmMvdXRpbHMvR2FzT3JhY2xlVHlwZTInO1xuXG5jb25zdCBmYWtlRWlwMTU1OVJlc3BvbnNlID0ge1xuICAgIHJlc3VsdDoge1xuICAgICAgICBzb3VyY2U6ICdNRURJQU4nLFxuICAgICAgICB0aW1lc3RhbXA6IDE2NDkxMTM1ODIsXG4gICAgICAgIGluc3RhbnQ6IHtcbiAgICAgICAgICAgIHByaWNlOiA4MDAwMDAwMDAwMCxcbiAgICAgICAgICAgIG1heFByaW9yaXR5RmVlUGVyR2FzOiAyMDAwMDAwMDAwLFxuICAgICAgICAgICAgbWF4RmVlUGVyR2FzOiAxNTg3NzAwMDAwMDAsXG4gICAgICAgICAgICBiYXNlRmVlUGVyR2FzOiA3ODM4MzM2Mjk0OSxcbiAgICAgICAgfSxcbiAgICAgICAgZmFzdDoge1xuICAgICAgICAgICAgcHJpY2U6IDc5MDAwMDAwMDAwLFxuICAgICAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXM6IDE1MDAwMDAwMDAsXG4gICAgICAgICAgICBtYXhGZWVQZXJHYXM6IDE1ODI3MDAwMDAwMCxcbiAgICAgICAgICAgIGJhc2VGZWVQZXJHYXM6IDc4MzgzMzYyOTQ5LFxuICAgICAgICB9LFxuICAgICAgICBzdGFuZGFyZDoge1xuICAgICAgICAgICAgcHJpY2U6IDc5MDAwMDAwMDAwLFxuICAgICAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXM6IDE1MDAwMDAwMDAsXG4gICAgICAgICAgICBtYXhGZWVQZXJHYXM6IDE1ODI3MDAwMDAwMCxcbiAgICAgICAgICAgIGJhc2VGZWVQZXJHYXM6IDc4MzgzMzYyOTQ5LFxuICAgICAgICB9LFxuICAgICAgICBsb3c6IHtcbiAgICAgICAgICAgIHByaWNlOiA3OTAwMDAwMDAwMCxcbiAgICAgICAgICAgIG1heFByaW9yaXR5RmVlUGVyR2FzOiAxMjQwMDAwMDAwLFxuICAgICAgICAgICAgbWF4RmVlUGVyR2FzOiAxNTgwMDAwMDAwMDAsXG4gICAgICAgICAgICBiYXNlRmVlUGVyR2FzOiA3ODM4MzM2Mjk0OSxcbiAgICAgICAgfSxcbiAgICB9LFxufTtcblxubGV0IGF4aW9zQ2xpZW50OiBBeGlvc0luc3RhbmNlO1xubGV0IGF4aW9zTW9jazogQXhpb3NNb2NrQWRhcHRlcjtcblxuZGVzY3JpYmUoJ0dhc09yYWNsZVR5cGUyJywgKCkgPT4ge1xuICAgIGJlZm9yZUFsbCgoKSA9PiB7XG4gICAgICAgIGF4aW9zQ2xpZW50ID0gQXhpb3MuY3JlYXRlKCk7XG4gICAgICAgIGF4aW9zTW9jayA9IG5ldyBBeGlvc01vY2tBZGFwdGVyKGF4aW9zQ2xpZW50KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKCdjcmVhdGUnLCAoKSA9PiB7XG4gICAgICAgIGl0KCdmYWlscyBmb3Igbm9uLWRlZmF1bHQgb3V0cHV0IGZvcm1hdHMnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoKCkgPT5cbiAgICAgICAgICAgICAgICBHYXNPcmFjbGVUeXBlMi5jcmVhdGUoXG4gICAgICAgICAgICAgICAgICAgICdodHRwOi8vZ2FzLXByaWNlLW9yYWNsZS1zdmMuZ2FzLXByaWNlLW9yYWNsZS92Mi9zb3VyY2UvbWVkaWFuP291dHB1dD1ldGhfZ2FzX3N0YXRpb24nLFxuICAgICAgICAgICAgICAgICAgICBheGlvc0NsaWVudCxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgKS50b1Rocm93KCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpdCgnZmFpbHMgZm9yIGEgdjAgVVJMJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KCgpID0+XG4gICAgICAgICAgICAgICAgR2FzT3JhY2xlVHlwZTIuY3JlYXRlKCdodHRwOi8vZ2FzLXByaWNlLW9yYWNsZS1zdmMuZ2FzLXByaWNlLW9yYWNsZS9zb3VyY2UvbWVkaWFuJywgYXhpb3NDbGllbnQpLFxuICAgICAgICAgICAgKS50b1Rocm93KCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ2dldEJhc2VGZWVQZXJHYXNXZWlBc3luYycsICgpID0+IHtcbiAgICAgICAgaXQoJ2dldHMgdGhlIGJhc2UgZmVlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgYXhpb3NNb2NrXG4gICAgICAgICAgICAgICAgLm9uR2V0KGBodHRwOi8vZ2FzLXByaWNlLW9yYWNsZS1zdmMuZ2FzLXByaWNlLW9yYWNsZS92Mi9zb3VyY2UvbWVkaWFuYClcbiAgICAgICAgICAgICAgICAucmVwbHlPbmNlKEh0dHBTdGF0dXMuT0ssIGZha2VFaXAxNTU5UmVzcG9uc2UpO1xuXG4gICAgICAgICAgICBjb25zdCBnYXNPcmFjbGUgPSBHYXNPcmFjbGVUeXBlMi5jcmVhdGUoXG4gICAgICAgICAgICAgICAgJ2h0dHA6Ly9nYXMtcHJpY2Utb3JhY2xlLXN2Yy5nYXMtcHJpY2Utb3JhY2xlL3YyL3NvdXJjZS9tZWRpYW4nLFxuICAgICAgICAgICAgICAgIGF4aW9zQ2xpZW50LFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgYmFzZUZlZSA9IGF3YWl0IGdhc09yYWNsZS5nZXRCYXNlRmVlUGVyR2FzV2VpQXN5bmMoKTtcbiAgICAgICAgICAgIGV4cGVjdChiYXNlRmVlLnRvU3RyaW5nKCkpLnRvRXF1YWwoJzc4MzgzMzYyOTQ5Jyk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ2dldE1heFByaW9yaXR5RmVlUGVyR2FzV2VpQXN5bmMnLCAoKSA9PiB7XG4gICAgICAgIGl0KCdnZXRzIHRoZSBtYXggcHJpb3JpdHkgZmVlJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgYXhpb3NNb2NrXG4gICAgICAgICAgICAgICAgLm9uR2V0KGBodHRwOi8vZ2FzLXByaWNlLW9yYWNsZS1zdmMuZ2FzLXByaWNlLW9yYWNsZS92Mi9zb3VyY2UvbWVkaWFuYClcbiAgICAgICAgICAgICAgICAucmVwbHlPbmNlKEh0dHBTdGF0dXMuT0ssIGZha2VFaXAxNTU5UmVzcG9uc2UpO1xuXG4gICAgICAgICAgICBjb25zdCBnYXNPcmFjbGUgPSBHYXNPcmFjbGVUeXBlMi5jcmVhdGUoXG4gICAgICAgICAgICAgICAgJ2h0dHA6Ly9nYXMtcHJpY2Utb3JhY2xlLXN2Yy5nYXMtcHJpY2Utb3JhY2xlL3YyL3NvdXJjZS9tZWRpYW4nLFxuICAgICAgICAgICAgICAgIGF4aW9zQ2xpZW50LFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgYmFzZUZlZSA9IGF3YWl0IGdhc09yYWNsZS5nZXRNYXhQcmlvcml0eUZlZVBlckdhc1dlaUFzeW5jKCdsb3cnKTtcbiAgICAgICAgICAgIGV4cGVjdChiYXNlRmVlLnRvU3RyaW5nKCkpLnRvRXF1YWwoJzEyNDAwMDAwMDAnKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==