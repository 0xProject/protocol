{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/transformers.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/transformers.ts"],"sourcesContent":["import { MetaTransaction, MetaTransactionFields } from '@0x/protocol-utils';\r\nimport { BigNumber } from '@0x/utils';\r\nimport { ValueTransformer } from 'typeorm';\r\n\r\nimport { Fee, StoredFee } from '../core/types';\r\nimport { feeToStoredFee, storedFeeToFee } from '../core/fee_utils';\r\n\r\nexport const BigIntTransformer: ValueTransformer = {\r\n    from: (value: string | null): number | null => {\r\n        if (value === null) {\r\n            return null;\r\n        }\r\n        const num = Number(value);\r\n        if (!Number.isSafeInteger(num)) {\r\n            throw new Error('unsafe integer precision when transforming value');\r\n        }\r\n        return value === null ? null : Number(value);\r\n    },\r\n    to: (value: number | null | undefined): string | null => {\r\n        if (value === null || value === undefined) {\r\n            return null;\r\n        }\r\n        if (!Number.isSafeInteger(value)) {\r\n            throw new Error('unsafe integer precision when transforming value');\r\n        }\r\n        return value.toString();\r\n    },\r\n};\r\n\r\nexport const BigNumberTransformer: ValueTransformer = {\r\n    from: (value: string | null): BigNumber | null => {\r\n        return value === null ? null : new BigNumber(value);\r\n    },\r\n    to: (value: BigNumber | null | undefined): string | null => {\r\n        return value === null || value === undefined ? null : value.toString();\r\n    },\r\n};\r\n\r\nexport const MetaTransactionTransformer: ValueTransformer = {\r\n    /**\r\n     * Used to marshal `MetaTransaction` when writing to the database.\r\n     */\r\n    to: (metaTransaction: MetaTransaction): Record<keyof MetaTransactionFields, string> => {\r\n        const { minGasPrice, maxGasPrice, expirationTimeSeconds, salt, value, feeAmount, chainId } = metaTransaction;\r\n        return {\r\n            ...metaTransaction,\r\n            minGasPrice: minGasPrice.toString(),\r\n            maxGasPrice: maxGasPrice.toString(),\r\n            expirationTimeSeconds: expirationTimeSeconds.toString(),\r\n            salt: salt.toString(),\r\n            value: value.toString(),\r\n            feeAmount: feeAmount.toString(),\r\n            chainId: chainId.toString(),\r\n        };\r\n    },\r\n    /**\r\n     * Used to unmarshal `MetaTransaction` when reading from the database.\r\n     */\r\n    from: (storedValue: Record<keyof MetaTransactionFields, string>): MetaTransaction => {\r\n        const { minGasPrice, maxGasPrice, expirationTimeSeconds, salt, value, feeAmount, chainId } = storedValue;\r\n        return new MetaTransaction({\r\n            ...storedValue,\r\n            minGasPrice: new BigNumber(minGasPrice),\r\n            maxGasPrice: new BigNumber(maxGasPrice),\r\n            expirationTimeSeconds: new BigNumber(expirationTimeSeconds),\r\n            salt: new BigNumber(salt),\r\n            value: new BigNumber(value),\r\n            feeAmount: new BigNumber(feeAmount),\r\n            chainId: Number(chainId),\r\n        });\r\n    },\r\n};\r\n\r\nexport const FeeTransformer: ValueTransformer = {\r\n    /**\r\n     * Used to marshal `Fee` when writing to the database.\r\n     */\r\n    to: (value: Fee): StoredFee => {\r\n        return feeToStoredFee(value);\r\n    },\r\n    /**\r\n     * Used to unmarshal `Fee` when reading from the database.\r\n     */\r\n    from: (storedFee: StoredFee): Fee => {\r\n        return storedFeeToFee(storedFee);\r\n    },\r\n};\r\n"],"version":3}