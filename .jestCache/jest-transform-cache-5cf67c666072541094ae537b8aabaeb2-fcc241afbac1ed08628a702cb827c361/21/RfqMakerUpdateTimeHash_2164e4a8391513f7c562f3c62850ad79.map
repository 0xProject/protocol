{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqMakerUpdateTimeHash.ts","mappings":";;;;;;;;;;;;AAAA,qCAAiD;AAKjD;;;;;;GAMG;AAiBH,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAO/B,oFAAoF;IACpF,kFAAkF;IAClF,qCAAqC;IACrC,4DAA4D;IAC5D,YAAY,OAAmC,EAAgC;QAC3E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;CACJ,CAAA;AAbG;IADC,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;;uDACV;AAGvB;IADC,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;oDACT;AALX,sBAAsB;IAhBlC,IAAA,oBAAU,EAAC;QACR,IAAI,EAAE,oCAAoC;QAC1C,UAAU,EAAE;;;;;;;;;;;;KAYX;KACJ,CAAC;;GACW,sBAAsB,CAelC;AAfY,wDAAsB","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqMakerUpdateTimeHash.ts"],"sourcesContent":["import { ViewColumn, ViewEntity } from 'typeorm';\n\nexport type RfqMakerUpdateTimeHashOpts = Pick<RfqMakerUpdateTimeHash, 'hash' | 'chainId'> &\n    Partial<RfqMakerUpdateTimeHash>;\n\n/**\n * A materialized view for a hash of all makers' last update time for each chain.\n * The materialized view will be updated immidiately after table `rfq_maker_pairs` is updated.\n * The hashes (one per chain) are used by RfqMakerManger to determine whether a refresh is needed.\n * The expression of ViewEntity is duplicated with the corresponding mirgation file, and is only used when\n * `synchronize` is set to `true` which is the case when running some test cases.\n */\n@ViewEntity({\n    name: 'rfq_maker_pairs_update_time_hashes',\n    expression: `\n        SELECT\n            encode(\n                digest(\n                    array_agg(\n                        updated_at ORDER BY updated_at NULLS FIRST\n                    )::text,\n                'sha256'),\n            'hex') AS hash,\n            chain_id\n        FROM rfq_maker_pairs\n        GROUP BY chain_id\n    `,\n})\nexport class RfqMakerUpdateTimeHash {\n    @ViewColumn({ name: 'chain_id' })\n    public chainId: number;\n\n    @ViewColumn({ name: 'hash' })\n    public hash: string;\n\n    // TypeORM runs a validation check where it calls this initializer with no argument.\n    // With no default `opts`, `opts` will be undefined and the validation will throw,\n    // therefore, add this hacky default.\n    // tslint:disable-next-line no-object-literal-type-assertion\n    constructor(opts: RfqMakerUpdateTimeHashOpts = {} as RfqMakerUpdateTimeHashOpts) {\n        this.chainId = opts.chainId;\n        this.hash = opts.hash;\n    }\n}\n"],"version":3}