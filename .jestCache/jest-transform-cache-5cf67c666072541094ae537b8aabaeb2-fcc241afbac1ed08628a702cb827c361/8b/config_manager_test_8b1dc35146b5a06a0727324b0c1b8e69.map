{"file":"/Users/davidwalsh/code-local/0x-rfq-api/test/utils/config_manager_test.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/test/utils/config_manager_test.ts"],"sourcesContent":["// tslint:disable:custom-no-magic-numbers\n// tslint:disable:no-empty\n// tslint:disable:max-file-line-count\n\nimport { expect } from 'chai';\n\nimport { DEFAULT_FEE_MODEL_CONFIGURATION } from '../../src/config';\nimport { ConfigManager } from '../../src/utils/config_manager';\n\ndescribe('ConfigManager', () => {\n    describe('getRfqMakerIdForApiKey', () => {\n        it('should return correct maker Ids', () => {\n            // Given\n            const configManager = new ConfigManager();\n            // Facts defined in test_env file\n            const apiKeyToMakerIds = [\n                {\n                    apiKey: 'd2ed029a-a8a6-48af-9934-bcf3ce07cddf',\n                    makerId: 'degen-trading',\n                },\n                {\n                    apiKey: '03da31bd-cbd9-4167-932d-11b054d02832',\n                    makerId: 'tradfi-finance',\n                },\n                {\n                    apiKey: '16a35054-d41f-46b0-83bb-166015aaf86e',\n                    makerId: 'i-love-rfqorder',\n                },\n            ];\n\n            apiKeyToMakerIds.forEach((apiKeyIdPair) => {\n                // When\n                const makerId = configManager.getRfqMakerIdForApiKey(apiKeyIdPair.apiKey);\n\n                // Then\n                expect(makerId).to.be.eq(apiKeyIdPair.makerId);\n            });\n        });\n\n        it('should ignore conflict api key', () => {\n            // Given\n            const configManager = new ConfigManager();\n            // Facts defined in test_env file\n            const conflictApiKey = 'bc5dfd4c-580f-475f-aa7e-611cbb6d70cd';\n\n            // When\n            const makerIdForConflictKey = configManager.getRfqMakerIdForApiKey(conflictApiKey);\n\n            // Then\n            expect(makerIdForConflictKey).to.be.eq(undefined);\n        });\n\n        it('should ignore unknown api key', () => {\n            // Given\n            const configManager = new ConfigManager();\n            const unknownApiKey = '7825fbc1-9b7d-4ba7-9237-2f1ec971cf20';\n\n            // When\n            const makerIdForUnknownKey = configManager.getRfqMakerIdForApiKey(unknownApiKey);\n\n            // Then\n            expect(makerIdForUnknownKey).to.be.eq(undefined);\n        });\n    });\n    describe('getFeeModelConfiguration', () => {\n        const chainId = 1;\n        const tokenA = '0x374a16f5e686c09b0cc9e8bc3466b3b645c74aa7';\n        const tokenB = '0xf84830b73b2ed3c7267e7638f500110ea47fdf30';\n        const unknownToken = '0xf84830b73b2ed3c7267e7638f500110ea47fdf31';\n        const marginRakeRatio = 0.4;\n        const tradeSizeBps = 5;\n\n        it('should find fee model config for given pairs', () => {\n            // Given\n            const configManager = new ConfigManager();\n\n            // When\n            const feeModelConfig = configManager.getFeeModelConfiguration(chainId, tokenA, tokenB);\n\n            // Then\n            expect(feeModelConfig.marginRakeRatio).to.be.eq(marginRakeRatio);\n            expect(feeModelConfig.tradeSizeBps).to.be.eq(tradeSizeBps);\n        });\n\n        it('should ignore tokens order when looking for fee model config', () => {\n            // Given\n            const configManager = new ConfigManager();\n\n            // When\n            const feeModelConfig = configManager.getFeeModelConfiguration(chainId, tokenB, tokenA);\n\n            // Then\n            expect(feeModelConfig.marginRakeRatio).to.be.eq(marginRakeRatio);\n            expect(feeModelConfig.tradeSizeBps).to.be.eq(tradeSizeBps);\n        });\n\n        it('should return default fee model config when chainId is not found', () => {\n            // Given\n            const configManager = new ConfigManager();\n\n            // When\n            const feeModelConfig = configManager.getFeeModelConfiguration(137, tokenA, tokenB);\n\n            // Then\n            expect(feeModelConfig.marginRakeRatio).to.be.eq(DEFAULT_FEE_MODEL_CONFIGURATION.marginRakeRatio);\n            expect(feeModelConfig.tradeSizeBps).to.be.eq(DEFAULT_FEE_MODEL_CONFIGURATION.tradeSizeBps);\n        });\n\n        it('should return default fee model config when chainId is not found', () => {\n            // Given\n            const configManager = new ConfigManager();\n\n            // When\n            const feeModelConfig = configManager.getFeeModelConfiguration(chainId, tokenA, unknownToken);\n\n            // Then\n            expect(feeModelConfig.marginRakeRatio).to.be.eq(DEFAULT_FEE_MODEL_CONFIGURATION.marginRakeRatio);\n            expect(feeModelConfig.tradeSizeBps).to.be.eq(DEFAULT_FEE_MODEL_CONFIGURATION.tradeSizeBps);\n        });\n    });\n});\n"],"version":3}