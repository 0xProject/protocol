{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqmJobEntity.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqmJobEntity.ts"],"sourcesContent":["import { RfqOrderFields } from '@0x/protocol-utils';\r\nimport { BigNumber } from '@0x/utils';\r\nimport { Column, Entity, Index, PrimaryColumn } from 'typeorm';\r\n\r\nimport { StoredFee } from '../core/types';\r\n\r\nimport { BigNumberTransformer } from './transformers';\r\nimport { RfqmJobStatus, RfqmOrderTypes } from './types';\r\n\r\nexport interface V4RfqStoredOrder {\r\n    type: RfqmOrderTypes.V4Rfq;\r\n    order: V4StringRfqOrderFields;\r\n}\r\n\r\nexport type StoredOrder = V4RfqStoredOrder;\r\n\r\nexport type V4StringRfqOrderFields = Record<keyof RfqOrderFields, string>;\r\n\r\nexport type RfqmJobConstructorOpts = Pick<RfqmJobEntity, 'calldata' | 'chainId' | 'expiry' | 'makerUri' | 'orderHash'> &\r\n    Partial<RfqmJobEntity>;\r\n\r\n@Entity({ name: 'rfqm_jobs' })\r\nexport class RfqmJobEntity {\r\n    // Differentiator for different flavors of RFQM jobs\r\n    public kind: 'rfqm_v1_job';\r\n\r\n    @PrimaryColumn({ name: 'order_hash', type: 'varchar' })\r\n    public orderHash: string;\r\n\r\n    @Column({ name: 'metatransaction_hash', type: 'varchar', nullable: true, unique: true })\r\n    public metaTransactionHash: string | null;\r\n\r\n    @Index()\r\n    @Column({ name: 'created_at', type: 'timestamptz', default: () => 'now()' })\r\n    public createdAt!: Date;\r\n\r\n    @Column({ name: 'updated_at', type: 'timestamptz', nullable: true })\r\n    public updatedAt: Date | null;\r\n\r\n    // The expiration time of the job, in unix seconds\r\n    @Column({ name: 'expiry', type: 'numeric', transformer: BigNumberTransformer })\r\n    public expiry: BigNumber;\r\n\r\n    @Column({ name: 'chain_id', type: 'integer' })\r\n    public chainId: number;\r\n\r\n    @Column({ name: 'integrator_id', type: 'varchar', nullable: true })\r\n    public integratorId: string | null;\r\n\r\n    @Column({ name: 'maker_uri', type: 'varchar' })\r\n    public makerUri: string;\r\n\r\n    @Index()\r\n    @Column({ name: 'status', type: 'varchar' })\r\n    public status: RfqmJobStatus;\r\n\r\n    @Column({ name: 'calldata', type: 'varchar' })\r\n    public calldata: string;\r\n\r\n    @Column({ name: 'fee', type: 'jsonb', nullable: true })\r\n    public fee: StoredFee | null;\r\n\r\n    @Column({ name: 'order', type: 'jsonb', nullable: true })\r\n    public order: StoredOrder | null;\r\n\r\n    @Column({ name: 'metadata', type: 'jsonb', nullable: true })\r\n    public metadata: object | null;\r\n\r\n    @Column({ name: 'is_completed', type: 'boolean', nullable: false, default: 'false' })\r\n    public isCompleted: boolean;\r\n\r\n    @Column({ name: 'worker_address', type: 'varchar', nullable: true })\r\n    public workerAddress: string | null;\r\n\r\n    @Column({ name: 'last_look_result', type: 'boolean', nullable: true })\r\n    public lastLookResult: boolean | null;\r\n\r\n    @Column({ name: 'affiliate_address', type: 'varchar', nullable: true })\r\n    public affiliateAddress: string | null;\r\n\r\n    // TypeORM runs a validation check where it calls this initializer with no argument.\r\n    // With no default `opts`, `opts` will be undefined and the validation will throw,\r\n    // therefore, add this hacky default.\r\n    // tslint:disable-next-line no-object-literal-type-assertion\r\n    constructor(opts: RfqmJobConstructorOpts = {} as RfqmJobConstructorOpts) {\r\n        this.kind = 'rfqm_v1_job';\r\n        // allow createdAt overrides for testing\r\n        if (opts.createdAt) {\r\n            this.createdAt = opts.createdAt;\r\n        }\r\n\r\n        this.affiliateAddress = opts.affiliateAddress || null;\r\n        this.calldata = opts.calldata;\r\n        this.chainId = opts.chainId;\r\n        this.expiry = opts.expiry;\r\n        this.fee = opts.fee || null;\r\n        this.integratorId = opts.integratorId || null;\r\n        this.isCompleted = opts.isCompleted || false;\r\n        this.lastLookResult = opts.lastLookResult || null;\r\n        this.makerUri = opts.makerUri;\r\n        this.metadata = opts.metadata || null;\r\n        this.metaTransactionHash = opts.metaTransactionHash || null;\r\n        this.order = opts.order || null;\r\n        this.orderHash = opts.orderHash;\r\n        this.status = opts.status || RfqmJobStatus.PendingEnqueued;\r\n        this.updatedAt = opts.updatedAt || null;\r\n        this.workerAddress = opts.workerAddress || null;\r\n    }\r\n}\r\n"],"version":3}