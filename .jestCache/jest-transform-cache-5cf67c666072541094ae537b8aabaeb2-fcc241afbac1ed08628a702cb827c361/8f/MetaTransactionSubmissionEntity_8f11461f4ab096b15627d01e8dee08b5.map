{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/MetaTransactionSubmissionEntity.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/MetaTransactionSubmissionEntity.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\nimport { Column, Entity, Index, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\n\nimport { BigIntTransformer, BigNumberTransformer } from './transformers';\nimport { RfqmTransactionSubmissionStatus, RfqmTransactionSubmissionType } from './types';\n\nexport type MetaTransactionSubmissionEntityConstructorOpts = Pick<\n    MetaTransactionSubmissionEntity,\n    'from' | 'metaTransactionJobId' | 'nonce' | 'to' | 'transactionHash' | 'type'\n> &\n    Partial<MetaTransactionSubmissionEntity>;\n\n@Entity({ name: 'meta_transaction_submissions' })\nexport class MetaTransactionSubmissionEntity {\n    public kind: 'meta_transaction_submission';\n\n    // UUID and would be generated automatically during insertion\n    @PrimaryGeneratedColumn('uuid')\n    public id!: string;\n\n    @Index()\n    @Column({ name: 'transaction_hash', type: 'varchar' })\n    public transactionHash: string;\n\n    // specified as a foreign key to metaTransaction jobs in migration, but not in the typeorm\n    // definition to preserve its being read as a string\n    @Index()\n    @Column({ name: 'meta_transaction_job_id', type: 'uuid' })\n    public metaTransactionJobId: string;\n\n    @Index()\n    @Column({ name: 'created_at', type: 'timestamptz', default: () => 'now()' })\n    public createdAt!: Date;\n\n    @UpdateDateColumn({ name: 'updated_at', type: 'timestamptz', nullable: true })\n    public updatedAt: Date | null;\n\n    @Column({ name: 'from', type: 'varchar' })\n    public from: string;\n\n    @Column({ name: 'to', type: 'varchar' })\n    public to: string;\n\n    @Column({ name: 'nonce', type: 'bigint', transformer: BigIntTransformer })\n    public nonce: number;\n\n    // The gas price in wei. Set at transaction submission time in non-EIP1559 transactions. In EIP1559 transactions, this is set once we have the transaction receipt.\n    @Column({ name: 'gas_price', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public gasPrice: BigNumber | null;\n\n    // Max fee per gas in wei. Present in type 2 \"EIP1559\" transactions.\n    @Column({ name: 'max_fee_per_gas', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public maxFeePerGas: BigNumber | null;\n\n    // Max priority fee per gas in wei. Present in type 2 \"EIP1559\" transactions.\n    @Column({ name: 'max_priority_fee_per_gas', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public maxPriorityFeePerGas: BigNumber | null;\n\n    @Column({ name: 'gas_used', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public gasUsed: BigNumber | null;\n\n    @Column({ name: 'block_mined', type: 'numeric', nullable: true, transformer: BigNumberTransformer })\n    public blockMined: BigNumber | null;\n\n    @Index()\n    @Column({ name: 'status', type: 'varchar' })\n    public status: RfqmTransactionSubmissionStatus;\n\n    @Column({ name: 'type', type: 'varchar' })\n    public type: RfqmTransactionSubmissionType;\n\n    // TypeORM runs a validation check where it calls this initializer with no argument.\n    // With no default `opts`, `opts` will be undefined and the validation will throw,\n    // therefore, add this hacky default.\n    constructor(\n        // tslint:disable-next-line no-object-literal-type-assertion\n        opts: MetaTransactionSubmissionEntityConstructorOpts = {} as MetaTransactionSubmissionEntityConstructorOpts,\n    ) {\n        this.kind = 'meta_transaction_submission';\n\n        // allow createdAt overrides for testing\n        if (opts.createdAt) {\n            this.createdAt = opts.createdAt;\n        }\n\n        this.blockMined = opts.blockMined ?? null;\n        this.from = opts.from;\n        this.gasPrice = opts.gasPrice ?? null;\n        this.gasUsed = opts.gasUsed ?? null;\n        this.maxFeePerGas = opts.maxFeePerGas ?? null;\n        this.maxPriorityFeePerGas = opts.maxPriorityFeePerGas ?? null;\n        this.metaTransactionJobId = opts.metaTransactionJobId;\n        this.nonce = opts.nonce;\n        this.status = opts.status ?? RfqmTransactionSubmissionStatus.Submitted;\n        this.to = opts.to;\n        this.transactionHash = opts.transactionHash;\n        this.type = opts.type;\n        this.updatedAt = opts.updatedAt ?? null;\n    }\n}\n"],"version":3}