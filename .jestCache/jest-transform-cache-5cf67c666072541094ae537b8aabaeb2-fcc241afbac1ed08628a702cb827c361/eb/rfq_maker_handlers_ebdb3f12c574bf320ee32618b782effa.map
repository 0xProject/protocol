{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/handlers/rfq_maker_handlers.ts","mappings":";;;AACA,gDAAgD;AAChD,6CAAsC;AAEtC,iDAA6D;AAE7D,sCAAmC;AACnC,qEAAgE;AAEhE,MAAM,qBAAqB,GAAG,IAAI,qBAAO,CAAC;IACtC,IAAI,EAAE,uBAAuB;IAC7B,IAAI,EAAE,iEAAiE;CAC1E,CAAC,CAAC;AACH,MAAM,6BAA6B,GAAG,IAAI,qBAAO,CAAC;IAC9C,IAAI,EAAE,+BAA+B;IACrC,IAAI,EAAE,wEAAwE;IAC9E,UAAU,EAAE,CAAC,SAAS,CAAC;CAC1B,CAAC,CAAC;AACH,MAAM,4BAA4B,GAAG,IAAI,qBAAO,CAAC;IAC7C,IAAI,EAAE,8BAA8B;IACpC,IAAI,EAAE,uEAAuE;IAC7E,UAAU,EAAE,CAAC,SAAS,CAAC;CAC1B,CAAC,CAAC;AACH,MAAM,wBAAwB,GAAG,IAAI,qBAAO,CAAC;IACzC,IAAI,EAAE,0BAA0B;IAChC,IAAI,EAAE,8CAA8C;IACpD,UAAU,EAAE,CAAC,SAAS,CAAC;CAC1B,CAAC,CAAC;AACH,MAAM,0BAA0B,GAAG,IAAI,qBAAO,CAAC;IAC3C,IAAI,EAAE,4BAA4B;IAClC,IAAI,EAAE,6DAA6D;IACnE,UAAU,EAAE,CAAC,SAAS,CAAC;CAC1B,CAAC,CAAC;AACH,MAAM,yBAAyB,GAAG,IAAI,qBAAO,CAAC;IAC1C,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,qEAAqE;IAC3E,UAAU,EAAE,CAAC,SAAS,CAAC;CAC1B,CAAC,CAAC;AACH,MAAM,qBAAqB,GAAG,IAAI,qBAAO,CAAC;IACtC,IAAI,EAAE,uBAAuB;IAC7B,IAAI,EAAE,mCAAmC;IACzC,UAAU,EAAE,CAAC,SAAS,CAAC;CAC1B,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,CAAC,KAAyB,EAAsB,EAAE;IACzE,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACtB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,yBAAyB,GAAG,CAAC,IAAqD,EAAE,EAAE;IACxF,mCAAe,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxD,mCAAe,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,mCAAe,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAChE,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,2BAA2B,GAAG,CAAC,IAAwD,EAAE,EAAE;IAC7F,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;QAC1B,mCAAe,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3D;IAED,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;QAC5B,mCAAe,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/D;IAED,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;QAC5B,mCAAe,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/D;IAED,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;QACtF,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;KACnD;AACL,CAAC,CAAC;AAEF,MAAa,gBAAgB;IACzB,YAA6B,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;IAAG,CAAC;IAElE;;OAEG;IACI,KAAK,CAAC,gBAAgB,CAAC,GAAoB,EAAE,GAAqB;QACrE,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC;QACzB,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,oCAAwB,CAAW,CAAC;QACpE,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAEtE,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,OAAO,GAAG,kBAAkB,CAAC;YACnC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,OAAO,CAAC,CAAC;YACzD,qBAAqB,CAAC,GAAG,EAAE,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC7D,OAAO;SACV;QAED,IAAI,CAAC,mCAAe,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACrD,MAAM,OAAO,GAAG,kBAAkB,CAAC;YACnC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1E,6BAA6B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACpD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5D,OAAO;SACV;QAED,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI;YACA,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACvC;QAAC,OAAO,EAAE,OAAO,EAAE,EAAE;YAClB,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YACtD,6BAA6B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACpD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5D,OAAO;SACV;QAED,IAAI;YACA,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YACjC,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YACjC,MAAM,QAAQ,GAAa,MAAM,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAC9E,OAAO,EACP,OAAO,EACP,kBAAkB,CAAC,KAAK,CAAC,EACzB,OAAO,EACP,OAAO,CACV,CAAC;YACF,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;YACtC,eAAM,CAAC,IAAI,CACP,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,EAC7C,kDAAkD,CACrD,CAAC;YACF,wBAAwB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;SAClD;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,OAAO,GAAG,6CAA6C,CAAC;YAC9D,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YACpF,4BAA4B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACnD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;SAClE;IACL,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,kBAAkB,CAAC,GAAoB,EAAE,GAAqB;QACvE,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC;QACzB,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,oCAAwB,CAAW,CAAC;QACpE,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAEtE,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,OAAO,GAAG,kBAAkB,CAAC;YACnC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,OAAO,CAAC,CAAC;YACzD,qBAAqB,CAAC,GAAG,EAAE,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC7D,OAAO;SACV;QAED,IAAI,CAAC,mCAAe,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACrD,MAAM,OAAO,GAAG,kBAAkB,CAAC;YACnC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1E,6BAA6B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACpD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5D,OAAO;SACV;QAED,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI;YACA,2BAA2B,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzC;QAAC,OAAO,EAAE,OAAO,EAAE,EAAE;YAClB,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YACtD,6BAA6B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACpD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5D,OAAO;SACV;QAED,IAAI;YACA,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YACjC,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YACjC,MAAM,QAAQ,GAAa,MAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CACrE,OAAO,EACP,OAAO,EACP,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAC3D,OAAO,EACP,OAAO,CACV,CAAC;YACF,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;YACtC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE,uCAAuC,CAAC,CAAC;YACpG,wBAAwB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;SAClD;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,OAAO,GAAG,kCAAkC,CAAC;YACnD,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YACpF,4BAA4B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACnD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;SAClE;IACL,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,gBAAgB,CAAC,GAAoB,EAAE,GAAqB;QACrE,MAAM,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC;QACzB,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,oCAAwB,CAAW,CAAC;QACpE,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAEtE,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,OAAO,GAAG,kBAAkB,CAAC;YACnC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,OAAO,CAAC,CAAC;YACzD,qBAAqB,CAAC,GAAG,EAAE,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC7D,OAAO;SACV;QAED,IAAI,CAAC,mCAAe,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACrD,MAAM,OAAO,GAAG,kBAAkB,CAAC;YACnC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1E,0BAA0B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YACjD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5D,OAAO;SACV;QAED,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE3C,IAAI;YACA,MAAM,QAAQ,GAAa,MAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC1F,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,mCAAmC,CAAC,CAAC;YAClF,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;SAC/C;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,OAAO,GAAG,gCAAgC,CAAC;YACjD,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;YACpF,yBAAyB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YAChD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;SAClE;IACL,CAAC;CACJ;AA9JD,4CA8JC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/handlers/rfq_maker_handlers.ts"],"sourcesContent":["import * as express from 'express';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { Counter } from 'prom-client';\r\n\r\nimport { RFQ_MAKER_API_KEY_HEADER } from '../core/constants';\r\nimport { RfqMaker } from '../entities';\r\nimport { logger } from '../logger';\r\nimport { RfqMakerService } from '../services/rfq_maker_service';\r\n\r\nconst RFQ_MAKER_INVALID_KEY = new Counter({\r\n    name: 'rfq_maker_invalid_key',\r\n    help: 'A request to maker endpoints failed because of invalid api key.',\r\n});\r\nconst RFQ_MAKER_UPDATE_CLIENT_ERROR = new Counter({\r\n    name: 'rfq_maker_update_client_error',\r\n    help: 'A request to update maker configs failed because of client side error.',\r\n    labelNames: ['makerId'],\r\n});\r\nconst RFQ_MAKER_UPDATE_SEVER_ERROR = new Counter({\r\n    name: 'rfq_maker_update_sever_error',\r\n    help: 'A request to update maker configs failed because of sever side error.',\r\n    labelNames: ['makerId'],\r\n});\r\nconst RFQ_MAKER_UPDATE_SUCCEED = new Counter({\r\n    name: 'rfq_maker_update_succeed',\r\n    help: 'A request to update maker configs succeeded.',\r\n    labelNames: ['makerId'],\r\n});\r\nconst RFQ_MAKER_GET_CLIENT_ERROR = new Counter({\r\n    name: 'rfq_maker_get_client_error',\r\n    help: 'A request to GET maker failed because of client side error.',\r\n    labelNames: ['makerId'],\r\n});\r\nconst RFQ_MAKER_GET_SEVER_ERROR = new Counter({\r\n    name: 'rfq_maker_get_sever_error',\r\n    help: 'A request to GET maker endpoint failed because of sever side error.',\r\n    labelNames: ['makerId'],\r\n});\r\nconst RFQ_MAKER_GET_SUCCEED = new Counter({\r\n    name: 'rfq_maker_get_succeed',\r\n    help: 'A request to GET maker succeeded.',\r\n    labelNames: ['makerId'],\r\n});\r\n\r\nconst convertToLowerCase = (pairs: [string, string][]): [string, string][] => {\r\n    return pairs.map((pair) => {\r\n        return [pair[0].toLowerCase(), pair[1].toLowerCase()];\r\n    });\r\n};\r\n\r\n/**\r\n * Validates the request body of a PUT request.\r\n */\r\nconst validatePutPayloadOrThrow = (body: { pairs: []; rfqtUri: string; rfqmUri: string }) => {\r\n    RfqMakerService.validatePairsPayloadOrThrow(body.pairs);\r\n    RfqMakerService.validateUriOrThrow('rfqtUri', body.rfqtUri);\r\n    RfqMakerService.validateUriOrThrow('rfqmUri', body.rfqmUri);\r\n};\r\n\r\n/**\r\n * Validates the request body of a PATCH request.\r\n */\r\nconst validatePatchPayloadOrThrow = (body: { pairs?: []; rfqtUri?: string; rfqmUri?: string }) => {\r\n    if (body.pairs !== undefined) {\r\n        RfqMakerService.validatePairsPayloadOrThrow(body.pairs);\r\n    }\r\n\r\n    if (body.rfqtUri !== undefined) {\r\n        RfqMakerService.validateUriOrThrow('rfqtUri', body.rfqtUri);\r\n    }\r\n\r\n    if (body.rfqmUri !== undefined) {\r\n        RfqMakerService.validateUriOrThrow('rfqmUri', body.rfqmUri);\r\n    }\r\n\r\n    if (body.pairs === undefined && body.rfqtUri === undefined && body.rfqmUri === undefined) {\r\n        throw new Error('No valid field is specified.');\r\n    }\r\n};\r\n\r\nexport class RfqMakerHandlers {\r\n    constructor(private readonly _rfqMakerService: RfqMakerService) {}\r\n\r\n    /**\r\n     * Handler for PUT operation of the `/maker/v1/chain-id/:chainId` endpoint.\r\n     */\r\n    public async putRfqMakerAsync(req: express.Request, res: express.Response): Promise<void> {\r\n        const requestId = req.id;\r\n        const makerApiKey = req.headers[RFQ_MAKER_API_KEY_HEADER] as string;\r\n        const makerId = this._rfqMakerService.mapMakerApiKeyToId(makerApiKey);\r\n\r\n        if (makerId === null) {\r\n            const message = `Invalid api key.`;\r\n            logger.info({ requestId, apiKey: makerApiKey }, message);\r\n            RFQ_MAKER_INVALID_KEY.inc();\r\n            res.status(HttpStatus.UNAUTHORIZED).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        if (!RfqMakerService.isValidChainId(req.params.chainId)) {\r\n            const message = `Invalid chainId.`;\r\n            logger.info({ requestId, makerId, chainId: req.params.chainId }, message);\r\n            RFQ_MAKER_UPDATE_CLIENT_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.BAD_REQUEST).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        const chainId = Number(req.params.chainId);\r\n        try {\r\n            validatePutPayloadOrThrow(req.body);\r\n        } catch ({ message }) {\r\n            logger.info({ requestId, makerId, chainId }, message);\r\n            RFQ_MAKER_UPDATE_CLIENT_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.BAD_REQUEST).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pairs = req.body.pairs;\r\n            const rfqtUri = req.body.rfqtUri;\r\n            const rfqmUri = req.body.rfqmUri;\r\n            const rfqMaker: RfqMaker = await this._rfqMakerService.createOrUpdateRfqMakerAsync(\r\n                makerId,\r\n                chainId,\r\n                convertToLowerCase(pairs),\r\n                rfqtUri,\r\n                rfqmUri,\r\n            );\r\n            res.status(HttpStatus.CREATED).send(rfqMaker);\r\n            const rfqmMakerUri = rfqMaker.rfqmUri;\r\n            logger.info(\r\n                { requestId, makerId, chainId, rfqmMakerUri },\r\n                'Successfully created or updated RfqMaker entity.',\r\n            );\r\n            RFQ_MAKER_UPDATE_SUCCEED.labels(makerId).inc();\r\n        } catch (error) {\r\n            const message = `Failed to create or update RfqMaker entity.`;\r\n            logger.error({ requestId, makerId, chainId, errorMessage: error.message }, message);\r\n            RFQ_MAKER_UPDATE_SEVER_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.INTERNAL_SERVER_ERROR).send({ message });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler for PATCH operation of the `/maker/v1/chain-id/:chainId` endpoint.\r\n     */\r\n    public async patchRfqMakerAsync(req: express.Request, res: express.Response): Promise<void> {\r\n        const requestId = req.id;\r\n        const makerApiKey = req.headers[RFQ_MAKER_API_KEY_HEADER] as string;\r\n        const makerId = this._rfqMakerService.mapMakerApiKeyToId(makerApiKey);\r\n\r\n        if (makerId === null) {\r\n            const message = `Invalid api key.`;\r\n            logger.info({ requestId, apiKey: makerApiKey }, message);\r\n            RFQ_MAKER_INVALID_KEY.inc();\r\n            res.status(HttpStatus.UNAUTHORIZED).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        if (!RfqMakerService.isValidChainId(req.params.chainId)) {\r\n            const message = `Invalid chainId.`;\r\n            logger.info({ requestId, makerId, chainId: req.params.chainId }, message);\r\n            RFQ_MAKER_UPDATE_CLIENT_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.BAD_REQUEST).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        const chainId = Number(req.params.chainId);\r\n        try {\r\n            validatePatchPayloadOrThrow(req.body);\r\n        } catch ({ message }) {\r\n            logger.info({ requestId, makerId, chainId }, message);\r\n            RFQ_MAKER_UPDATE_CLIENT_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.BAD_REQUEST).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pairs = req.body.pairs;\r\n            const rfqtUri = req.body.rfqtUri;\r\n            const rfqmUri = req.body.rfqmUri;\r\n            const rfqMaker: RfqMaker = await this._rfqMakerService.patchRfqMakerAsync(\r\n                makerId,\r\n                chainId,\r\n                pairs !== undefined ? convertToLowerCase(pairs) : undefined,\r\n                rfqtUri,\r\n                rfqmUri,\r\n            );\r\n            res.status(HttpStatus.OK).send(rfqMaker);\r\n            const rfqmMakerUri = rfqMaker.rfqmUri;\r\n            logger.info({ requestId, makerId, chainId, rfqmMakerUri }, 'Successfully patched RfqMaker entity.');\r\n            RFQ_MAKER_UPDATE_SUCCEED.labels(makerId).inc();\r\n        } catch (error) {\r\n            const message = `Failed to patch RfqMaker entity.`;\r\n            logger.error({ requestId, makerId, chainId, errorMessage: error.message }, message);\r\n            RFQ_MAKER_UPDATE_SEVER_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.INTERNAL_SERVER_ERROR).send({ message });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler for GET operation of the `/maker/v1/chain-id/:chainId` endpoint.\r\n     */\r\n    public async getRfqMakerAsync(req: express.Request, res: express.Response): Promise<void> {\r\n        const requestId = req.id;\r\n        const makerApiKey = req.headers[RFQ_MAKER_API_KEY_HEADER] as string;\r\n        const makerId = this._rfqMakerService.mapMakerApiKeyToId(makerApiKey);\r\n\r\n        if (makerId === null) {\r\n            const message = `Invalid api key.`;\r\n            logger.info({ requestId, apiKey: makerApiKey }, message);\r\n            RFQ_MAKER_INVALID_KEY.inc();\r\n            res.status(HttpStatus.UNAUTHORIZED).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        if (!RfqMakerService.isValidChainId(req.params.chainId)) {\r\n            const message = `Invalid chainId.`;\r\n            logger.info({ requestId, makerId, chainId: req.params.chainId }, message);\r\n            RFQ_MAKER_GET_CLIENT_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.BAD_REQUEST).send({ error: message });\r\n            return;\r\n        }\r\n\r\n        const chainId = Number(req.params.chainId);\r\n\r\n        try {\r\n            const rfqMaker: RfqMaker = await this._rfqMakerService.getRfqMakerAsync(makerId, chainId);\r\n            res.status(HttpStatus.OK).send(rfqMaker);\r\n            logger.info({ requestId, makerId, chainId }, 'Successfully got RfqMaker entity.');\r\n            RFQ_MAKER_GET_SUCCEED.labels(makerId).inc();\r\n        } catch (error) {\r\n            const message = `Failed to get RfqMaker entity.`;\r\n            logger.error({ requestId, makerId, chainId, errorMessage: error.message }, message);\r\n            RFQ_MAKER_GET_SEVER_ERROR.labels(makerId).inc();\r\n            res.status(HttpStatus.INTERNAL_SERVER_ERROR).send({ message });\r\n        }\r\n    }\r\n}\r\n"],"version":3}