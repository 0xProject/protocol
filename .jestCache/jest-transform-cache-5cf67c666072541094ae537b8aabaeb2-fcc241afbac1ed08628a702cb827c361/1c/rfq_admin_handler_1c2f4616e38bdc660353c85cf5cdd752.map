{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/handlers/rfq_admin_handler.ts","mappings":";;;AACA,gDAAgD;AAKhD,MAAa,eAAe;IACxB,YAA6B,gBAAiC,EAAmB,cAA6B;QAAjF,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAmB,mBAAc,GAAd,cAAc,CAAe;IAAG,CAAC;IAElH;;;OAGG;IACI,KAAK,CAAC,gBAAgB,CAAC,GAAoB,EAAE,GAAqB;QACrE,yBAAyB;QACzB,IAAI;YACA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC7D;QAAC,OAAO,GAAG,EAAE;YACV,MAAM,OAAO,GAAG,gCAAgC,CAAC;YACjD,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;SAChE;QAED,IAAI;YACA,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,CAAC,CAAC;aAC3F;YAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpF,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtD;iBAAM,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7C,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrD;iBAAM;gBACH,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5C;SACJ;QAAC,OAAO,GAAG,EAAE;YACV,MAAM,OAAO,GAAG,iEAAiE,CAAC;YAClF,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;SACzE;IACL,CAAC;IAEO,oBAAoB,CAAC,MAA0B;QACnD,IAAI,MAAM,KAAK,SAAS,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAClD;QACD,IAAI,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAAE;YACjD,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;SACnE;IACL,CAAC;CACJ;AA7CD,0CA6CC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/handlers/rfq_admin_handler.ts"],"sourcesContent":["import * as express from 'express';\nimport * as HttpStatus from 'http-status-codes';\n\nimport { RfqAdminService } from '../services/rfq_admin_service';\nimport { ConfigManager } from '../utils/config_manager';\n\nexport class RfqAdminHandler {\n    constructor(private readonly _rfqAdminService: RfqAdminService, private readonly _configManager: ConfigManager) {}\n\n    /**\n     * Handler for the `/cleanup` endpoint. Fetches jobs from their order hashes and puts them to\n     * `failed_expired` state. Requires an admin API key.\n     */\n    public async cleanupJobsAsync(req: express.Request, res: express.Response): Promise<void> {\n        // validate admin api key\n        try {\n            this._validateAdminApiKey(req.header('0x-admin-api-key'));\n        } catch (err) {\n            const message = 'Invalid admin API key provided';\n            req.log.error(err, message);\n            res.status(HttpStatus.UNAUTHORIZED).send({ error: message });\n        }\n\n        try {\n            if (req.body.orderHashes.length === 0) {\n                res.status(HttpStatus.BAD_REQUEST).send({ error: 'Must send at least one order hash' });\n            }\n\n            const response = await this._rfqAdminService.cleanupJobsAsync(req.body.orderHashes);\n            if (response.unmodifiedJobs.length > 0 && response.modifiedJobs.length > 0) {\n                res.status(HttpStatus.MULTI_STATUS).send(response);\n            } else if (response.unmodifiedJobs.length !== 0) {\n                res.status(HttpStatus.BAD_REQUEST).send(response);\n            } else {\n                res.status(HttpStatus.OK).send(response);\n            }\n        } catch (err) {\n            const message = 'Encountered an unexpected error while manually cleaning up jobs';\n            req.log.error(err, message);\n            res.status(HttpStatus.INTERNAL_SERVER_ERROR).send({ error: message });\n        }\n    }\n\n    private _validateAdminApiKey(apiKey: string | undefined): void {\n        if (apiKey === undefined) {\n            throw new Error('Must access with an API key');\n        }\n        if (apiKey !== this._configManager.getAdminApiKey()) {\n            throw new Error('API key not authorized for RFQM admin access');\n        }\n    }\n}\n"],"version":3}