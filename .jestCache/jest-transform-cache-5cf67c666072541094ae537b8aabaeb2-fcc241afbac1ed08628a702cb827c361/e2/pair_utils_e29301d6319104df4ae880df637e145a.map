{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/core/pair_utils.ts","mappings":";;;AAAA;;;;GAIG;AACH,SAAS,cAAc,CAAC,CAAS;IAC7B,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QAChB,MAAM,IAAI,KAAK,EAAE,CAAC;KACrB;IACD,mDAAmD;IACnD,uCAAuC;IACvC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,EAAsB,CAAC;AAC/E,CAAC;AAED;;;GAGG;AACH,SAAgB,YAAY,CAAC,MAAc,EAAE,MAAc;IACvD,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;SAClB,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SAC/B,IAAI,EAAE;SACN,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC;AALD,oCAKC;AAED;;;;;;;;;;;GAWG;AACH,SAAgB,aAAa,CAAC,KAAe;IACzC,OAAO,KAAK,CAAC,IAAI,CACb,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QAC1B,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACxC,OAAO,MAAM,CAAC;IAClB,CAAC,EAAE,IAAI,GAAG,EAAoB,CAAC,CAClC,CAAC;AACN,CAAC;AAPD,sCAOC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/core/pair_utils.ts"],"sourcesContent":["/**\r\n * Transforms a \"pair string\" of format \"0x1-0x2\" into\r\n * a two-element array [\"0x1\", \"0x2\"]. Ensures the result\r\n * array is sorted and converted to lower case.\r\n */\r\nfunction fromPairString(k: string): [string, string] {\r\n    const a = k.split('-');\r\n    if (a.length !== 2) {\r\n        throw new Error();\r\n    }\r\n    // type coercion is there because TypeScript thinks\r\n    // `sort` might change the array length\r\n    return [a[0].toLowerCase(), a[1].toLowerCase()].sort() as [string, string];\r\n}\r\n\r\n/**\r\n * Transforms two token addresses into a \"pair string\" of the format\r\n * \"0x1-0x2\".\r\n */\r\nexport function toPairString(tokenA: string, tokenB: string): string {\r\n    return [tokenA, tokenB]\r\n        .map((str) => str.toLowerCase())\r\n        .sort()\r\n        .join('-');\r\n}\r\n\r\n/**\r\n * Transforms an array of \"0x1-0x2\" pair strings into an array\r\n * of two-element arrays. Removes duplicate pairs.\r\n *\r\n * Example:\r\n * const pairs = [\r\n *  \"0x1-0x2\",\r\n *  \"0x2-0x1\",\r\n *  \"0x3-0x4\",\r\n * ];\r\n * toUniqueArray(pairs); // [[\"0x1\", \"0x2\"], [\"0x3\", \"0x4\"]]\r\n */\r\nexport function toUniqueArray(pairs: string[]): [string, string][] {\r\n    return Array.from(\r\n        pairs.reduce((result, pair) => {\r\n            result.add(fromPairString(pair).sort());\r\n            return result;\r\n        }, new Set<[string, string]>()),\r\n    );\r\n}\r\n"],"version":3}