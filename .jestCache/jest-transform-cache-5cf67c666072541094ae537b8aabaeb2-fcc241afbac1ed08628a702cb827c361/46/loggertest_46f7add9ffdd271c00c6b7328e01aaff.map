{"file":"/Users/davidwalsh/code-local/0x-rfq-api/test/logger.test.ts","mappings":";;AAAA,qCAAsC;AAEtC,0CAA6C;AAE7C,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACpB,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;YACzB,MAAM,SAAS,GAAG;gBACd,SAAS,EAAE,IAAI,iBAAS,CAAC,KAAK,CAAC;gBAC/B,QAAQ,EAAE,4CAA4C;gBACtD,SAAS,EAAE,4CAA4C;gBACvD,YAAY,EAAE,4CAA4C;aAC7D,CAAC;YAEF,MAAM,MAAM,GAAG,IAAA,qBAAY,EAAC,SAAS,CAAC,CAAC;YAEvC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,MAAM,EAAE;gBACT,MAAM,IAAI,KAAK,EAAE,CAAC;aACrB;YACD,oDAAoD;YACpD,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAChC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACnD,MAAM,SAAS,GAAG;gBACd,SAAS,EAAE,IAAI,iBAAS,CAAC,KAAK,CAAC;gBAC/B,QAAQ,EAAE,4CAA4C;gBACtD,SAAS,EAAE,4CAA4C;aAC1D,CAAC;YAEF,MAAM,MAAM,GAAG,IAAA,qBAAY,EAAC,SAAS,CAAC,CAAC;YAEvC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/test/logger.test.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\n\nimport { createSwapId } from '../src/logger';\n\ndescribe('logger', () => {\n    describe('createSwapId', () => {\n        it('creates a swap id', () => {\n            const swapParms = {\n                buyAmount: new BigNumber(10000),\n                buyToken: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n                sellToken: '0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3',\n                takerAddress: '0x4Ea754349AcE5303c82f0d1D491041e042f2ad22',\n            };\n\n            const swapId = createSwapId(swapParms);\n\n            expect(swapId).not.toBeNull();\n            if (!swapId) {\n                throw new Error();\n            }\n            // tslint:disable-next-line: custom-no-magic-numbers\n            expect(swapId).toHaveLength(16);\n            expect(/[0-9A-Fa-f]{16}/.test(swapId)).toBeTruthy();\n        });\n\n        it('returns null if no taker address is present', () => {\n            const swapParms = {\n                buyAmount: new BigNumber(10000),\n                buyToken: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n                sellToken: '0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3',\n            };\n\n            const swapId = createSwapId(swapParms);\n\n            expect(swapId).toBeNull();\n        });\n    });\n});\n"],"version":3}