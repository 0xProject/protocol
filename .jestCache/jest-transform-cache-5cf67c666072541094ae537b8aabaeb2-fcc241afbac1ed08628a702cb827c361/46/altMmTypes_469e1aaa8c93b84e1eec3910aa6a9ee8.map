{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/quoteRequestor/altMmTypes.ts","mappings":";;;AAkBA,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,8BAAa,CAAA;IACb,0CAAyB,CAAA;AAC7B,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;AAED,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,2BAAW,CAAA;IACX,6BAAa,CAAA;AACjB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AA2CD,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,wCAAoB,CAAA;IACpB,kCAAc,CAAA;AAClB,CAAC,EAHW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAG3B","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/quoteRequestor/altMmTypes.ts"],"sourcesContent":["/**\n * Alternate Market Maker types.\n * See: https://github.com/0xProject/protocol/blob/2fdca24d4e09bcf6a2aefb027099e9c0703a8052/packages/asset-swapper/src/types.ts\n */\n\nimport { TakerRequestQueryParamsUnnested, V4SignedRfqOrder } from '../quote-server/types';\n\n/**\n * Represents a mocked RFQ-T/M alternative maker responses.\n */\nexport interface AltMockedRfqQuoteResponse {\n    endpoint: string;\n    mmApiKey: string;\n    requestData: AltQuoteRequestData;\n    responseData: unknown;\n    responseCode: number;\n}\n\nexport enum AltQuoteModel {\n    Firm = 'firm',\n    Indicative = 'indicative',\n}\n\nexport enum AltQuoteSide {\n    Buy = 'buy',\n    Sell = 'sell',\n}\nexport interface AltQuoteRequestData {\n    market: string;\n    model: AltQuoteModel;\n    profile: string;\n    side: AltQuoteSide;\n    value?: string;\n    amount?: string;\n    meta: {\n        txOrigin: string;\n        taker: string;\n        client: string;\n        existingOrder?: {\n            price: string;\n            value?: string;\n            amount?: string;\n        };\n    };\n}\n\nexport interface AltOffering {\n    id: string;\n    baseAsset: string;\n    quoteAsset: string;\n    baseAssetDecimals: number;\n    quoteAssetDecimals: number;\n}\nexport interface AltRfqMakerAssetOfferings {\n    [endpoint: string]: AltOffering[];\n}\n\n/**\n * Represents a mocked RFQ-T/M maker responses.\n */\nexport interface MockedRfqQuoteResponse {\n    endpoint: string;\n    requestApiKey: string;\n    requestParams: TakerRequestQueryParamsUnnested;\n    responseData: unknown;\n    responseCode: number;\n    callback?: (config: unknown) => Promise<unknown>;\n}\n\nexport enum RfqQuoteEndpoint {\n    Indicative = 'price',\n    Firm = 'quote',\n}\n\nexport interface AltQuoteRequestData {\n    market: string;\n    model: AltQuoteModel;\n    profile: string;\n    side: AltQuoteSide;\n    value?: string;\n    amount?: string;\n    meta: {\n        txOrigin: string;\n        taker: string;\n        client: string;\n        existingOrder?: {\n            price: string;\n            value?: string;\n            amount?: string;\n        };\n    };\n}\nexport interface AltBaseRfqResponse extends AltQuoteRequestData {\n    id: string;\n    price?: string;\n}\nexport interface AltIndicativeQuoteResponse extends AltBaseRfqResponse {\n    model: AltQuoteModel.Indicative;\n    status: 'live' | 'rejected';\n}\nexport interface AltFirmQuoteResponse extends AltBaseRfqResponse {\n    model: AltQuoteModel.Firm;\n    data: {\n        '0xv4order': V4SignedRfqOrder;\n    };\n    status: 'active' | 'rejected';\n}\n"],"version":3}