{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/proto-ts/meta_transaction.pb.ts","mappings":"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","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/proto-ts/meta_transaction.pb.ts"],"sourcesContent":["// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\n// Source: meta_transaction.proto\r\n/* eslint-disable */\r\n\r\nimport type { ByteSource } from \"protoscript\";\r\nimport { BinaryReader, BinaryWriter } from \"protoscript\";\r\nimport { JSONrequest, PBrequest } from \"twirpscript\";\r\n// This is the minimum version supported by the current runtime.\r\n// If this line fails typechecking, breaking changes have been introduced and this\r\n// file needs to be regenerated by running `npx twirpscript`.\r\nexport { MIN_SUPPORTED_VERSION_0_0_56 } from \"twirpscript\";\r\nimport type { ClientConfiguration } from \"twirpscript\";\r\nimport { BigNumberJs, BigNumberJsJSON } from \"./big_number_js.pb\";\r\n\r\n//========================================//\r\n//                 Types                  //\r\n//========================================//\r\n\r\nexport interface LiquiditySource {\r\n  name: string;\r\n  proportion: BigNumberJs;\r\n  intermediateToken?: string | null | undefined;\r\n  hops: string[];\r\n}\r\n\r\nexport interface Quote {\r\n  sellTokenAddress: string;\r\n  sellAmount: BigNumberJs;\r\n  buyTokenAddress: string;\r\n  buyAmount: BigNumberJs;\r\n  price: BigNumberJs;\r\n  estimatedPriceImpact?: BigNumberJs | null | undefined;\r\n  sellTokenToNativeTokenRate: BigNumberJs;\r\n  buyTokenToNativeTokenRate: BigNumberJs;\r\n  chainId: number;\r\n  gas: BigNumberJs;\r\n  estimatedGas: BigNumberJs;\r\n  gasPrice: BigNumberJs;\r\n  value: BigNumberJs;\r\n  protocolFee: BigNumberJs;\r\n  minimumProtocolFee: BigNumberJs;\r\n  allowanceTarget: string;\r\n  liquiditySources: LiquiditySource[];\r\n}\r\n\r\n/**\r\n **\r\n * MetaTransaction\r\n * https://github.com/0xProject/protocol/blob/development/packages/protocol-utils/src/meta_transactions.ts#L39\r\n */\r\nexport interface MetaTransaction {\r\n  signerAddress: string;\r\n  senderAddress: string;\r\n  minGasPrice: BigNumberJs;\r\n  maxGasPrice: BigNumberJs;\r\n  expirationTimeSeconds: BigNumberJs;\r\n  salt: BigNumberJs;\r\n  callData: string;\r\n  value: BigNumberJs;\r\n  feeTokenAddress: string;\r\n  feeAmount: BigNumberJs;\r\n  chainId: number;\r\n  verifyingContract: string;\r\n}\r\n\r\nexport interface GetQuoteRequest {\r\n  sellTokenAddress: string;\r\n  buyTokenAddress: string;\r\n  sellAmount?: BigNumberJs | null | undefined;\r\n  buyAmount?: BigNumberJs | null | undefined;\r\n  chainId: number;\r\n  takerAddress: string;\r\n  integratorId: string;\r\n  affiliateAddress?: string | null | undefined;\r\n  slippagePercentage?: BigNumberJs | null | undefined;\r\n  /**\r\n   * ID to use for the quote report `decodedUniqueId`\r\n   */\r\n  quoteUniqueId?: string | null | undefined;\r\n}\r\n\r\nexport interface GetQuoteResponse {\r\n  quote: Quote;\r\n  metaTransaction: MetaTransaction;\r\n}\r\n\r\n//========================================//\r\n// MetaTransactionService Protobuf Client //\r\n//========================================//\r\n\r\nexport async function GetQuote(\r\n  getQuoteRequest: GetQuoteRequest,\r\n  config?: ClientConfiguration\r\n): Promise<GetQuoteResponse> {\r\n  const response = await PBrequest(\r\n    \"/MetaTransactionService/GetQuote\",\r\n    GetQuoteRequest.encode(getQuoteRequest),\r\n    config\r\n  );\r\n  return GetQuoteResponse.decode(response);\r\n}\r\n\r\n//========================================//\r\n//   MetaTransactionService JSON Client   //\r\n//========================================//\r\n\r\nexport async function GetQuoteJSON(\r\n  getQuoteRequest: GetQuoteRequest,\r\n  config?: ClientConfiguration\r\n): Promise<GetQuoteResponse> {\r\n  const response = await JSONrequest(\r\n    \"/MetaTransactionService/GetQuote\",\r\n    GetQuoteRequestJSON.encode(getQuoteRequest),\r\n    config\r\n  );\r\n  return GetQuoteResponseJSON.decode(response);\r\n}\r\n\r\n//========================================//\r\n//         MetaTransactionService         //\r\n//========================================//\r\n\r\nexport interface MetaTransactionService<Context = unknown> {\r\n  GetQuote: (\r\n    getQuoteRequest: GetQuoteRequest,\r\n    context: Context\r\n  ) => Promise<GetQuoteResponse> | GetQuoteResponse;\r\n}\r\n\r\nexport function createMetaTransactionService<Context>(\r\n  service: MetaTransactionService<Context>\r\n) {\r\n  return {\r\n    name: \"MetaTransactionService\",\r\n    methods: {\r\n      GetQuote: {\r\n        name: \"GetQuote\",\r\n        handler: service.GetQuote,\r\n        input: { protobuf: GetQuoteRequest, json: GetQuoteRequestJSON },\r\n        output: { protobuf: GetQuoteResponse, json: GetQuoteResponseJSON },\r\n      },\r\n    },\r\n  } as const;\r\n}\r\n\r\n//========================================//\r\n//        Protobuf Encode / Decode        //\r\n//========================================//\r\n\r\nexport const LiquiditySource = {\r\n  /**\r\n   * Serializes LiquiditySource to protobuf.\r\n   */\r\n  encode: function (msg: Partial<LiquiditySource>): Uint8Array {\r\n    return LiquiditySource._writeMessage(\r\n      msg,\r\n      new BinaryWriter()\r\n    ).getResultBuffer();\r\n  },\r\n\r\n  /**\r\n   * Deserializes LiquiditySource from protobuf.\r\n   */\r\n  decode: function (bytes: ByteSource): LiquiditySource {\r\n    return LiquiditySource._readMessage(\r\n      LiquiditySource.initialize(),\r\n      new BinaryReader(bytes)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes LiquiditySource with all fields set to their default value.\r\n   */\r\n  initialize: function (): LiquiditySource {\r\n    return {\r\n      name: \"\",\r\n      proportion: BigNumberJs.initialize(),\r\n      intermediateToken: undefined,\r\n      hops: [],\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<LiquiditySource>,\r\n    writer: BinaryWriter\r\n  ): BinaryWriter {\r\n    if (msg.name) {\r\n      writer.writeString(1, msg.name);\r\n    }\r\n    if (msg.proportion) {\r\n      writer.writeMessage(2, msg.proportion, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.intermediateToken != undefined) {\r\n      writer.writeString(3, msg.intermediateToken);\r\n    }\r\n    if (msg.hops?.length) {\r\n      writer.writeRepeatedString(4, msg.hops);\r\n    }\r\n    return writer;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (\r\n    msg: LiquiditySource,\r\n    reader: BinaryReader\r\n  ): LiquiditySource {\r\n    while (reader.nextField()) {\r\n      const field = reader.getFieldNumber();\r\n      switch (field) {\r\n        case 1: {\r\n          msg.name = reader.readString();\r\n          break;\r\n        }\r\n        case 2: {\r\n          reader.readMessage(msg.proportion, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 3: {\r\n          msg.intermediateToken = reader.readString();\r\n          break;\r\n        }\r\n        case 4: {\r\n          msg.hops.push(reader.readString());\r\n          break;\r\n        }\r\n        default: {\r\n          reader.skipField();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const Quote = {\r\n  /**\r\n   * Serializes Quote to protobuf.\r\n   */\r\n  encode: function (msg: Partial<Quote>): Uint8Array {\r\n    return Quote._writeMessage(msg, new BinaryWriter()).getResultBuffer();\r\n  },\r\n\r\n  /**\r\n   * Deserializes Quote from protobuf.\r\n   */\r\n  decode: function (bytes: ByteSource): Quote {\r\n    return Quote._readMessage(Quote.initialize(), new BinaryReader(bytes));\r\n  },\r\n\r\n  /**\r\n   * Initializes Quote with all fields set to their default value.\r\n   */\r\n  initialize: function (): Quote {\r\n    return {\r\n      sellTokenAddress: \"\",\r\n      sellAmount: BigNumberJs.initialize(),\r\n      buyTokenAddress: \"\",\r\n      buyAmount: BigNumberJs.initialize(),\r\n      price: BigNumberJs.initialize(),\r\n      estimatedPriceImpact: undefined,\r\n      sellTokenToNativeTokenRate: BigNumberJs.initialize(),\r\n      buyTokenToNativeTokenRate: BigNumberJs.initialize(),\r\n      chainId: 0,\r\n      gas: BigNumberJs.initialize(),\r\n      estimatedGas: BigNumberJs.initialize(),\r\n      gasPrice: BigNumberJs.initialize(),\r\n      value: BigNumberJs.initialize(),\r\n      protocolFee: BigNumberJs.initialize(),\r\n      minimumProtocolFee: BigNumberJs.initialize(),\r\n      allowanceTarget: \"\",\r\n      liquiditySources: [],\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<Quote>,\r\n    writer: BinaryWriter\r\n  ): BinaryWriter {\r\n    if (msg.sellTokenAddress) {\r\n      writer.writeString(1, msg.sellTokenAddress);\r\n    }\r\n    if (msg.sellAmount) {\r\n      writer.writeMessage(2, msg.sellAmount, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.buyTokenAddress) {\r\n      writer.writeString(3, msg.buyTokenAddress);\r\n    }\r\n    if (msg.buyAmount) {\r\n      writer.writeMessage(4, msg.buyAmount, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.price) {\r\n      writer.writeMessage(5, msg.price, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.estimatedPriceImpact != undefined) {\r\n      writer.writeMessage(\r\n        6,\r\n        msg.estimatedPriceImpact,\r\n        BigNumberJs._writeMessage\r\n      );\r\n    }\r\n    if (msg.sellTokenToNativeTokenRate) {\r\n      writer.writeMessage(\r\n        7,\r\n        msg.sellTokenToNativeTokenRate,\r\n        BigNumberJs._writeMessage\r\n      );\r\n    }\r\n    if (msg.buyTokenToNativeTokenRate) {\r\n      writer.writeMessage(\r\n        8,\r\n        msg.buyTokenToNativeTokenRate,\r\n        BigNumberJs._writeMessage\r\n      );\r\n    }\r\n    if (msg.chainId) {\r\n      writer.writeInt32(9, msg.chainId);\r\n    }\r\n    if (msg.gas) {\r\n      writer.writeMessage(10, msg.gas, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.estimatedGas) {\r\n      writer.writeMessage(11, msg.estimatedGas, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.gasPrice) {\r\n      writer.writeMessage(12, msg.gasPrice, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.value) {\r\n      writer.writeMessage(13, msg.value, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.protocolFee) {\r\n      writer.writeMessage(14, msg.protocolFee, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.minimumProtocolFee) {\r\n      writer.writeMessage(\r\n        15,\r\n        msg.minimumProtocolFee,\r\n        BigNumberJs._writeMessage\r\n      );\r\n    }\r\n    if (msg.allowanceTarget) {\r\n      writer.writeString(16, msg.allowanceTarget);\r\n    }\r\n    if (msg.liquiditySources?.length) {\r\n      writer.writeRepeatedMessage(\r\n        17,\r\n        msg.liquiditySources as any,\r\n        LiquiditySource._writeMessage\r\n      );\r\n    }\r\n    return writer;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: Quote, reader: BinaryReader): Quote {\r\n    while (reader.nextField()) {\r\n      const field = reader.getFieldNumber();\r\n      switch (field) {\r\n        case 1: {\r\n          msg.sellTokenAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 2: {\r\n          reader.readMessage(msg.sellAmount, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 3: {\r\n          msg.buyTokenAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 4: {\r\n          reader.readMessage(msg.buyAmount, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 5: {\r\n          reader.readMessage(msg.price, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 6: {\r\n          msg.estimatedPriceImpact = BigNumberJs.initialize();\r\n          reader.readMessage(\r\n            msg.estimatedPriceImpact,\r\n            BigNumberJs._readMessage\r\n          );\r\n          break;\r\n        }\r\n        case 7: {\r\n          reader.readMessage(\r\n            msg.sellTokenToNativeTokenRate,\r\n            BigNumberJs._readMessage\r\n          );\r\n          break;\r\n        }\r\n        case 8: {\r\n          reader.readMessage(\r\n            msg.buyTokenToNativeTokenRate,\r\n            BigNumberJs._readMessage\r\n          );\r\n          break;\r\n        }\r\n        case 9: {\r\n          msg.chainId = reader.readInt32();\r\n          break;\r\n        }\r\n        case 10: {\r\n          reader.readMessage(msg.gas, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 11: {\r\n          reader.readMessage(msg.estimatedGas, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 12: {\r\n          reader.readMessage(msg.gasPrice, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 13: {\r\n          reader.readMessage(msg.value, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 14: {\r\n          reader.readMessage(msg.protocolFee, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 15: {\r\n          reader.readMessage(msg.minimumProtocolFee, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 16: {\r\n          msg.allowanceTarget = reader.readString();\r\n          break;\r\n        }\r\n        case 17: {\r\n          const m = LiquiditySource.initialize();\r\n          reader.readMessage(m, LiquiditySource._readMessage);\r\n          msg.liquiditySources.push(m);\r\n          break;\r\n        }\r\n        default: {\r\n          reader.skipField();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const MetaTransaction = {\r\n  /**\r\n   * Serializes MetaTransaction to protobuf.\r\n   */\r\n  encode: function (msg: Partial<MetaTransaction>): Uint8Array {\r\n    return MetaTransaction._writeMessage(\r\n      msg,\r\n      new BinaryWriter()\r\n    ).getResultBuffer();\r\n  },\r\n\r\n  /**\r\n   * Deserializes MetaTransaction from protobuf.\r\n   */\r\n  decode: function (bytes: ByteSource): MetaTransaction {\r\n    return MetaTransaction._readMessage(\r\n      MetaTransaction.initialize(),\r\n      new BinaryReader(bytes)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes MetaTransaction with all fields set to their default value.\r\n   */\r\n  initialize: function (): MetaTransaction {\r\n    return {\r\n      signerAddress: \"\",\r\n      senderAddress: \"\",\r\n      minGasPrice: BigNumberJs.initialize(),\r\n      maxGasPrice: BigNumberJs.initialize(),\r\n      expirationTimeSeconds: BigNumberJs.initialize(),\r\n      salt: BigNumberJs.initialize(),\r\n      callData: \"\",\r\n      value: BigNumberJs.initialize(),\r\n      feeTokenAddress: \"\",\r\n      feeAmount: BigNumberJs.initialize(),\r\n      chainId: 0,\r\n      verifyingContract: \"\",\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<MetaTransaction>,\r\n    writer: BinaryWriter\r\n  ): BinaryWriter {\r\n    if (msg.signerAddress) {\r\n      writer.writeString(1, msg.signerAddress);\r\n    }\r\n    if (msg.senderAddress) {\r\n      writer.writeString(2, msg.senderAddress);\r\n    }\r\n    if (msg.minGasPrice) {\r\n      writer.writeMessage(3, msg.minGasPrice, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.maxGasPrice) {\r\n      writer.writeMessage(4, msg.maxGasPrice, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.expirationTimeSeconds) {\r\n      writer.writeMessage(\r\n        5,\r\n        msg.expirationTimeSeconds,\r\n        BigNumberJs._writeMessage\r\n      );\r\n    }\r\n    if (msg.salt) {\r\n      writer.writeMessage(6, msg.salt, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.callData) {\r\n      writer.writeString(7, msg.callData);\r\n    }\r\n    if (msg.value) {\r\n      writer.writeMessage(8, msg.value, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.feeTokenAddress) {\r\n      writer.writeString(9, msg.feeTokenAddress);\r\n    }\r\n    if (msg.feeAmount) {\r\n      writer.writeMessage(10, msg.feeAmount, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.chainId) {\r\n      writer.writeInt32(11, msg.chainId);\r\n    }\r\n    if (msg.verifyingContract) {\r\n      writer.writeString(12, msg.verifyingContract);\r\n    }\r\n    return writer;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (\r\n    msg: MetaTransaction,\r\n    reader: BinaryReader\r\n  ): MetaTransaction {\r\n    while (reader.nextField()) {\r\n      const field = reader.getFieldNumber();\r\n      switch (field) {\r\n        case 1: {\r\n          msg.signerAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 2: {\r\n          msg.senderAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 3: {\r\n          reader.readMessage(msg.minGasPrice, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 4: {\r\n          reader.readMessage(msg.maxGasPrice, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 5: {\r\n          reader.readMessage(\r\n            msg.expirationTimeSeconds,\r\n            BigNumberJs._readMessage\r\n          );\r\n          break;\r\n        }\r\n        case 6: {\r\n          reader.readMessage(msg.salt, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 7: {\r\n          msg.callData = reader.readString();\r\n          break;\r\n        }\r\n        case 8: {\r\n          reader.readMessage(msg.value, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 9: {\r\n          msg.feeTokenAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 10: {\r\n          reader.readMessage(msg.feeAmount, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 11: {\r\n          msg.chainId = reader.readInt32();\r\n          break;\r\n        }\r\n        case 12: {\r\n          msg.verifyingContract = reader.readString();\r\n          break;\r\n        }\r\n        default: {\r\n          reader.skipField();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const GetQuoteRequest = {\r\n  /**\r\n   * Serializes GetQuoteRequest to protobuf.\r\n   */\r\n  encode: function (msg: Partial<GetQuoteRequest>): Uint8Array {\r\n    return GetQuoteRequest._writeMessage(\r\n      msg,\r\n      new BinaryWriter()\r\n    ).getResultBuffer();\r\n  },\r\n\r\n  /**\r\n   * Deserializes GetQuoteRequest from protobuf.\r\n   */\r\n  decode: function (bytes: ByteSource): GetQuoteRequest {\r\n    return GetQuoteRequest._readMessage(\r\n      GetQuoteRequest.initialize(),\r\n      new BinaryReader(bytes)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes GetQuoteRequest with all fields set to their default value.\r\n   */\r\n  initialize: function (): GetQuoteRequest {\r\n    return {\r\n      sellTokenAddress: \"\",\r\n      buyTokenAddress: \"\",\r\n      sellAmount: undefined,\r\n      buyAmount: undefined,\r\n      chainId: 0,\r\n      takerAddress: \"\",\r\n      integratorId: \"\",\r\n      affiliateAddress: undefined,\r\n      slippagePercentage: undefined,\r\n      quoteUniqueId: undefined,\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<GetQuoteRequest>,\r\n    writer: BinaryWriter\r\n  ): BinaryWriter {\r\n    if (msg.sellTokenAddress) {\r\n      writer.writeString(1, msg.sellTokenAddress);\r\n    }\r\n    if (msg.buyTokenAddress) {\r\n      writer.writeString(2, msg.buyTokenAddress);\r\n    }\r\n    if (msg.sellAmount != undefined) {\r\n      writer.writeMessage(3, msg.sellAmount, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.buyAmount != undefined) {\r\n      writer.writeMessage(4, msg.buyAmount, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.chainId) {\r\n      writer.writeInt32(5, msg.chainId);\r\n    }\r\n    if (msg.takerAddress) {\r\n      writer.writeString(6, msg.takerAddress);\r\n    }\r\n    if (msg.integratorId) {\r\n      writer.writeString(7, msg.integratorId);\r\n    }\r\n    if (msg.affiliateAddress != undefined) {\r\n      writer.writeString(8, msg.affiliateAddress);\r\n    }\r\n    if (msg.slippagePercentage != undefined) {\r\n      writer.writeMessage(9, msg.slippagePercentage, BigNumberJs._writeMessage);\r\n    }\r\n    if (msg.quoteUniqueId != undefined) {\r\n      writer.writeString(10, msg.quoteUniqueId);\r\n    }\r\n    return writer;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (\r\n    msg: GetQuoteRequest,\r\n    reader: BinaryReader\r\n  ): GetQuoteRequest {\r\n    while (reader.nextField()) {\r\n      const field = reader.getFieldNumber();\r\n      switch (field) {\r\n        case 1: {\r\n          msg.sellTokenAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 2: {\r\n          msg.buyTokenAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 3: {\r\n          msg.sellAmount = BigNumberJs.initialize();\r\n          reader.readMessage(msg.sellAmount, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 4: {\r\n          msg.buyAmount = BigNumberJs.initialize();\r\n          reader.readMessage(msg.buyAmount, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 5: {\r\n          msg.chainId = reader.readInt32();\r\n          break;\r\n        }\r\n        case 6: {\r\n          msg.takerAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 7: {\r\n          msg.integratorId = reader.readString();\r\n          break;\r\n        }\r\n        case 8: {\r\n          msg.affiliateAddress = reader.readString();\r\n          break;\r\n        }\r\n        case 9: {\r\n          msg.slippagePercentage = BigNumberJs.initialize();\r\n          reader.readMessage(msg.slippagePercentage, BigNumberJs._readMessage);\r\n          break;\r\n        }\r\n        case 10: {\r\n          msg.quoteUniqueId = reader.readString();\r\n          break;\r\n        }\r\n        default: {\r\n          reader.skipField();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const GetQuoteResponse = {\r\n  /**\r\n   * Serializes GetQuoteResponse to protobuf.\r\n   */\r\n  encode: function (msg: Partial<GetQuoteResponse>): Uint8Array {\r\n    return GetQuoteResponse._writeMessage(\r\n      msg,\r\n      new BinaryWriter()\r\n    ).getResultBuffer();\r\n  },\r\n\r\n  /**\r\n   * Deserializes GetQuoteResponse from protobuf.\r\n   */\r\n  decode: function (bytes: ByteSource): GetQuoteResponse {\r\n    return GetQuoteResponse._readMessage(\r\n      GetQuoteResponse.initialize(),\r\n      new BinaryReader(bytes)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes GetQuoteResponse with all fields set to their default value.\r\n   */\r\n  initialize: function (): GetQuoteResponse {\r\n    return {\r\n      quote: Quote.initialize(),\r\n      metaTransaction: MetaTransaction.initialize(),\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<GetQuoteResponse>,\r\n    writer: BinaryWriter\r\n  ): BinaryWriter {\r\n    if (msg.quote) {\r\n      writer.writeMessage(1, msg.quote, Quote._writeMessage);\r\n    }\r\n    if (msg.metaTransaction) {\r\n      writer.writeMessage(\r\n        2,\r\n        msg.metaTransaction,\r\n        MetaTransaction._writeMessage\r\n      );\r\n    }\r\n    return writer;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (\r\n    msg: GetQuoteResponse,\r\n    reader: BinaryReader\r\n  ): GetQuoteResponse {\r\n    while (reader.nextField()) {\r\n      const field = reader.getFieldNumber();\r\n      switch (field) {\r\n        case 1: {\r\n          reader.readMessage(msg.quote, Quote._readMessage);\r\n          break;\r\n        }\r\n        case 2: {\r\n          reader.readMessage(msg.metaTransaction, MetaTransaction._readMessage);\r\n          break;\r\n        }\r\n        default: {\r\n          reader.skipField();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\n//========================================//\r\n//          JSON Encode / Decode          //\r\n//========================================//\r\n\r\nexport const LiquiditySourceJSON = {\r\n  /**\r\n   * Serializes LiquiditySource to JSON.\r\n   */\r\n  encode: function (msg: Partial<LiquiditySource>): string {\r\n    return JSON.stringify(LiquiditySourceJSON._writeMessage(msg));\r\n  },\r\n\r\n  /**\r\n   * Deserializes LiquiditySource from JSON.\r\n   */\r\n  decode: function (json: string): LiquiditySource {\r\n    return LiquiditySourceJSON._readMessage(\r\n      LiquiditySourceJSON.initialize(),\r\n      JSON.parse(json)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes LiquiditySource with all fields set to their default value.\r\n   */\r\n  initialize: function (): LiquiditySource {\r\n    return {\r\n      name: \"\",\r\n      proportion: BigNumberJs.initialize(),\r\n      intermediateToken: undefined,\r\n      hops: [],\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<LiquiditySource>\r\n  ): Record<string, unknown> {\r\n    const json: Record<string, unknown> = {};\r\n    if (msg.name) {\r\n      json[\"name\"] = msg.name;\r\n    }\r\n    if (msg.proportion) {\r\n      const proportion = BigNumberJsJSON._writeMessage(msg.proportion);\r\n      if (Object.keys(proportion).length > 0) {\r\n        json[\"proportion\"] = proportion;\r\n      }\r\n    }\r\n    if (msg.intermediateToken != undefined) {\r\n      json[\"intermediateToken\"] = msg.intermediateToken;\r\n    }\r\n    if (msg.hops?.length) {\r\n      json[\"hops\"] = msg.hops;\r\n    }\r\n    return json;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: LiquiditySource, json: any): LiquiditySource {\r\n    const _name = json[\"name\"];\r\n    if (_name) {\r\n      msg.name = _name;\r\n    }\r\n    const _proportion = json[\"proportion\"];\r\n    if (_proportion) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _proportion);\r\n      msg.proportion = m;\r\n    }\r\n    const _intermediateToken =\r\n      json[\"intermediateToken\"] ?? json[\"intermediate_token\"];\r\n    if (_intermediateToken) {\r\n      msg.intermediateToken = _intermediateToken;\r\n    }\r\n    const _hops = json[\"hops\"];\r\n    if (_hops) {\r\n      msg.hops = _hops;\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const QuoteJSON = {\r\n  /**\r\n   * Serializes Quote to JSON.\r\n   */\r\n  encode: function (msg: Partial<Quote>): string {\r\n    return JSON.stringify(QuoteJSON._writeMessage(msg));\r\n  },\r\n\r\n  /**\r\n   * Deserializes Quote from JSON.\r\n   */\r\n  decode: function (json: string): Quote {\r\n    return QuoteJSON._readMessage(QuoteJSON.initialize(), JSON.parse(json));\r\n  },\r\n\r\n  /**\r\n   * Initializes Quote with all fields set to their default value.\r\n   */\r\n  initialize: function (): Quote {\r\n    return {\r\n      sellTokenAddress: \"\",\r\n      sellAmount: BigNumberJs.initialize(),\r\n      buyTokenAddress: \"\",\r\n      buyAmount: BigNumberJs.initialize(),\r\n      price: BigNumberJs.initialize(),\r\n      estimatedPriceImpact: undefined,\r\n      sellTokenToNativeTokenRate: BigNumberJs.initialize(),\r\n      buyTokenToNativeTokenRate: BigNumberJs.initialize(),\r\n      chainId: 0,\r\n      gas: BigNumberJs.initialize(),\r\n      estimatedGas: BigNumberJs.initialize(),\r\n      gasPrice: BigNumberJs.initialize(),\r\n      value: BigNumberJs.initialize(),\r\n      protocolFee: BigNumberJs.initialize(),\r\n      minimumProtocolFee: BigNumberJs.initialize(),\r\n      allowanceTarget: \"\",\r\n      liquiditySources: [],\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (msg: Partial<Quote>): Record<string, unknown> {\r\n    const json: Record<string, unknown> = {};\r\n    if (msg.sellTokenAddress) {\r\n      json[\"sellTokenAddress\"] = msg.sellTokenAddress;\r\n    }\r\n    if (msg.sellAmount) {\r\n      const sellAmount = BigNumberJsJSON._writeMessage(msg.sellAmount);\r\n      if (Object.keys(sellAmount).length > 0) {\r\n        json[\"sellAmount\"] = sellAmount;\r\n      }\r\n    }\r\n    if (msg.buyTokenAddress) {\r\n      json[\"buyTokenAddress\"] = msg.buyTokenAddress;\r\n    }\r\n    if (msg.buyAmount) {\r\n      const buyAmount = BigNumberJsJSON._writeMessage(msg.buyAmount);\r\n      if (Object.keys(buyAmount).length > 0) {\r\n        json[\"buyAmount\"] = buyAmount;\r\n      }\r\n    }\r\n    if (msg.price) {\r\n      const price = BigNumberJsJSON._writeMessage(msg.price);\r\n      if (Object.keys(price).length > 0) {\r\n        json[\"price\"] = price;\r\n      }\r\n    }\r\n    if (msg.estimatedPriceImpact != undefined) {\r\n      const estimatedPriceImpact = BigNumberJsJSON._writeMessage(\r\n        msg.estimatedPriceImpact\r\n      );\r\n      json[\"estimatedPriceImpact\"] = estimatedPriceImpact;\r\n    }\r\n    if (msg.sellTokenToNativeTokenRate) {\r\n      const sellTokenToNativeTokenRate = BigNumberJsJSON._writeMessage(\r\n        msg.sellTokenToNativeTokenRate\r\n      );\r\n      if (Object.keys(sellTokenToNativeTokenRate).length > 0) {\r\n        json[\"sellTokenToNativeTokenRate\"] = sellTokenToNativeTokenRate;\r\n      }\r\n    }\r\n    if (msg.buyTokenToNativeTokenRate) {\r\n      const buyTokenToNativeTokenRate = BigNumberJsJSON._writeMessage(\r\n        msg.buyTokenToNativeTokenRate\r\n      );\r\n      if (Object.keys(buyTokenToNativeTokenRate).length > 0) {\r\n        json[\"buyTokenToNativeTokenRate\"] = buyTokenToNativeTokenRate;\r\n      }\r\n    }\r\n    if (msg.chainId) {\r\n      json[\"chainId\"] = msg.chainId;\r\n    }\r\n    if (msg.gas) {\r\n      const gas = BigNumberJsJSON._writeMessage(msg.gas);\r\n      if (Object.keys(gas).length > 0) {\r\n        json[\"gas\"] = gas;\r\n      }\r\n    }\r\n    if (msg.estimatedGas) {\r\n      const estimatedGas = BigNumberJsJSON._writeMessage(msg.estimatedGas);\r\n      if (Object.keys(estimatedGas).length > 0) {\r\n        json[\"estimatedGas\"] = estimatedGas;\r\n      }\r\n    }\r\n    if (msg.gasPrice) {\r\n      const gasPrice = BigNumberJsJSON._writeMessage(msg.gasPrice);\r\n      if (Object.keys(gasPrice).length > 0) {\r\n        json[\"gasPrice\"] = gasPrice;\r\n      }\r\n    }\r\n    if (msg.value) {\r\n      const value = BigNumberJsJSON._writeMessage(msg.value);\r\n      if (Object.keys(value).length > 0) {\r\n        json[\"value\"] = value;\r\n      }\r\n    }\r\n    if (msg.protocolFee) {\r\n      const protocolFee = BigNumberJsJSON._writeMessage(msg.protocolFee);\r\n      if (Object.keys(protocolFee).length > 0) {\r\n        json[\"protocolFee\"] = protocolFee;\r\n      }\r\n    }\r\n    if (msg.minimumProtocolFee) {\r\n      const minimumProtocolFee = BigNumberJsJSON._writeMessage(\r\n        msg.minimumProtocolFee\r\n      );\r\n      if (Object.keys(minimumProtocolFee).length > 0) {\r\n        json[\"minimumProtocolFee\"] = minimumProtocolFee;\r\n      }\r\n    }\r\n    if (msg.allowanceTarget) {\r\n      json[\"allowanceTarget\"] = msg.allowanceTarget;\r\n    }\r\n    if (msg.liquiditySources?.length) {\r\n      json[\"liquiditySources\"] = msg.liquiditySources.map(\r\n        LiquiditySourceJSON._writeMessage\r\n      );\r\n    }\r\n    return json;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: Quote, json: any): Quote {\r\n    const _sellTokenAddress =\r\n      json[\"sellTokenAddress\"] ?? json[\"sell_token_address\"];\r\n    if (_sellTokenAddress) {\r\n      msg.sellTokenAddress = _sellTokenAddress;\r\n    }\r\n    const _sellAmount = json[\"sellAmount\"] ?? json[\"sell_amount\"];\r\n    if (_sellAmount) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _sellAmount);\r\n      msg.sellAmount = m;\r\n    }\r\n    const _buyTokenAddress =\r\n      json[\"buyTokenAddress\"] ?? json[\"buy_token_address\"];\r\n    if (_buyTokenAddress) {\r\n      msg.buyTokenAddress = _buyTokenAddress;\r\n    }\r\n    const _buyAmount = json[\"buyAmount\"] ?? json[\"buy_amount\"];\r\n    if (_buyAmount) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _buyAmount);\r\n      msg.buyAmount = m;\r\n    }\r\n    const _price = json[\"price\"];\r\n    if (_price) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _price);\r\n      msg.price = m;\r\n    }\r\n    const _estimatedPriceImpact =\r\n      json[\"estimatedPriceImpact\"] ?? json[\"estimated_price_impact\"];\r\n    if (_estimatedPriceImpact) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _estimatedPriceImpact);\r\n      msg.estimatedPriceImpact = m;\r\n    }\r\n    const _sellTokenToNativeTokenRate =\r\n      json[\"sellTokenToNativeTokenRate\"] ??\r\n      json[\"sell_token_to_native_token_rate\"];\r\n    if (_sellTokenToNativeTokenRate) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _sellTokenToNativeTokenRate);\r\n      msg.sellTokenToNativeTokenRate = m;\r\n    }\r\n    const _buyTokenToNativeTokenRate =\r\n      json[\"buyTokenToNativeTokenRate\"] ??\r\n      json[\"buy_token_to_native_token_rate\"];\r\n    if (_buyTokenToNativeTokenRate) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _buyTokenToNativeTokenRate);\r\n      msg.buyTokenToNativeTokenRate = m;\r\n    }\r\n    const _chainId = json[\"chainId\"] ?? json[\"chain_id\"];\r\n    if (_chainId) {\r\n      msg.chainId = _chainId;\r\n    }\r\n    const _gas = json[\"gas\"];\r\n    if (_gas) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _gas);\r\n      msg.gas = m;\r\n    }\r\n    const _estimatedGas = json[\"estimatedGas\"] ?? json[\"estimated_gas\"];\r\n    if (_estimatedGas) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _estimatedGas);\r\n      msg.estimatedGas = m;\r\n    }\r\n    const _gasPrice = json[\"gasPrice\"] ?? json[\"gas_price\"];\r\n    if (_gasPrice) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _gasPrice);\r\n      msg.gasPrice = m;\r\n    }\r\n    const _value = json[\"value\"];\r\n    if (_value) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _value);\r\n      msg.value = m;\r\n    }\r\n    const _protocolFee = json[\"protocolFee\"] ?? json[\"protocol_fee\"];\r\n    if (_protocolFee) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _protocolFee);\r\n      msg.protocolFee = m;\r\n    }\r\n    const _minimumProtocolFee =\r\n      json[\"minimumProtocolFee\"] ?? json[\"minimum_protocol_fee\"];\r\n    if (_minimumProtocolFee) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _minimumProtocolFee);\r\n      msg.minimumProtocolFee = m;\r\n    }\r\n    const _allowanceTarget =\r\n      json[\"allowanceTarget\"] ?? json[\"allowance_target\"];\r\n    if (_allowanceTarget) {\r\n      msg.allowanceTarget = _allowanceTarget;\r\n    }\r\n    const _liquiditySources =\r\n      json[\"liquiditySources\"] ?? json[\"liquidity_sources\"];\r\n    if (_liquiditySources) {\r\n      for (const item of _liquiditySources) {\r\n        const m = LiquiditySource.initialize();\r\n        LiquiditySourceJSON._readMessage(m, item);\r\n        msg.liquiditySources.push(m);\r\n      }\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const MetaTransactionJSON = {\r\n  /**\r\n   * Serializes MetaTransaction to JSON.\r\n   */\r\n  encode: function (msg: Partial<MetaTransaction>): string {\r\n    return JSON.stringify(MetaTransactionJSON._writeMessage(msg));\r\n  },\r\n\r\n  /**\r\n   * Deserializes MetaTransaction from JSON.\r\n   */\r\n  decode: function (json: string): MetaTransaction {\r\n    return MetaTransactionJSON._readMessage(\r\n      MetaTransactionJSON.initialize(),\r\n      JSON.parse(json)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes MetaTransaction with all fields set to their default value.\r\n   */\r\n  initialize: function (): MetaTransaction {\r\n    return {\r\n      signerAddress: \"\",\r\n      senderAddress: \"\",\r\n      minGasPrice: BigNumberJs.initialize(),\r\n      maxGasPrice: BigNumberJs.initialize(),\r\n      expirationTimeSeconds: BigNumberJs.initialize(),\r\n      salt: BigNumberJs.initialize(),\r\n      callData: \"\",\r\n      value: BigNumberJs.initialize(),\r\n      feeTokenAddress: \"\",\r\n      feeAmount: BigNumberJs.initialize(),\r\n      chainId: 0,\r\n      verifyingContract: \"\",\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<MetaTransaction>\r\n  ): Record<string, unknown> {\r\n    const json: Record<string, unknown> = {};\r\n    if (msg.signerAddress) {\r\n      json[\"signerAddress\"] = msg.signerAddress;\r\n    }\r\n    if (msg.senderAddress) {\r\n      json[\"senderAddress\"] = msg.senderAddress;\r\n    }\r\n    if (msg.minGasPrice) {\r\n      const minGasPrice = BigNumberJsJSON._writeMessage(msg.minGasPrice);\r\n      if (Object.keys(minGasPrice).length > 0) {\r\n        json[\"minGasPrice\"] = minGasPrice;\r\n      }\r\n    }\r\n    if (msg.maxGasPrice) {\r\n      const maxGasPrice = BigNumberJsJSON._writeMessage(msg.maxGasPrice);\r\n      if (Object.keys(maxGasPrice).length > 0) {\r\n        json[\"maxGasPrice\"] = maxGasPrice;\r\n      }\r\n    }\r\n    if (msg.expirationTimeSeconds) {\r\n      const expirationTimeSeconds = BigNumberJsJSON._writeMessage(\r\n        msg.expirationTimeSeconds\r\n      );\r\n      if (Object.keys(expirationTimeSeconds).length > 0) {\r\n        json[\"expirationTimeSeconds\"] = expirationTimeSeconds;\r\n      }\r\n    }\r\n    if (msg.salt) {\r\n      const salt = BigNumberJsJSON._writeMessage(msg.salt);\r\n      if (Object.keys(salt).length > 0) {\r\n        json[\"salt\"] = salt;\r\n      }\r\n    }\r\n    if (msg.callData) {\r\n      json[\"callData\"] = msg.callData;\r\n    }\r\n    if (msg.value) {\r\n      const value = BigNumberJsJSON._writeMessage(msg.value);\r\n      if (Object.keys(value).length > 0) {\r\n        json[\"value\"] = value;\r\n      }\r\n    }\r\n    if (msg.feeTokenAddress) {\r\n      json[\"feeTokenAddress\"] = msg.feeTokenAddress;\r\n    }\r\n    if (msg.feeAmount) {\r\n      const feeAmount = BigNumberJsJSON._writeMessage(msg.feeAmount);\r\n      if (Object.keys(feeAmount).length > 0) {\r\n        json[\"feeAmount\"] = feeAmount;\r\n      }\r\n    }\r\n    if (msg.chainId) {\r\n      json[\"chainId\"] = msg.chainId;\r\n    }\r\n    if (msg.verifyingContract) {\r\n      json[\"verifyingContract\"] = msg.verifyingContract;\r\n    }\r\n    return json;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: MetaTransaction, json: any): MetaTransaction {\r\n    const _signerAddress = json[\"signerAddress\"] ?? json[\"signer_address\"];\r\n    if (_signerAddress) {\r\n      msg.signerAddress = _signerAddress;\r\n    }\r\n    const _senderAddress = json[\"senderAddress\"] ?? json[\"sender_address\"];\r\n    if (_senderAddress) {\r\n      msg.senderAddress = _senderAddress;\r\n    }\r\n    const _minGasPrice = json[\"minGasPrice\"] ?? json[\"min_gas_price\"];\r\n    if (_minGasPrice) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _minGasPrice);\r\n      msg.minGasPrice = m;\r\n    }\r\n    const _maxGasPrice = json[\"maxGasPrice\"] ?? json[\"max_gas_price\"];\r\n    if (_maxGasPrice) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _maxGasPrice);\r\n      msg.maxGasPrice = m;\r\n    }\r\n    const _expirationTimeSeconds =\r\n      json[\"expirationTimeSeconds\"] ?? json[\"expiration_time_seconds\"];\r\n    if (_expirationTimeSeconds) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _expirationTimeSeconds);\r\n      msg.expirationTimeSeconds = m;\r\n    }\r\n    const _salt = json[\"salt\"];\r\n    if (_salt) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _salt);\r\n      msg.salt = m;\r\n    }\r\n    const _callData = json[\"callData\"] ?? json[\"call_data\"];\r\n    if (_callData) {\r\n      msg.callData = _callData;\r\n    }\r\n    const _value = json[\"value\"];\r\n    if (_value) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _value);\r\n      msg.value = m;\r\n    }\r\n    const _feeTokenAddress =\r\n      json[\"feeTokenAddress\"] ?? json[\"fee_token_address\"];\r\n    if (_feeTokenAddress) {\r\n      msg.feeTokenAddress = _feeTokenAddress;\r\n    }\r\n    const _feeAmount = json[\"feeAmount\"] ?? json[\"fee_amount\"];\r\n    if (_feeAmount) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _feeAmount);\r\n      msg.feeAmount = m;\r\n    }\r\n    const _chainId = json[\"chainId\"] ?? json[\"chain_id\"];\r\n    if (_chainId) {\r\n      msg.chainId = _chainId;\r\n    }\r\n    const _verifyingContract =\r\n      json[\"verifyingContract\"] ?? json[\"verifying_contract\"];\r\n    if (_verifyingContract) {\r\n      msg.verifyingContract = _verifyingContract;\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const GetQuoteRequestJSON = {\r\n  /**\r\n   * Serializes GetQuoteRequest to JSON.\r\n   */\r\n  encode: function (msg: Partial<GetQuoteRequest>): string {\r\n    return JSON.stringify(GetQuoteRequestJSON._writeMessage(msg));\r\n  },\r\n\r\n  /**\r\n   * Deserializes GetQuoteRequest from JSON.\r\n   */\r\n  decode: function (json: string): GetQuoteRequest {\r\n    return GetQuoteRequestJSON._readMessage(\r\n      GetQuoteRequestJSON.initialize(),\r\n      JSON.parse(json)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes GetQuoteRequest with all fields set to their default value.\r\n   */\r\n  initialize: function (): GetQuoteRequest {\r\n    return {\r\n      sellTokenAddress: \"\",\r\n      buyTokenAddress: \"\",\r\n      sellAmount: undefined,\r\n      buyAmount: undefined,\r\n      chainId: 0,\r\n      takerAddress: \"\",\r\n      integratorId: \"\",\r\n      affiliateAddress: undefined,\r\n      slippagePercentage: undefined,\r\n      quoteUniqueId: undefined,\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<GetQuoteRequest>\r\n  ): Record<string, unknown> {\r\n    const json: Record<string, unknown> = {};\r\n    if (msg.sellTokenAddress) {\r\n      json[\"sellTokenAddress\"] = msg.sellTokenAddress;\r\n    }\r\n    if (msg.buyTokenAddress) {\r\n      json[\"buyTokenAddress\"] = msg.buyTokenAddress;\r\n    }\r\n    if (msg.sellAmount != undefined) {\r\n      const sellAmount = BigNumberJsJSON._writeMessage(msg.sellAmount);\r\n      json[\"sellAmount\"] = sellAmount;\r\n    }\r\n    if (msg.buyAmount != undefined) {\r\n      const buyAmount = BigNumberJsJSON._writeMessage(msg.buyAmount);\r\n      json[\"buyAmount\"] = buyAmount;\r\n    }\r\n    if (msg.chainId) {\r\n      json[\"chainId\"] = msg.chainId;\r\n    }\r\n    if (msg.takerAddress) {\r\n      json[\"takerAddress\"] = msg.takerAddress;\r\n    }\r\n    if (msg.integratorId) {\r\n      json[\"integratorId\"] = msg.integratorId;\r\n    }\r\n    if (msg.affiliateAddress != undefined) {\r\n      json[\"affiliateAddress\"] = msg.affiliateAddress;\r\n    }\r\n    if (msg.slippagePercentage != undefined) {\r\n      const slippagePercentage = BigNumberJsJSON._writeMessage(\r\n        msg.slippagePercentage\r\n      );\r\n      json[\"slippagePercentage\"] = slippagePercentage;\r\n    }\r\n    if (msg.quoteUniqueId != undefined) {\r\n      json[\"quoteUniqueId\"] = msg.quoteUniqueId;\r\n    }\r\n    return json;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: GetQuoteRequest, json: any): GetQuoteRequest {\r\n    const _sellTokenAddress =\r\n      json[\"sellTokenAddress\"] ?? json[\"sell_token_address\"];\r\n    if (_sellTokenAddress) {\r\n      msg.sellTokenAddress = _sellTokenAddress;\r\n    }\r\n    const _buyTokenAddress =\r\n      json[\"buyTokenAddress\"] ?? json[\"buy_token_address\"];\r\n    if (_buyTokenAddress) {\r\n      msg.buyTokenAddress = _buyTokenAddress;\r\n    }\r\n    const _sellAmount = json[\"sellAmount\"] ?? json[\"sell_amount\"];\r\n    if (_sellAmount) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _sellAmount);\r\n      msg.sellAmount = m;\r\n    }\r\n    const _buyAmount = json[\"buyAmount\"] ?? json[\"buy_amount\"];\r\n    if (_buyAmount) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _buyAmount);\r\n      msg.buyAmount = m;\r\n    }\r\n    const _chainId = json[\"chainId\"] ?? json[\"chain_id\"];\r\n    if (_chainId) {\r\n      msg.chainId = _chainId;\r\n    }\r\n    const _takerAddress = json[\"takerAddress\"] ?? json[\"taker_address\"];\r\n    if (_takerAddress) {\r\n      msg.takerAddress = _takerAddress;\r\n    }\r\n    const _integratorId = json[\"integratorId\"] ?? json[\"integrator_id\"];\r\n    if (_integratorId) {\r\n      msg.integratorId = _integratorId;\r\n    }\r\n    const _affiliateAddress =\r\n      json[\"affiliateAddress\"] ?? json[\"affiliate_address\"];\r\n    if (_affiliateAddress) {\r\n      msg.affiliateAddress = _affiliateAddress;\r\n    }\r\n    const _slippagePercentage =\r\n      json[\"slippagePercentage\"] ?? json[\"slippage_percentage\"];\r\n    if (_slippagePercentage) {\r\n      const m = BigNumberJs.initialize();\r\n      BigNumberJsJSON._readMessage(m, _slippagePercentage);\r\n      msg.slippagePercentage = m;\r\n    }\r\n    const _quoteUniqueId = json[\"quoteUniqueId\"] ?? json[\"quote_unique_id\"];\r\n    if (_quoteUniqueId) {\r\n      msg.quoteUniqueId = _quoteUniqueId;\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n\r\nexport const GetQuoteResponseJSON = {\r\n  /**\r\n   * Serializes GetQuoteResponse to JSON.\r\n   */\r\n  encode: function (msg: Partial<GetQuoteResponse>): string {\r\n    return JSON.stringify(GetQuoteResponseJSON._writeMessage(msg));\r\n  },\r\n\r\n  /**\r\n   * Deserializes GetQuoteResponse from JSON.\r\n   */\r\n  decode: function (json: string): GetQuoteResponse {\r\n    return GetQuoteResponseJSON._readMessage(\r\n      GetQuoteResponseJSON.initialize(),\r\n      JSON.parse(json)\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initializes GetQuoteResponse with all fields set to their default value.\r\n   */\r\n  initialize: function (): GetQuoteResponse {\r\n    return {\r\n      quote: Quote.initialize(),\r\n      metaTransaction: MetaTransaction.initialize(),\r\n    };\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _writeMessage: function (\r\n    msg: Partial<GetQuoteResponse>\r\n  ): Record<string, unknown> {\r\n    const json: Record<string, unknown> = {};\r\n    if (msg.quote) {\r\n      const quote = QuoteJSON._writeMessage(msg.quote);\r\n      if (Object.keys(quote).length > 0) {\r\n        json[\"quote\"] = quote;\r\n      }\r\n    }\r\n    if (msg.metaTransaction) {\r\n      const metaTransaction = MetaTransactionJSON._writeMessage(\r\n        msg.metaTransaction\r\n      );\r\n      if (Object.keys(metaTransaction).length > 0) {\r\n        json[\"metaTransaction\"] = metaTransaction;\r\n      }\r\n    }\r\n    return json;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _readMessage: function (msg: GetQuoteResponse, json: any): GetQuoteResponse {\r\n    const _quote = json[\"quote\"];\r\n    if (_quote) {\r\n      const m = Quote.initialize();\r\n      QuoteJSON._readMessage(m, _quote);\r\n      msg.quote = m;\r\n    }\r\n    const _metaTransaction =\r\n      json[\"metaTransaction\"] ?? json[\"meta_transaction\"];\r\n    if (_metaTransaction) {\r\n      const m = MetaTransaction.initialize();\r\n      MetaTransactionJSON._readMessage(m, _metaTransaction);\r\n      msg.metaTransaction = m;\r\n    }\r\n    return msg;\r\n  },\r\n};\r\n"],"version":3}