{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqmWorkerHeartbeatEntity.ts","mappings":";;;;;;;;;;;;AAAA,qCAAsC;AACtC,qCAAwD;AAExD,iDAAsD;AAMtD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAqBlC,oFAAoF;IACpF,kFAAkF;IAClF,qCAAqC;IACrC,4DAA4D;IAC5D,YAAY,OAAmC,EAAgC;QAC3E,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACnC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;CACJ,CAAA;AA/BG;IADC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;0DAC7B;AAIvB;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;8BACxD,IAAI;4DAAC;AAIxB;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,mCAAoB,EAAE,CAAC;8BAChE,iBAAS;0DAAC;AAI1B;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;wDAClB;AAIrB;IADC,IAAA,uBAAa,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;0DAC1B;AAnBd,yBAAyB;IADrC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC;;GAC9B,yBAAyB,CAkCrC;AAlCY,8DAAyB","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/entities/RfqmWorkerHeartbeatEntity.ts"],"sourcesContent":["import { BigNumber } from '@0x/utils';\nimport { Column, Entity, PrimaryColumn } from 'typeorm';\n\nimport { BigNumberTransformer } from './transformers';\n\nexport type RfqmWorkerHeartbeatOptions = Pick<RfqmWorkerHeartbeatEntity, 'address' | 'balance' | 'index' | 'chainId'> &\n    Partial<RfqmWorkerHeartbeatEntity>;\n\n@Entity({ name: 'rfqm_worker_heartbeats' })\nexport class RfqmWorkerHeartbeatEntity {\n    // The blockchain address of the worker\n    @PrimaryColumn({ name: 'address', type: 'varchar' })\n    public address: string;\n\n    // The time the report was created\n    @Column({ name: 'timestamp', type: 'timestamptz', default: () => 'now()' })\n    public timestamp!: Date;\n\n    // The native token balance of the worker\n    @Column({ name: 'balance', type: 'numeric', transformer: BigNumberTransformer })\n    public balance: BigNumber;\n\n    // The worker index assigned to the worker's ENV by Kubernetes\n    @Column({ name: 'index', type: 'int' })\n    public index: number;\n\n    // The chain ID of the chain the worker is active on.\n    @PrimaryColumn({ name: 'chain_id', type: 'int' })\n    public chainId: number;\n\n    // TypeORM runs a validation check where it calls this initializer with no argument.\n    // With no default `opts`, `opts` will be undefined and the validation will throw,\n    // therefore, add this hacky default.\n    // tslint:disable-next-line no-object-literal-type-assertion\n    constructor(opts: RfqmWorkerHeartbeatOptions = {} as RfqmWorkerHeartbeatOptions) {\n        if (opts.timestamp) {\n            this.timestamp = opts.timestamp;\n        }\n        this.address = opts.address;\n        this.balance = opts.balance;\n        this.chainId = opts.chainId;\n        this.index = opts.index;\n    }\n}\n"],"version":3}