{"file":"/Users/davidwalsh/code-local/0x-rfq-api/src/utils/Eip712Utils.ts","mappings":";;;AAEA,MAAM,aAAa,GAA2B;IAC1C,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,SAAS;IAClB,iBAAiB,EAAE,SAAS;IAC5B,IAAI,EAAE,SAAS;CAClB,CAAC;AAEF,oFAAoF;AACpF,yFAAyF;AACzF,sDAAsD;AAC/C,MAAM,uBAAuB,GAAG,CAAC,MAAoB,EAAuC,EAAE;IACjG,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACxF,OAAO;QACH,YAAY,EAAE,MAAM;KACvB,CAAC;AACN,CAAC,CAAC;AALW,QAAA,uBAAuB,2BAKlC","names":[],"sources":["/Users/davidwalsh/code-local/0x-rfq-api/src/utils/Eip712Utils.ts"],"sourcesContent":["import { Eip712DataField, Eip712Domain } from '../core/types';\r\n\r\nconst NAME_TO_TYPES: Record<string, string> = {\r\n    name: 'string',\r\n    version: 'string',\r\n    chainId: 'uint256',\r\n    verifyingContract: 'address',\r\n    salt: 'bytes32',\r\n};\r\n\r\n// Beware, we use Eip lowercase in our code, but we must use \"EIP\" in caps to adhere\r\n// to eth_signTypedData_v4. Confusingly, ethers.js does not accept the EIP712Domain type,\r\n// but it's easier to delete this value than create it\r\nexport const extractEIP712DomainType = (domain: Eip712Domain): { EIP712Domain: Eip712DataField[] } => {\r\n    const fields = Object.keys(domain).map((name) => ({ name, type: NAME_TO_TYPES[name] }));\r\n    return {\r\n        EIP712Domain: fields,\r\n    };\r\n};\r\n"],"version":3}