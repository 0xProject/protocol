29068f1c9fa91d2f9d5e2f660806178b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractEIP712DomainType = void 0;
const NAME_TO_TYPES = {
    name: 'string',
    version: 'string',
    chainId: 'uint256',
    verifyingContract: 'address',
    salt: 'bytes32',
};
// Beware, we use Eip lowercase in our code, but we must use "EIP" in caps to adhere
// to eth_signTypedData_v4. Confusingly, ethers.js does not accept the EIP712Domain type,
// but it's easier to delete this value than create it
const extractEIP712DomainType = (domain) => {
    const fields = Object.keys(domain).map((name) => ({ name, type: NAME_TO_TYPES[name] }));
    return {
        EIP712Domain: fields,
    };
};
exports.extractEIP712DomainType = extractEIP712DomainType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2Rhdmlkd2Fsc2gvY29kZS1sb2NhbC8weC1yZnEtYXBpL3NyYy91dGlscy9FaXA3MTJVdGlscy50cyIsIm1hcHBpbmdzIjoiOzs7QUFFQSxNQUFNLGFBQWEsR0FBMkI7SUFDMUMsSUFBSSxFQUFFLFFBQVE7SUFDZCxPQUFPLEVBQUUsUUFBUTtJQUNqQixPQUFPLEVBQUUsU0FBUztJQUNsQixpQkFBaUIsRUFBRSxTQUFTO0lBQzVCLElBQUksRUFBRSxTQUFTO0NBQ2xCLENBQUM7QUFFRixvRkFBb0Y7QUFDcEYseUZBQXlGO0FBQ3pGLHNEQUFzRDtBQUMvQyxNQUFNLHVCQUF1QixHQUFHLENBQUMsTUFBb0IsRUFBdUMsRUFBRTtJQUNqRyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3hGLE9BQU87UUFDSCxZQUFZLEVBQUUsTUFBTTtLQUN2QixDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBTFcsUUFBQSx1QkFBdUIsMkJBS2xDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZHdhbHNoL2NvZGUtbG9jYWwvMHgtcmZxLWFwaS9zcmMvdXRpbHMvRWlwNzEyVXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWlwNzEyRGF0YUZpZWxkLCBFaXA3MTJEb21haW4gfSBmcm9tICcuLi9jb3JlL3R5cGVzJztcclxuXHJcbmNvbnN0IE5BTUVfVE9fVFlQRVM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XHJcbiAgICBuYW1lOiAnc3RyaW5nJyxcclxuICAgIHZlcnNpb246ICdzdHJpbmcnLFxyXG4gICAgY2hhaW5JZDogJ3VpbnQyNTYnLFxyXG4gICAgdmVyaWZ5aW5nQ29udHJhY3Q6ICdhZGRyZXNzJyxcclxuICAgIHNhbHQ6ICdieXRlczMyJyxcclxufTtcclxuXHJcbi8vIEJld2FyZSwgd2UgdXNlIEVpcCBsb3dlcmNhc2UgaW4gb3VyIGNvZGUsIGJ1dCB3ZSBtdXN0IHVzZSBcIkVJUFwiIGluIGNhcHMgdG8gYWRoZXJlXHJcbi8vIHRvIGV0aF9zaWduVHlwZWREYXRhX3Y0LiBDb25mdXNpbmdseSwgZXRoZXJzLmpzIGRvZXMgbm90IGFjY2VwdCB0aGUgRUlQNzEyRG9tYWluIHR5cGUsXHJcbi8vIGJ1dCBpdCdzIGVhc2llciB0byBkZWxldGUgdGhpcyB2YWx1ZSB0aGFuIGNyZWF0ZSBpdFxyXG5leHBvcnQgY29uc3QgZXh0cmFjdEVJUDcxMkRvbWFpblR5cGUgPSAoZG9tYWluOiBFaXA3MTJEb21haW4pOiB7IEVJUDcxMkRvbWFpbjogRWlwNzEyRGF0YUZpZWxkW10gfSA9PiB7XHJcbiAgICBjb25zdCBmaWVsZHMgPSBPYmplY3Qua2V5cyhkb21haW4pLm1hcCgobmFtZSkgPT4gKHsgbmFtZSwgdHlwZTogTkFNRV9UT19UWVBFU1tuYW1lXSB9KSk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIEVJUDcxMkRvbWFpbjogZmllbGRzLFxyXG4gICAgfTtcclxufTtcclxuIl0sInZlcnNpb24iOjN9