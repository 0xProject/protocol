dd45c5f66d300c61958a2761f766d16a
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.schemas = void 0;
const chainConfigurationsSchema = require("./chain_configurations_schema.json");
const chainConfigurationSchema = require("./chain_configuration_schema.json");
const feeModelConfigurationsSchema = require("./fee_model_configurations_schema.json");
const feeModelConfigurationSchema = require("./fee_model_configuration_schema.json");
const firmQuoteRequestSchema = require("./firm_quote_request_schema.json");
const indicativeOtcQuoteResponseSchema = require("./indicative_otc_quote_response_schema.json");
const indicativeQuoteRequestSchema = require("./indicative_quote_request_schema.json");
const integratorsAclSchema = require("./integrators_acl_schema.json");
const integratorAclSchema = require("./integrator_acl_schema.json");
const rfqMakerConfigSchema = require("./rfq_maker_config.json");
const rfqMakerConfigListSchema = require("./rfq_maker_config_list.json");
const signResponseSchema = require("./sign_response_schema.json");
const zeroExFeeConfigurationsSchema = require("./zero_ex_fee_configurations_schema.json");
const zeroExFeeConfigurationSchema = require("./zero_ex_fee_configuration_schema.json");
const zeroExFeeConfigurationEntrySchema = require("./zero_ex_fee_configuration_entry.json");
exports.schemas = {
    chainConfigurationSchema,
    chainConfigurationsSchema,
    feeModelConfigurationSchema,
    feeModelConfigurationsSchema,
    firmQuoteRequestSchema,
    indicativeOtcQuoteResponseSchema,
    indicativeQuoteRequestSchema,
    integratorAclSchema,
    integratorsAclSchema,
    rfqMakerConfigListSchema,
    rfqMakerConfigSchema,
    signResponseSchema,
    zeroExFeeConfigurationsSchema,
    zeroExFeeConfigurationSchema,
    zeroExFeeConfigurationEntrySchema,
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2Rhdmlkd2Fsc2gvY29kZS1sb2NhbC8weC1yZnEtYXBpL3NyYy9jb3JlL3NjaGVtYXMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0ZBQWdGO0FBQ2hGLDhFQUE4RTtBQUM5RSx1RkFBdUY7QUFDdkYscUZBQXFGO0FBQ3JGLDJFQUEyRTtBQUMzRSxnR0FBZ0c7QUFDaEcsdUZBQXVGO0FBQ3ZGLHNFQUFzRTtBQUN0RSxvRUFBb0U7QUFDcEUsZ0VBQWdFO0FBQ2hFLHlFQUF5RTtBQUN6RSxrRUFBa0U7QUFDbEUsMEZBQTBGO0FBQzFGLHdGQUF3RjtBQUN4Riw0RkFBNEY7QUFFL0UsUUFBQSxPQUFPLEdBQUc7SUFDbkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QiwyQkFBMkI7SUFDM0IsNEJBQTRCO0lBQzVCLHNCQUFzQjtJQUN0QixnQ0FBZ0M7SUFDaEMsNEJBQTRCO0lBQzVCLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsd0JBQXdCO0lBQ3hCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsNkJBQTZCO0lBQzdCLDRCQUE0QjtJQUM1QixpQ0FBaUM7Q0FDcEMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvZGF2aWR3YWxzaC9jb2RlLWxvY2FsLzB4LXJmcS1hcGkvc3JjL2NvcmUvc2NoZW1hcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjaGFpbkNvbmZpZ3VyYXRpb25zU2NoZW1hIGZyb20gJy4vY2hhaW5fY29uZmlndXJhdGlvbnNfc2NoZW1hLmpzb24nO1xuaW1wb3J0ICogYXMgY2hhaW5Db25maWd1cmF0aW9uU2NoZW1hIGZyb20gJy4vY2hhaW5fY29uZmlndXJhdGlvbl9zY2hlbWEuanNvbic7XG5pbXBvcnQgKiBhcyBmZWVNb2RlbENvbmZpZ3VyYXRpb25zU2NoZW1hIGZyb20gJy4vZmVlX21vZGVsX2NvbmZpZ3VyYXRpb25zX3NjaGVtYS5qc29uJztcbmltcG9ydCAqIGFzIGZlZU1vZGVsQ29uZmlndXJhdGlvblNjaGVtYSBmcm9tICcuL2ZlZV9tb2RlbF9jb25maWd1cmF0aW9uX3NjaGVtYS5qc29uJztcbmltcG9ydCAqIGFzIGZpcm1RdW90ZVJlcXVlc3RTY2hlbWEgZnJvbSAnLi9maXJtX3F1b3RlX3JlcXVlc3Rfc2NoZW1hLmpzb24nO1xuaW1wb3J0ICogYXMgaW5kaWNhdGl2ZU90Y1F1b3RlUmVzcG9uc2VTY2hlbWEgZnJvbSAnLi9pbmRpY2F0aXZlX290Y19xdW90ZV9yZXNwb25zZV9zY2hlbWEuanNvbic7XG5pbXBvcnQgKiBhcyBpbmRpY2F0aXZlUXVvdGVSZXF1ZXN0U2NoZW1hIGZyb20gJy4vaW5kaWNhdGl2ZV9xdW90ZV9yZXF1ZXN0X3NjaGVtYS5qc29uJztcbmltcG9ydCAqIGFzIGludGVncmF0b3JzQWNsU2NoZW1hIGZyb20gJy4vaW50ZWdyYXRvcnNfYWNsX3NjaGVtYS5qc29uJztcbmltcG9ydCAqIGFzIGludGVncmF0b3JBY2xTY2hlbWEgZnJvbSAnLi9pbnRlZ3JhdG9yX2FjbF9zY2hlbWEuanNvbic7XG5pbXBvcnQgKiBhcyByZnFNYWtlckNvbmZpZ1NjaGVtYSBmcm9tICcuL3JmcV9tYWtlcl9jb25maWcuanNvbic7XG5pbXBvcnQgKiBhcyByZnFNYWtlckNvbmZpZ0xpc3RTY2hlbWEgZnJvbSAnLi9yZnFfbWFrZXJfY29uZmlnX2xpc3QuanNvbic7XG5pbXBvcnQgKiBhcyBzaWduUmVzcG9uc2VTY2hlbWEgZnJvbSAnLi9zaWduX3Jlc3BvbnNlX3NjaGVtYS5qc29uJztcbmltcG9ydCAqIGFzIHplcm9FeEZlZUNvbmZpZ3VyYXRpb25zU2NoZW1hIGZyb20gJy4vemVyb19leF9mZWVfY29uZmlndXJhdGlvbnNfc2NoZW1hLmpzb24nO1xuaW1wb3J0ICogYXMgemVyb0V4RmVlQ29uZmlndXJhdGlvblNjaGVtYSBmcm9tICcuL3plcm9fZXhfZmVlX2NvbmZpZ3VyYXRpb25fc2NoZW1hLmpzb24nO1xuaW1wb3J0ICogYXMgemVyb0V4RmVlQ29uZmlndXJhdGlvbkVudHJ5U2NoZW1hIGZyb20gJy4vemVyb19leF9mZWVfY29uZmlndXJhdGlvbl9lbnRyeS5qc29uJztcblxuZXhwb3J0IGNvbnN0IHNjaGVtYXMgPSB7XG4gICAgY2hhaW5Db25maWd1cmF0aW9uU2NoZW1hLFxuICAgIGNoYWluQ29uZmlndXJhdGlvbnNTY2hlbWEsXG4gICAgZmVlTW9kZWxDb25maWd1cmF0aW9uU2NoZW1hLFxuICAgIGZlZU1vZGVsQ29uZmlndXJhdGlvbnNTY2hlbWEsXG4gICAgZmlybVF1b3RlUmVxdWVzdFNjaGVtYSxcbiAgICBpbmRpY2F0aXZlT3RjUXVvdGVSZXNwb25zZVNjaGVtYSxcbiAgICBpbmRpY2F0aXZlUXVvdGVSZXF1ZXN0U2NoZW1hLFxuICAgIGludGVncmF0b3JBY2xTY2hlbWEsXG4gICAgaW50ZWdyYXRvcnNBY2xTY2hlbWEsXG4gICAgcmZxTWFrZXJDb25maWdMaXN0U2NoZW1hLFxuICAgIHJmcU1ha2VyQ29uZmlnU2NoZW1hLFxuICAgIHNpZ25SZXNwb25zZVNjaGVtYSxcbiAgICB6ZXJvRXhGZWVDb25maWd1cmF0aW9uc1NjaGVtYSxcbiAgICB6ZXJvRXhGZWVDb25maWd1cmF0aW9uU2NoZW1hLFxuICAgIHplcm9FeEZlZUNvbmZpZ3VyYXRpb25FbnRyeVNjaGVtYSxcbn07XG4iXSwidmVyc2lvbiI6M30=