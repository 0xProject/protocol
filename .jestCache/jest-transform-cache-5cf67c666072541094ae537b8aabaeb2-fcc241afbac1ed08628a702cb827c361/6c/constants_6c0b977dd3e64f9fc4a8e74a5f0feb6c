f6b496f810f51167bc37b6831baac3d4
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZERO_EX_FEE_CONFIGURATIONS = exports.MAINET_TOKEN_ADDRESSES = exports.MOCK_STORED_FEE = exports.MOCK_FEE = exports.MOCK_STORED_META_TRANSACTION = exports.MOCK_META_TRANSACTION = exports.MOCK_PERMIT_CALLDATA = exports.MOCK_PERMIT_APPROVAL = exports.MOCK_EXECUTE_META_TRANSACTION_CALLDATA = exports.MOCK_EXECUTE_META_TRANSACTION_APPROVAL = exports.TEST_DECODED_RFQ_ORDER_FILLED_EVENT_LOG = exports.TEST_RFQ_ORDER_FILLED_EVENT_TAKER_AMOUNT = exports.TEST_RFQ_ORDER_FILLED_EVENT_LOG = exports.getProvider = exports.WORKER_TEST_PRIVATE_KEY = exports.WORKER_TEST_ADDRESS = exports.MATCHA_AFFILIATE_ENCODED_PARTIAL_ORDER_DATA = exports.MATCHA_AFFILIATE_ADDRESS = exports.AFFILIATE_DATA_SELECTOR = exports.NULL_ADDRESS = exports.SYMBOL_TO_ADDRESS = exports.UNKNOWN_TOKEN_ADDRESS = exports.WETH_TOKEN_ADDRESS = exports.ZRX_TOKEN_ADDRESS = exports.ETH_TOKEN_ADDRESS = exports.CONTRACT_ADDRESSES = exports.MAX_MINT_AMOUNT = exports.MAX_INT = exports.CHAIN_ID = void 0;
const contract_addresses_1 = require("@0x/contract-addresses");
const dev_utils_1 = require("@0x/dev-utils");
const protocol_utils_1 = require("@0x/protocol-utils");
Object.defineProperty(exports, "ETH_TOKEN_ADDRESS", { enumerable: true, get: function () { return protocol_utils_1.ETH_TOKEN_ADDRESS; } });
const utils_1 = require("@0x/utils");
const constants_1 = require("../src/core/constants");
const pair_utils_1 = require("../src/core/pair_utils");
const types_1 = require("../src/core/types");
exports.CHAIN_ID = 1337;
// tslint:disable-next-line:custom-no-magic-numbers
exports.MAX_INT = new utils_1.BigNumber(2).pow(256).minus(1);
exports.MAX_MINT_AMOUNT = new utils_1.BigNumber('10000000000000000000000');
exports.CONTRACT_ADDRESSES = (0, contract_addresses_1.getContractAddressesForChainOrThrow)(exports.CHAIN_ID);
exports.ZRX_TOKEN_ADDRESS = exports.CONTRACT_ADDRESSES.zrxToken;
exports.WETH_TOKEN_ADDRESS = exports.CONTRACT_ADDRESSES.etherToken;
exports.UNKNOWN_TOKEN_ADDRESS = '0xbe0037eaf2d64fe5529bca93c18c9702d3930376';
exports.SYMBOL_TO_ADDRESS = {
    ZRX: exports.ZRX_TOKEN_ADDRESS,
    WETH: exports.WETH_TOKEN_ADDRESS,
    ETH: protocol_utils_1.ETH_TOKEN_ADDRESS,
};
exports.NULL_ADDRESS = '0x0000000000000000000000000000000000000000';
exports.AFFILIATE_DATA_SELECTOR = '869584cd';
exports.MATCHA_AFFILIATE_ADDRESS = '0x86003b044f70dac0abc80ac8957305b6370893ed';
exports.MATCHA_AFFILIATE_ENCODED_PARTIAL_ORDER_DATA = '869584cd00000000000000000000000086003b044f70dac0abc80ac8957305b6370893ed0000000000000000000000000000000000000000000000';
exports.WORKER_TEST_ADDRESS = '0xE834EC434DABA538cd1b9Fe1582052B880BD7e63';
exports.WORKER_TEST_PRIVATE_KEY = '0xff12e391b79415e941a94de3bf3a9aee577aed0731e297d5cfa0b8a1e02fa1d0';
const ganacheConfigs = {
    shouldUseInProcessGanache: false,
    shouldAllowUnlimitedContractSize: true,
    shouldUseFakeGasEstimate: false,
};
const getProvider = () => {
    return dev_utils_1.web3Factory.getRpcProvider(ganacheConfigs);
};
exports.getProvider = getProvider;
exports.TEST_RFQ_ORDER_FILLED_EVENT_LOG = {
    address: '0xdef1c0ded9bec7f1a1670819833240f027b25eff',
    blockHash: '0x4c9f6904bd33f57204a8451de0891b448a7be065c1704e5b6905f382cb31b040',
    blockNumber: 11598119,
    data: '0xf70ec34e807d08cb83757ec62fffd9e0d22db6b4b97f46b78adcf47682c4cccb000000000000000000000000e89bc18cee87c9af8b472635a152704b96dafb8f0000000000000000000000009016cc2122b52ff5d9937c0c1422b78d7e81ceea0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000e44a075a36f7e7010000000000000000000000000000000000000000000000000000000000000000',
    logIndex: 74,
    removed: false,
    topics: ['0x829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c32'],
    transactionHash: '0x2b723137d9328fbe5e64bc2729ef5b1d846bb1d242ae2f3c016b9f70715aa818',
    transactionIndex: 70,
};
exports.TEST_RFQ_ORDER_FILLED_EVENT_TAKER_AMOUNT = new utils_1.BigNumber('10000000000000000');
exports.TEST_DECODED_RFQ_ORDER_FILLED_EVENT_LOG = {
    blockHash: '0x4c9f6904bd33f57204a8451de0891b448a7be065c1704e5b6905f382cb31b040',
    address: '0xdef1c0ded9bec7f1a1670819833240f027b25eff',
    logIndex: 74,
    data: '0xf70ec34e807d08cb83757ec62fffd9e0d22db6b4b97f46b78adcf47682c4cccb000000000000000000000000e89bc18cee87c9af8b472635a152704b96dafb8f0000000000000000000000009016cc2122b52ff5d9937c0c1422b78d7e81ceea0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000e44a075a36f7e7010000000000000000000000000000000000000000000000000000000000000000',
    topics: ['0x829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c32'],
    blockNumber: 11598119,
    args: {
        orderHash: '0xf70ec34e807d08cb83757ec62fffd9e0d22db6b4b97f46b78adcf47682c4cccb',
        maker: '0xe89bc18cee87c9af8b472635a152704b96dafb8f',
        taker: '0x9016cc2122b52ff5d9937c0c1422b78d7e81ceea',
        makerToken: '0x6b175474e89094c44da98b954eedeac495271d0f',
        takerToken: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
        takerTokenFilledAmount: exports.TEST_RFQ_ORDER_FILLED_EVENT_TAKER_AMOUNT,
        // $eslint-fix-me https://github.com/rhinodavid/eslint-fix-me
        // eslint-disable-next-line @typescript-eslint/no-loss-of-precision
        makerTokenFilledAmount: new utils_1.BigNumber(16449968672974825217),
        pool: '0x0000000000000000000000000000000000000000000000000000000000000000',
    },
    transactionIndex: 70,
    transactionHash: '0x2b723137d9328fbe5e64bc2729ef5b1d846bb1d242ae2f3c016b9f70715aa818',
    event: 'RfqOrderFilled',
};
exports.MOCK_EXECUTE_META_TRANSACTION_APPROVAL = {
    kind: types_1.GaslessApprovalTypes.ExecuteMetaTransaction,
    eip712: {
        types: {
            EIP712Domain: [
                { name: 'name', type: 'string' },
                { name: 'version', type: 'string' },
                { name: 'verifyingContract', type: 'address' },
                { name: 'salt', type: 'bytes32' },
            ],
            ...constants_1.EXECUTE_META_TRANSACTION_EIP_712_TYPES,
        },
        primaryType: 'MetaTransaction',
        domain: {
            name: 'Fake Token',
            version: '1',
            verifyingContract: '0xdef1c0ded9bec7f1a1670819833240f027b25eff',
            salt: '0x5a17000000000000000000000000000000000000000000000000000000000000',
        },
        message: {
            nonce: 1,
            from: exports.WORKER_TEST_ADDRESS,
            functionSignature: '0x095ea7b3000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
        },
    },
};
exports.MOCK_EXECUTE_META_TRANSACTION_CALLDATA = '0x0c53c51c000000000000000000000000e834ec434daba538cd1b9fe1582052b880bd7e6300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000';
exports.MOCK_PERMIT_APPROVAL = {
    kind: types_1.GaslessApprovalTypes.Permit,
    eip712: {
        types: {
            EIP712Domain: [
                { name: 'name', type: 'string' },
                { name: 'version', type: 'string' },
                { name: 'verifyingContract', type: 'address' },
                { name: 'salt', type: 'bytes32' },
            ],
            ...constants_1.PERMIT_EIP_712_TYPES,
        },
        primaryType: 'Permit',
        domain: {
            name: 'Fake Token',
            version: '1',
            verifyingContract: '0xdef1c0ded9bec7f1a1670819833240f027b25eff',
            salt: '0x5a17000000000000000000000000000000000000000000000000000000000000',
        },
        message: {
            owner: '0x9016cc2122b52ff5d9937c0c1422b78d7e81ceea',
            spender: '0xdef1c0ded9bec7f1a1670819833240f027b25eff',
            value: '115792089237316195423570985008687907853269984665640564039457584007913129639935',
            nonce: 1,
            deadline: '123456789',
        },
    },
};
exports.MOCK_PERMIT_CALLDATA = '0xd505accf0000000000000000000000009016cc2122b52ff5d9937c0c1422b78d7e81ceea000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000075bcd15000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
exports.MOCK_META_TRANSACTION = new protocol_utils_1.MetaTransaction({
    signer: '0xabcdef',
    sender: '0xabcdef',
    minGasPrice: new utils_1.BigNumber(0),
    maxGasPrice: new utils_1.BigNumber(1),
    expirationTimeSeconds: new utils_1.BigNumber(2),
    salt: new utils_1.BigNumber(3),
    callData: '0x1234567890',
    value: new utils_1.BigNumber(4),
    feeToken: '0xdef',
    feeAmount: new utils_1.BigNumber(5),
    chainId: 1,
    verifyingContract: '0xdef1',
});
exports.MOCK_STORED_META_TRANSACTION = {
    signer: '0xabcdef',
    sender: '0xabcdef',
    minGasPrice: '0',
    maxGasPrice: '1',
    expirationTimeSeconds: '2',
    salt: '3',
    callData: '0x1234567890',
    value: '4',
    feeToken: '0xdef',
    feeAmount: '5',
    chainId: '1',
    verifyingContract: '0xdef1',
};
exports.MOCK_FEE = {
    type: 'fixed',
    token: '0xtoken',
    amount: new utils_1.BigNumber(0),
};
exports.MOCK_STORED_FEE = {
    type: 'fixed',
    token: '0xtoken',
    amount: '0',
    details: undefined,
};
exports.MAINET_TOKEN_ADDRESSES = {
    USDC: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
    WETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
    USDT: '0xdac17f958d2ee523a2206206994597c13d831ec7',
    DAI: '0x6b175474e89094c44da98b954eedeac495271d0f',
    WBTC: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',
    SHIB: '0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce',
    AAVE: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9',
};
exports.ZERO_EX_FEE_CONFIGURATIONS = (() => {
    var _a, _b;
    const zeroExFeeConfigurations = new Map();
    const coinbaseMainnetConfiguration = {
        name: 'Coinbase',
        feeOn: 'volume',
        zeroEx: {
            feeRecipient: '0x4ea754349ace5303c82f0d1d491041e042f2ad22',
            billingType: 'on-chain',
        },
        gas: {
            feeRecipient: null,
            billingType: 'off-chain',
        },
        pairsFeeEntries: new Map([
            [(0, pair_utils_1.toPairString)(exports.MAINET_TOKEN_ADDRESSES.USDC, exports.MAINET_TOKEN_ADDRESSES.WETH), new utils_1.BigNumber(0.5)],
            [(0, pair_utils_1.toPairString)(exports.MAINET_TOKEN_ADDRESSES.USDT, exports.MAINET_TOKEN_ADDRESSES.WETH), new utils_1.BigNumber(0.5)],
        ]),
        cartesianProductFeeEntries: [
            {
                setA: new Set([exports.MAINET_TOKEN_ADDRESSES.USDC, exports.MAINET_TOKEN_ADDRESSES.USDT, exports.MAINET_TOKEN_ADDRESSES.DAI]),
                setB: new Set([exports.MAINET_TOKEN_ADDRESSES.WETH, exports.MAINET_TOKEN_ADDRESSES.WBTC]),
                parameter: new utils_1.BigNumber(0.7),
            },
            {
                setA: new Set([exports.MAINET_TOKEN_ADDRESSES.USDC, exports.MAINET_TOKEN_ADDRESSES.USDT, exports.MAINET_TOKEN_ADDRESSES.DAI]),
                setB: new Set([exports.MAINET_TOKEN_ADDRESSES.USDC, exports.MAINET_TOKEN_ADDRESSES.USDT, exports.MAINET_TOKEN_ADDRESSES.DAI]),
                parameter: new utils_1.BigNumber(0.1),
            },
        ],
        tokensEntries: new Map([
            [exports.MAINET_TOKEN_ADDRESSES.WBTC, new utils_1.BigNumber(1.5)],
            ['*', new utils_1.BigNumber(0.05)],
        ]),
    };
    const defaultMainnetConfiguration = {
        name: 'All',
        feeOn: 'integrator_share',
        zeroEx: {
            feeRecipient: '0x4ea754349ace5303c82f0d1d491041e042f2ad22',
            billingType: 'on-chain',
        },
        gas: {
            feeRecipient: null,
            billingType: 'off-chain',
        },
        pairsFeeEntries: new Map(),
        cartesianProductFeeEntries: [],
        tokensEntries: new Map([
            [exports.MAINET_TOKEN_ADDRESSES.WBTC, new utils_1.BigNumber(1.2)],
            ['*', new utils_1.BigNumber(0.03)],
        ]),
    };
    zeroExFeeConfigurations.set('5062340f-87bb-4e1b-8029-eb8c03a9989c', new Map());
    (_a = zeroExFeeConfigurations.get('5062340f-87bb-4e1b-8029-eb8c03a9989c')) === null || _a === void 0 ? void 0 : _a.set(1, coinbaseMainnetConfiguration);
    zeroExFeeConfigurations.set('*', new Map());
    (_b = zeroExFeeConfigurations.get('*')) === null || _b === void 0 ? void 0 : _b.set(1, defaultMainnetConfiguration);
    return zeroExFeeConfigurations;
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,