name: Deploy API

on:
  workflow_dispatch:
    inputs:
      image_identifier:
        description: Image identifier, e.g. apps:api__8aaa3432e60fc32 or 0x/api:8aaa3432e60fc3223234244524
        type: string
        required: true
      environment:
        description: Environment(s) to deploy to
        type: choice
        options:
          # - prod-all
          # - prod-arbitrum
          # - prod-avalanche
          # - prod-bsc
          # - prod-celo
          # - prod-ethereum
          # - prod-fantom
          # - prod-optimism
          # - prod-polygon
          # - staging-all
          # - staging-bsc
          - staging-polygon
        default: staging-polygon

jobs:
  deploy:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: arn:aws:iam::883408475785:role/github-actions
      #     aws-region: us-east-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      #   - name: Check that the image exists
      #     id: check-for-image
      #     run: |
      #       echo "WORKSPACE_NAME=api"
      #       echo "WORKSPACE_HASH=${{ inputs.image_identifier }}"
      #       ./.github/scripts/check-for-image.sh
      #     shell: bash

      # - if: ${{ steps.check-for-image.outputs.image-exists == false }}
      #   name: Exit
      #   run: |
      #     echo "Image for API at ${{ inputs.image_identifier }} does not exist"
      #     exit 1
      #   shell: bash

      - name: Create configuration
        uses: rishabhgupta/split-by@v1
        id: conf
        with:
          string: ${{ inputs.environment }}
          split-by: "-"

      - name: Create environment variables (ethereum)
        run: |
          echo "folder_env=${{ steps.conf.outputs._0 }}" >> $GITHUB_ENV
          echo "chain=${{ steps.conf.outputs._1 }}" >> $GITHUB_ENV

      #
      # Make the changes to 0x-main-infra
      #

      - name: Checkout 0x-main-infra
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: 0xProject/0x-main-infra

      - name: Update API configs (Ethereum)
        if: env.chain == 'ethereum' || env.chain == 'all'
        run: |
          sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/common/*.yml env/0x-api/${{ env.folder_env }}/apis/*.yml

      - name: Update API configs (Ethereum Gorli)
        if: env.chain == 'ethereum' || (env.chain == 'all' && env.folder_env == 'prod')
        run: |
          sed -i -e 's/newTag:.*/newTag: ${{ inputs.git_commit_id }}/g' clusters/main-cluster/kubernetes/goerli-api/kustomization.yaml

      - name: Update API configs (Arbitrum)
        if: env.chain == 'arbitrum' || (env.chain == 'all' && env.folder_env == 'prod')
        run: |
          sed -i -e 's/newTag:.*/newTag: ${{ inputs.git_commit_id }}/g' clusters/main-cluster/kubernetes/arbitrum-api/kustomization.yaml

      - name: Update API configs (BSC)
        if: env.chain == 'bsc' || env.chain == 'all'
        run: sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/apis/bsc/*.yml

      - name: Update API configs (Polygon)
        if: env.chain == 'polygon' || env.chain == 'all'
        run: |
          sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/apis/polygon/*.yml

      - name: Update API configs (Polygon Mumbai)
        if: env.chain == 'polygon' || (env.chain == 'all' && env.folder_env == 'prod')
        run: |
          sed -i -e 's/newTag:.*/newTag: ${{ inputs.git_commit_id }}/g' clusters/main-cluster/kubernetes/mumbai-api/kustomization.yaml

      - name: Update API configs (Avalanche) || env.chain == 'all'
        if: env.chain == 'avalanche' || (env.chain == 'all' && env.folder_env != 'staging')
        run: |
          sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/apis/avalanche/*.yml

      - name: Update API configs (Fantom)
        if: env.chain == 'fantom' || (env.chain == 'all' && env.folder_env != 'staging')
        run: |
          sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/apis/fantom/*.yml

      - name: Update API configs (Celo)
        if: env.chain == 'celo' || (env.chain == 'all' && env.folder_env != 'staging')
        run: |
          sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/apis/celo/*.yml

      - name: Update API configs (Optimism)
        if: env.chain == 'optimism' || (env.chain == 'all' && env.folder_env != 'staging')
        run: |
          sed -i -e 's/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:.*"/"883408475785\.dkr\.ecr\.us-east-1\.amazonaws\.com\/0x\/api\:${{ inputs.git_commit_id }}"/g' env/0x-api/${{ env.folder_env }}/apis/optimism/*.yml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          author: ${{ github.event.sender.login }} <${{ github.event.sender.login }}@users.noreply.github.com>
          commit-message: "api/${{ env.chain }}/${{ env.folder_env }}: Deploy ${{ inputs.image_identifier }}"
          title: "[api][${{ env.chain }}][${{ env.folder_env }}] Deploy ${{ inputs.image_identifier }}"
          branch: "0xApi/${{ env.chain }}/${{ env.folder_env }}/${{ inputs.image_identifier }//[:_]/}"
          body: |
            ## Automated deploy action for the workspace: API
            Triggered by @${{ github.event.sender.login }}
