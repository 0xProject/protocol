{
    "schemaVersion": "2.0.0",
    "contractName": "TestCurve",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "contract IERC20TokenV06",
                        "name": "sellToken_",
                        "type": "address"
                    },
                    {
                        "internalType": "contract TestMintableERC20Token",
                        "name": "buyToken_",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "buyAmount_",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "payable",
                "type": "constructor"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "internalType": "bytes4",
                        "name": "selector",
                        "type": "bytes4"
                    },
                    {
                        "indexed": false,
                        "internalType": "int128",
                        "name": "fromCoinIdx",
                        "type": "int128"
                    },
                    {
                        "indexed": false,
                        "internalType": "int128",
                        "name": "toCoinIdx",
                        "type": "int128"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "sellAmount",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "minBuyAmount",
                        "type": "uint256"
                    }
                ],
                "name": "CurveCalled",
                "type": "event"
            },
            {
                "stateMutability": "payable",
                "type": "fallback"
            },
            {
                "inputs": [],
                "name": "BASE_SWAP_SELECTOR",
                "outputs": [
                    {
                        "internalType": "bytes4",
                        "name": "",
                        "type": "bytes4"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "BUY_TOKEN_COIN_IDX",
                "outputs": [
                    {
                        "internalType": "int128",
                        "name": "",
                        "type": "int128"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "ETH_COIN_IDX",
                "outputs": [
                    {
                        "internalType": "int128",
                        "name": "",
                        "type": "int128"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "RETURN_BOUGHT_AMOUNT_SELECTOR_FLAG",
                "outputs": [
                    {
                        "internalType": "bytes4",
                        "name": "",
                        "type": "bytes4"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "SELL_TOKEN_COIN_IDX",
                "outputs": [
                    {
                        "internalType": "int128",
                        "name": "",
                        "type": "int128"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "buyAmount",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "buyToken",
                "outputs": [
                    {
                        "internalType": "contract TestMintableERC20Token",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "sellToken",
                "outputs": [
                    {
                        "internalType": "contract IERC20TokenV06",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x60806040526040516107eb3803806107eb8339810160408190526100229161005a565b600180546001600160a01b039485166001600160a01b03199182161790915560028054939094169216919091179091556000556100b4565b60008060006060848603121561006e578283fd5b83516100798161009c565b602085015190935061008a8161009c565b80925050604084015190509250925092565b6001600160a01b03811681146100b157600080fd5b50565b610728806100c36000396000f3fe60806040526004361061007f5760003560e01c8063a48217191161004e578063a4821719146103d4578063bbb702ae146103e9578063c3f1bb851461040b578063fcb3db131461042057610086565b80631fa70531146103505780633eebbc511461037b57806387a2bbf21461039d5780639769f0b0146103b257610086565b3661008657005b60006100923682610506565b90507c0100000000000000000000000000000000000000000000000000000000811615157fffff00000000000000000000000000000000000000000000000000000000000082167f1234000000000000000000000000000000000000000000000000000000000000811461013b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101329061063c565b60405180910390fd5b600080808061014d36600481846106ca565b81019061015a9190610546565b93509350935093506000600f0b84600f0b141561021f576001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906101cb90339030908790600401610589565b602060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d91906104df565b505b600f83900b600114156102bd576002546000546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f1991610286913391906004016105ba565b600060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050506102fb565b600f83900b600214156102fb5760008054604051339282156108fc02929190818181858888f193505050501580156102f9573d6000803e3d6000fd5b505b7fc4eb16056644b46322b49cec42ed1d0c9c49ede515361f6b3b9f09aeff9b50053488868686866040516103349695949392919061067c565b60405180910390a1851561034e5760005460005260206000f35b005b34801561035c57600080fd5b50610365610435565b6040516103729190610673565b60405180910390f35b34801561038757600080fd5b5061039061043b565b60405161037291906105e0565b3480156103a957600080fd5b5061039061045f565b3480156103be57600080fd5b506103c7610480565b604051610372919061060d565b3480156103e057600080fd5b506103c761049c565b3480156103f557600080fd5b506103fe6104b8565b604051610372919061062e565b34801561041757600080fd5b506103fe6104bd565b34801561042c57600080fd5b506103fe6104c2565b60005481565b7f123400000000000000000000000000000000000000000000000000000000000081565b7c010000000000000000000000000000000000000000000000000000000081565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600181565b600081565b600281565b8035600f81900b81146104d957600080fd5b92915050565b6000602082840312156104f0578081fd5b815180151581146104ff578182fd5b9392505050565b600060208284031215610517578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146104ff578182fd5b6000806000806080858703121561055b578283fd5b61056586866104c7565b935061057486602087016104c7565b93969395505050506040820135916060013590565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600f9190910b815260200190565b60208082526010908201527f5465737443757276652f52455645525400000000000000000000000000000000604082015260600190565b90815260200190565b9586527fffffffff00000000000000000000000000000000000000000000000000000000949094166020860152600f92830b6040860152910b6060840152608083015260a082015260c00190565b600080858511156106d9578182fd5b838611156106e5578182fd5b505082019391909203915056fea26469706673582212203b56396a38439d6f4626fed1115501855f6417278690af9d99dfcd0481cd5d9b64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7EB CODESIZE SUB DUP1 PUSH2 0x7EB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x5A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SSTORE PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x79 DUP2 PUSH2 0x9C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x8A DUP2 PUSH2 0x9C JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x728 DUP1 PUSH2 0xC3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4821719 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xBBB702AE EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xC3F1BB85 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xFCB3DB13 EQ PUSH2 0x420 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x1FA70531 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x3EEBBC51 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x87A2BBF2 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x3B2 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0x92 CALLDATASIZE DUP3 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1234000000000000000000000000000000000000000000000000000000000000 DUP2 EQ PUSH2 0x13B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132 SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0xF SIGNEXTEND DUP5 PUSH1 0xF SIGNEXTEND EQ ISZERO PUSH2 0x21F JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1CB SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x589 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST POP JUMPDEST PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH1 0x1 EQ ISZERO PUSH2 0x2BD JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH2 0x286 SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2FB JUMP JUMPDEST PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH1 0x2 EQ ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD CALLER SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH32 0xC4EB16056644B46322B49CEC42ED1D0C9C49EDE515361F6B3B9F09AEFF9B5005 CALLVALUE DUP9 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x334 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP6 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x45F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x49C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x1234000000000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4FF JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x517 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x4FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x55B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x565 DUP7 DUP7 PUSH2 0x4C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x574 DUP7 PUSH1 0x20 DUP8 ADD PUSH2 0x4C7 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5465737443757276652F52455645525400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xF SWAP3 DUP4 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x6D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x6E5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE JUMP CODECOPY PUSH11 0x38439D6F4626FED1115501 DUP6 0x5F PUSH5 0x17278690AF SWAP14 SWAP10 0xDF 0xCD DIV DUP2 0xCD 0x5D SWAP12 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
                "sourceMap": "785:2232:0:-:0;;;1464:259;;;;;;;;;;;;;;;;;;:::i;:::-;1632:9;:22;;-1:-1:-1;;;;;1632:22:0;;;-1:-1:-1;;;;;;1632:22:0;;;;;;;1664:8;:20;;;;;;;;;;;;;;;1632:9;1694:22;785:2232;;532:639:-1;;;;733:2;721:9;712:7;708:23;704:32;701:2;;;-1:-1;;739:12;701:2;111:6;105:13;123:55;172:5;123:55;:::i;:::-;924:2;1004:22;;298:13;791:96;;-1:-1;316:63;298:13;316:63;:::i;:::-;932:104;;;;1073:2;1127:9;1123:22;469:13;1081:74;;695:476;;;;;:::o;1731:161::-;-1:-1;;;;;1586:54;;1812:57;;1802:2;;1883:1;;1873:12;1802:2;1796:96;:::o;:::-;785:2232:0;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x60806040526004361061007f5760003560e01c8063a48217191161004e578063a4821719146103d4578063bbb702ae146103e9578063c3f1bb851461040b578063fcb3db131461042057610086565b80631fa70531146103505780633eebbc511461037b57806387a2bbf21461039d5780639769f0b0146103b257610086565b3661008657005b60006100923682610506565b90507c0100000000000000000000000000000000000000000000000000000000811615157fffff00000000000000000000000000000000000000000000000000000000000082167f1234000000000000000000000000000000000000000000000000000000000000811461013b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101329061063c565b60405180910390fd5b600080808061014d36600481846106ca565b81019061015a9190610546565b93509350935093506000600f0b84600f0b141561021f576001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906101cb90339030908790600401610589565b602060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d91906104df565b505b600f83900b600114156102bd576002546000546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916340c10f1991610286913391906004016105ba565b600060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050506102fb565b600f83900b600214156102fb5760008054604051339282156108fc02929190818181858888f193505050501580156102f9573d6000803e3d6000fd5b505b7fc4eb16056644b46322b49cec42ed1d0c9c49ede515361f6b3b9f09aeff9b50053488868686866040516103349695949392919061067c565b60405180910390a1851561034e5760005460005260206000f35b005b34801561035c57600080fd5b50610365610435565b6040516103729190610673565b60405180910390f35b34801561038757600080fd5b5061039061043b565b60405161037291906105e0565b3480156103a957600080fd5b5061039061045f565b3480156103be57600080fd5b506103c7610480565b604051610372919061060d565b3480156103e057600080fd5b506103c761049c565b3480156103f557600080fd5b506103fe6104b8565b604051610372919061062e565b34801561041757600080fd5b506103fe6104bd565b34801561042c57600080fd5b506103fe6104c2565b60005481565b7f123400000000000000000000000000000000000000000000000000000000000081565b7c010000000000000000000000000000000000000000000000000000000081565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600181565b600081565b600281565b8035600f81900b81146104d957600080fd5b92915050565b6000602082840312156104f0578081fd5b815180151581146104ff578182fd5b9392505050565b600060208284031215610517578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146104ff578182fd5b6000806000806080858703121561055b578283fd5b61056586866104c7565b935061057486602087016104c7565b93969395505050506040820135916060013590565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600f9190910b815260200190565b60208082526010908201527f5465737443757276652f52455645525400000000000000000000000000000000604082015260600190565b90815260200190565b9586527fffffffff00000000000000000000000000000000000000000000000000000000949094166020860152600f92830b6040860152910b6060840152608083015260a082015260c00190565b600080858511156106d9578182fd5b838611156106e5578182fd5b505082019391909203915056fea26469706673582212203b56396a38439d6f4626fed1115501855f6417278690af9d99dfcd0481cd5d9b64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4821719 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xBBB702AE EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xC3F1BB85 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xFCB3DB13 EQ PUSH2 0x420 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x1FA70531 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x3EEBBC51 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x87A2BBF2 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x9769F0B0 EQ PUSH2 0x3B2 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0x92 CALLDATASIZE DUP3 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x1234000000000000000000000000000000000000000000000000000000000000 DUP2 EQ PUSH2 0x13B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132 SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0xF SIGNEXTEND DUP5 PUSH1 0xF SIGNEXTEND EQ ISZERO PUSH2 0x21F JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1CB SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x589 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST POP JUMPDEST PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH1 0x1 EQ ISZERO PUSH2 0x2BD JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH2 0x286 SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2FB JUMP JUMPDEST PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH1 0x2 EQ ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD CALLER SWAP3 DUP3 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH32 0xC4EB16056644B46322B49CEC42ED1D0C9C49EDE515361F6B3B9F09AEFF9B5005 CALLVALUE DUP9 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x334 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP6 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0x45F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x60D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x49C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x1234000000000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4FF JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x517 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x4FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x55B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x565 DUP7 DUP7 PUSH2 0x4C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x574 DUP7 PUSH1 0x20 DUP8 ADD PUSH2 0x4C7 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5465737443757276652F52455645525400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xF SWAP3 DUP4 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x6D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x6E5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE JUMP CODECOPY PUSH11 0x38439D6F4626FED1115501 DUP6 0x5F PUSH5 0x17278690AF SWAP14 SWAP10 0xDF 0xCD DIV DUP2 0xCD 0x5D SWAP12 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
                "sourceMap": "785:2232:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:15;1820:30;1831:8;1802:15;1820:30;:::i;:::-;1802:48;-1:-1:-1;1916:34:0;1905:45;;1904:54;;1990:21;;;2045:18;2029:34;;2021:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2108:18;;;;2246:12;:8;2255:1;2246:8;2108:18;2246:12;:::i;:::-;2235:60;;;;;;;:::i;:::-;2094:201;;;;;;;;1248:1;2309:34;;:11;:34;;;2305:126;;;2359:9;;:61;;;;;:9;;;;;:22;;:61;;2382:10;;2402:4;;2409:10;;2359:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2305:126;2444:31;;;;1299:1;2444:31;2440:190;;;2491:8;;;2517:9;2491:36;;;;;:8;;;;;:13;;:36;;2505:10;;2517:9;2491:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:190;;;2548:25;;;;1344:1;2548:25;2544:86;;;2609:9;;;2589:30;;:10;;:30;;;;;2609:9;2589:30;;2609:9;2589:30;2609:9;2589:10;:30;;;;;;;;;;;;;;;;;;;;;2544:86;2644:164;2669:9;2692:8;2714:11;2739:9;2762:10;2786:12;2644:164;;;;;;;;;;;:::i;:::-;;;;;;;;2822:24;2818:157;;;2905:14;2899:21;2896:1;2889:32;2948:2;2945:1;2938:13;2871:94;2995:12;1352:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1066:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1126:70::-;;;;;;;;;;;;;:::i;1382:31::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1419:38::-;;;;;;;;;;;;;:::i;1255:45::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1203:46::-;;;;;;;;;;;;;:::i;1306:39::-;;;;;;;;;;;;;:::i;1352:24::-;;;;:::o;1066:54::-;;;:::o;1126:70::-;;;:::o;1382:31::-;;;;;;:::o;1419:38::-;;;;;;:::o;1255:45::-;1299:1;1255:45;:::o;1203:46::-;1248:1;1203:46;:::o;1306:39::-;1344:1;1306:39;:::o;275:128:-1:-;341:20;;6965:2;6954:21;;;8513:34;;8503:2;;8561:1;;8551:12;8503:2;326:77;;;;:::o;547:257::-;;659:2;647:9;638:7;634:23;630:32;627:2;;;-1:-1;;665:12;627:2;86:6;80:13;8296:5;6716:13;6709:21;8274:5;8271:32;8261:2;;-1:-1;;8307:12;8261:2;717:71;621:183;-1:-1;;;621:183::o;811:239::-;;914:2;902:9;893:7;889:23;885:32;882:2;;;-1:-1;;920:12;882:2;219:6;206:20;6814:66;8418:5;6803:78;8394:5;8391:34;8381:2;;-1:-1;;8429:12;1057:613;;;;;1210:3;1198:9;1189:7;1185:23;1181:33;1178:2;;;-1:-1;;1217:12;1178:2;1279:52;1323:7;1299:22;1279:52;:::i;:::-;1269:62;;1386:52;1430:7;1368:2;1410:9;1406:22;1386:52;:::i;:::-;1172:498;;1376:62;;-1:-1;;;;1475:2;1514:22;;477:20;;1583:2;1622:22;477:20;;1172:498::o;2875:476::-;7060:42;7049:54;;;1756:58;;7049:54;;;;3254:2;3239:18;;1756:58;3337:2;3322:18;;2826:37;;;;3074:2;3059:18;;3045:306::o;3358:349::-;7060:42;7049:54;;;;1756:58;;3693:2;3678:18;;2826:37;3521:2;3506:18;;3492:215::o;3714:218::-;6814:66;6803:78;;;;1895:36;;3839:2;3824:18;;3810:122::o;3939:266::-;7060:42;7049:54;;;;2036:72;;4088:2;4073:18;;4059:146::o;4501:218::-;6965:2;6954:21;;;;2382:36;;4626:2;4611:18;;4597:122::o;4726:416::-;4926:2;4940:47;;;2655:2;4911:18;;;6257:19;2691:18;6297:14;;;2671:39;2729:12;;;4897:245::o;5149:222::-;2826:37;;;5276:2;5261:18;;5247:124::o;5378:768::-;2826:37;;;6814:66;6803:78;;;;5802:2;5787:18;;1895:36;6965:2;6954:21;;;5883:2;5868:18;;2382:36;6954:21;;5964:2;5949:18;;2382:36;6047:3;6032:19;;2826:37;6131:3;6116:19;;2826:37;5639:3;5624:19;;5610:536::o;6325:318::-;;;6475:8;6463:10;6460:24;6457:2;;;-1:-1;;6487:12;6457:2;6522:6;6512:8;6509:20;6506:2;;;-1:-1;;6532:12;6506:2;-1:-1;;6564:31;;;6613:25;;;;;-1:-1;6451:192::o"
            },
            "methodIdentifiers": {
                "BASE_SWAP_SELECTOR()": "3eebbc51",
                "BUY_TOKEN_COIN_IDX()": "bbb702ae",
                "ETH_COIN_IDX()": "fcb3db13",
                "RETURN_BOUGHT_AMOUNT_SELECTOR_FLAG()": "87a2bbf2",
                "SELL_TOKEN_COIN_IDX()": "c3f1bb85",
                "buyAmount()": "1fa70531",
                "buyToken()": "a4821719",
                "sellToken()": "9769f0b0"
            }
        }
    },
    "sourceTreeHashHex": "0x372dd16ae85f6174e59f285057b5b14882841b111163f0e6f492acfa00d7232e",
    "sources": {
        "./TestCurve.sol": {
            "id": 0,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"./TestMintableERC20Token.sol\";\n\ncontract TestCurve {\n\n    event CurveCalled(\n        uint256 value,\n        bytes4 selector,\n        int128 fromCoinIdx,\n        int128 toCoinIdx,\n        uint256 sellAmount,\n        uint256 minBuyAmount\n    );\n\n    // The lower 16 bits of the selector are reserved for flags.\n    bytes4 public constant BASE_SWAP_SELECTOR = 0x12340000;\n    bytes4 public constant RETURN_BOUGHT_AMOUNT_SELECTOR_FLAG = 0x00000001;\n\n    int128 public constant SELL_TOKEN_COIN_IDX = 0;\n    int128 public constant BUY_TOKEN_COIN_IDX = 1;\n    int128 public constant ETH_COIN_IDX = 2;\n\n    uint256 public buyAmount;\n    IERC20TokenV06 public sellToken;\n    TestMintableERC20Token public buyToken;\n\n    constructor(\n        IERC20TokenV06 sellToken_,\n        TestMintableERC20Token buyToken_,\n        uint256 buyAmount_\n    )\n        public\n        payable\n    {\n        sellToken = sellToken_;\n        buyToken = buyToken_;\n        buyAmount = buyAmount_;\n    }\n\n    receive() external payable {}\n\n    fallback() external payable {\n        bytes4 selector = abi.decode(msg.data, (bytes4));\n        bool shouldReturnBoughtAmount =\n            (selector & RETURN_BOUGHT_AMOUNT_SELECTOR_FLAG) != 0x0;\n        bytes4 baseSelector = selector & 0xffff0000;\n        require(baseSelector == BASE_SWAP_SELECTOR, \"TestCurve/REVERT\");\n        (\n            int128 fromCoinIdx,\n            int128 toCoinIdx,\n            uint256 sellAmount,\n            uint256 minBuyAmount\n        ) = abi.decode(msg.data[4:], (int128, int128, uint256, uint256));\n        if (fromCoinIdx == SELL_TOKEN_COIN_IDX) {\n            sellToken.transferFrom(msg.sender, address(this), sellAmount);\n        }\n        if (toCoinIdx == BUY_TOKEN_COIN_IDX) {\n            buyToken.mint(msg.sender, buyAmount);\n        } else if (toCoinIdx == ETH_COIN_IDX) {\n            msg.sender.transfer(buyAmount);\n        }\n        emit CurveCalled(\n            msg.value,\n            selector,\n            fromCoinIdx,\n            toCoinIdx,\n            sellAmount,\n            minBuyAmount\n        );\n        if (shouldReturnBoughtAmount) {\n            assembly {\n                mstore(0, sload(buyAmount_slot))\n                return(0, 32)\n            }\n        }\n        assembly { return(0, 0) }\n    }\n}\n"
        },
        "@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol": {
            "id": 2,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\n\ninterface IERC20TokenV06 {\n\n    // solhint-disable no-simple-event-func-name\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address to, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param from The address of the sender\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n        external\n        returns (bool);\n\n    /// @dev `msg.sender` approves `spender` to spend `value` tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @param value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address spender, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the balance of `owner`.\n    /// @param owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address owner)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the allowance for `spender` to spend from `owner`.\n    /// @param owner The address of the account owning tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the number of decimals this token has.\n    function decimals()\n        external\n        view\n        returns (uint8);\n}\n"
        },
        "./TestMintableERC20Token.sol": {
            "id": 1,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\n\ncontract TestMintableERC20Token {\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    function transfer(address to, uint256 amount)\n        external\n        virtual\n        returns (bool)\n    {\n        return transferFrom(msg.sender, to, amount);\n    }\n\n    function approve(address spender, uint256 amount)\n        external\n        virtual\n        returns (bool)\n    {\n        allowance[msg.sender][spender] = amount;\n        return true;\n    }\n\n    function approveAs(address owner, address spender, uint256 amount)\n        external\n        returns (bool)\n    {\n        allowance[owner][spender] = amount;\n        return true;\n    }\n\n    function mint(address owner, uint256 amount)\n        external\n        virtual\n    {\n        balanceOf[owner] += amount;\n    }\n\n    function burn(address owner, uint256 amount)\n        external\n        virtual\n    {\n        require(balanceOf[owner] >= amount, \"TestMintableERC20Token/INSUFFICIENT_FUNDS\");\n        balanceOf[owner] -= amount;\n    }\n\n    function transferFrom(address from, address to, uint256 amount)\n        public\n        virtual\n        returns (bool)\n    {\n        if (from != msg.sender) {\n            require(\n                allowance[from][msg.sender] >= amount,\n                \"TestMintableERC20Token/INSUFFICIENT_ALLOWANCE\"\n            );\n            allowance[from][msg.sender] -= amount;\n        }\n        require(balanceOf[from] >= amount, \"TestMintableERC20Token/INSUFFICIENT_FUNDS\");\n        balanceOf[from] -= amount;\n        balanceOf[to] += amount;\n        return true;\n    }\n\n    function getSpendableAmount(address owner, address spender)\n        external\n        view\n        returns (uint256)\n    {\n        return balanceOf[owner] < allowance[owner][spender]\n            ? balanceOf[owner]\n            : allowance[owner][spender];\n    }\n}\n"
        }
    },
    "sourceCodes": {
        "./TestCurve.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"./TestMintableERC20Token.sol\";\n\ncontract TestCurve {\n\n    event CurveCalled(\n        uint256 value,\n        bytes4 selector,\n        int128 fromCoinIdx,\n        int128 toCoinIdx,\n        uint256 sellAmount,\n        uint256 minBuyAmount\n    );\n\n    // The lower 16 bits of the selector are reserved for flags.\n    bytes4 public constant BASE_SWAP_SELECTOR = 0x12340000;\n    bytes4 public constant RETURN_BOUGHT_AMOUNT_SELECTOR_FLAG = 0x00000001;\n\n    int128 public constant SELL_TOKEN_COIN_IDX = 0;\n    int128 public constant BUY_TOKEN_COIN_IDX = 1;\n    int128 public constant ETH_COIN_IDX = 2;\n\n    uint256 public buyAmount;\n    IERC20TokenV06 public sellToken;\n    TestMintableERC20Token public buyToken;\n\n    constructor(\n        IERC20TokenV06 sellToken_,\n        TestMintableERC20Token buyToken_,\n        uint256 buyAmount_\n    )\n        public\n        payable\n    {\n        sellToken = sellToken_;\n        buyToken = buyToken_;\n        buyAmount = buyAmount_;\n    }\n\n    receive() external payable {}\n\n    fallback() external payable {\n        bytes4 selector = abi.decode(msg.data, (bytes4));\n        bool shouldReturnBoughtAmount =\n            (selector & RETURN_BOUGHT_AMOUNT_SELECTOR_FLAG) != 0x0;\n        bytes4 baseSelector = selector & 0xffff0000;\n        require(baseSelector == BASE_SWAP_SELECTOR, \"TestCurve/REVERT\");\n        (\n            int128 fromCoinIdx,\n            int128 toCoinIdx,\n            uint256 sellAmount,\n            uint256 minBuyAmount\n        ) = abi.decode(msg.data[4:], (int128, int128, uint256, uint256));\n        if (fromCoinIdx == SELL_TOKEN_COIN_IDX) {\n            sellToken.transferFrom(msg.sender, address(this), sellAmount);\n        }\n        if (toCoinIdx == BUY_TOKEN_COIN_IDX) {\n            buyToken.mint(msg.sender, buyAmount);\n        } else if (toCoinIdx == ETH_COIN_IDX) {\n            msg.sender.transfer(buyAmount);\n        }\n        emit CurveCalled(\n            msg.value,\n            selector,\n            fromCoinIdx,\n            toCoinIdx,\n            sellAmount,\n            minBuyAmount\n        );\n        if (shouldReturnBoughtAmount) {\n            assembly {\n                mstore(0, sload(buyAmount_slot))\n                return(0, 32)\n            }\n        }\n        assembly { return(0, 0) }\n    }\n}\n",
        "@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\n\ninterface IERC20TokenV06 {\n\n    // solhint-disable no-simple-event-func-name\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address to, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param from The address of the sender\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n        external\n        returns (bool);\n\n    /// @dev `msg.sender` approves `spender` to spend `value` tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @param value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address spender, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the balance of `owner`.\n    /// @param owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address owner)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the allowance for `spender` to spend from `owner`.\n    /// @param owner The address of the account owning tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the number of decimals this token has.\n    function decimals()\n        external\n        view\n        returns (uint8);\n}\n",
        "./TestMintableERC20Token.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\npragma experimental ABIEncoderV2;\n\n\ncontract TestMintableERC20Token {\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    function transfer(address to, uint256 amount)\n        external\n        virtual\n        returns (bool)\n    {\n        return transferFrom(msg.sender, to, amount);\n    }\n\n    function approve(address spender, uint256 amount)\n        external\n        virtual\n        returns (bool)\n    {\n        allowance[msg.sender][spender] = amount;\n        return true;\n    }\n\n    function approveAs(address owner, address spender, uint256 amount)\n        external\n        returns (bool)\n    {\n        allowance[owner][spender] = amount;\n        return true;\n    }\n\n    function mint(address owner, uint256 amount)\n        external\n        virtual\n    {\n        balanceOf[owner] += amount;\n    }\n\n    function burn(address owner, uint256 amount)\n        external\n        virtual\n    {\n        require(balanceOf[owner] >= amount, \"TestMintableERC20Token/INSUFFICIENT_FUNDS\");\n        balanceOf[owner] -= amount;\n    }\n\n    function transferFrom(address from, address to, uint256 amount)\n        public\n        virtual\n        returns (bool)\n    {\n        if (from != msg.sender) {\n            require(\n                allowance[from][msg.sender] >= amount,\n                \"TestMintableERC20Token/INSUFFICIENT_ALLOWANCE\"\n            );\n            allowance[from][msg.sender] -= amount;\n        }\n        require(balanceOf[from] >= amount, \"TestMintableERC20Token/INSUFFICIENT_FUNDS\");\n        balanceOf[from] -= amount;\n        balanceOf[to] += amount;\n        return true;\n    }\n\n    function getSpendableAmount(address owner, address spender)\n        external\n        view\n        returns (uint256)\n    {\n        return balanceOf[owner] < allowance[owner][spender]\n            ? balanceOf[owner]\n            : allowance[owner][spender];\n    }\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [
                "@0x/contracts-utils=/Users/michaelzhu/protocol/node_modules/@0x/contracts-utils",
                "@0x/contracts-erc20=/Users/michaelzhu/protocol/contracts/zero-ex/node_modules/@0x/contracts-erc20"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap",
                        "evm.methodIdentifiers"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
